(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const n of r)if(n.type==="childList")for(const o of n.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(r){const n={};return r.integrity&&(n.integrity=r.integrity),r.referrerPolicy&&(n.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?n.credentials="include":r.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(r){if(r.ep)return;r.ep=!0;const n=t(r);fetch(r.href,n)}})();/**
* @vue/shared v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**//*! #__NO_SIDE_EFFECTS__ */function co(s){const e=Object.create(null);for(const t of s.split(","))e[t]=1;return t=>t in e}const Je={},Kr=[],_i=()=>{},rh=()=>!1,On=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&(s.charCodeAt(2)>122||s.charCodeAt(2)<97),uo=s=>s.startsWith("onUpdate:"),Et=Object.assign,ho=(s,e)=>{const t=s.indexOf(e);t>-1&&s.splice(t,1)},sh=Object.prototype.hasOwnProperty,Xe=(s,e)=>sh.call(s,e),Re=Array.isArray,Jr=s=>Bn(s)==="[object Map]",xc=s=>Bn(s)==="[object Set]",Ie=s=>typeof s=="function",ut=s=>typeof s=="string",Gi=s=>typeof s=="symbol",it=s=>s!==null&&typeof s=="object",yc=s=>(it(s)||Ie(s))&&Ie(s.then)&&Ie(s.catch),bc=Object.prototype.toString,Bn=s=>bc.call(s),nh=s=>Bn(s).slice(8,-1),wc=s=>Bn(s)==="[object Object]",fo=s=>ut(s)&&s!=="NaN"&&s[0]!=="-"&&""+parseInt(s,10)===s,Ms=co(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),kn=s=>{const e=Object.create(null);return t=>e[t]||(e[t]=s(t))},ah=/-(\w)/g,rr=kn(s=>s.replace(ah,(e,t)=>t?t.toUpperCase():"")),oh=/\B([A-Z])/g,Ar=kn(s=>s.replace(oh,"-$1").toLowerCase()),Mc=kn(s=>s.charAt(0).toUpperCase()+s.slice(1)),Qn=kn(s=>s?`on${Mc(s)}`:""),ir=(s,e)=>!Object.is(s,e),ea=(s,...e)=>{for(let t=0;t<s.length;t++)s[t](...e)},Sc=(s,e,t,i=!1)=>{Object.defineProperty(s,e,{configurable:!0,enumerable:!1,writable:i,value:t})},lh=s=>{const e=parseFloat(s);return isNaN(e)?s:e};let ko;const Un=()=>ko||(ko=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function xr(s){if(Re(s)){const e={};for(let t=0;t<s.length;t++){const i=s[t],r=ut(i)?dh(i):xr(i);if(r)for(const n in r)e[n]=r[n]}return e}else if(ut(s)||it(s))return s}const ch=/;(?![^(]*\))/g,uh=/:([^]+)/,hh=/\/\*[^]*?\*\//g;function dh(s){const e={};return s.replace(hh,"").split(ch).forEach(t=>{if(t){const i=t.split(uh);i.length>1&&(e[i[0].trim()]=i[1].trim())}}),e}function Gt(s){let e="";if(ut(s))e=s;else if(Re(s))for(let t=0;t<s.length;t++){const i=Gt(s[t]);i&&(e+=i+" ")}else if(it(s))for(const t in s)s[t]&&(e+=t+" ");return e.trim()}const fh="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",ph=co(fh);function Ec(s){return!!s||s===""}const Tc=s=>!!(s&&s.__v_isRef===!0),Ls=s=>ut(s)?s:s==null?"":Re(s)||it(s)&&(s.toString===bc||!Ie(s.toString))?Tc(s)?Ls(s.value):JSON.stringify(s,Ac,2):String(s),Ac=(s,e)=>Tc(e)?Ac(s,e.value):Jr(e)?{[`Map(${e.size})`]:[...e.entries()].reduce((t,[i,r],n)=>(t[ta(i,n)+" =>"]=r,t),{})}:xc(e)?{[`Set(${e.size})`]:[...e.values()].map(t=>ta(t))}:Gi(e)?ta(e):it(e)&&!Re(e)&&!wc(e)?String(e):e,ta=(s,e="")=>{var t;return Gi(s)?`Symbol(${(t=s.description)!=null?t:e})`:s};/**
* @vue/reactivity v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let It;class mh{constructor(e=!1){this.detached=e,this._active=!0,this._on=0,this.effects=[],this.cleanups=[],this._isPaused=!1,this.parent=It,!e&&It&&(this.index=(It.scopes||(It.scopes=[])).push(this)-1)}get active(){return this._active}pause(){if(this._active){this._isPaused=!0;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].pause();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].pause()}}resume(){if(this._active&&this._isPaused){this._isPaused=!1;let e,t;if(this.scopes)for(e=0,t=this.scopes.length;e<t;e++)this.scopes[e].resume();for(e=0,t=this.effects.length;e<t;e++)this.effects[e].resume()}}run(e){if(this._active){const t=It;try{return It=this,e()}finally{It=t}}}on(){++this._on===1&&(this.prevScope=It,It=this)}off(){this._on>0&&--this._on===0&&(It=this.prevScope,this.prevScope=void 0)}stop(e){if(this._active){this._active=!1;let t,i;for(t=0,i=this.effects.length;t<i;t++)this.effects[t].stop();for(this.effects.length=0,t=0,i=this.cleanups.length;t<i;t++)this.cleanups[t]();if(this.cleanups.length=0,this.scopes){for(t=0,i=this.scopes.length;t<i;t++)this.scopes[t].stop(!0);this.scopes.length=0}if(!this.detached&&this.parent&&!e){const r=this.parent.scopes.pop();r&&r!==this&&(this.parent.scopes[this.index]=r,r.index=this.index)}this.parent=void 0}}}function gh(){return It}let Ze;const ia=new WeakSet;class Cc{constructor(e){this.fn=e,this.deps=void 0,this.depsTail=void 0,this.flags=5,this.next=void 0,this.cleanup=void 0,this.scheduler=void 0,It&&It.active&&It.effects.push(this)}pause(){this.flags|=64}resume(){this.flags&64&&(this.flags&=-65,ia.has(this)&&(ia.delete(this),this.trigger()))}notify(){this.flags&2&&!(this.flags&32)||this.flags&8||Rc(this)}run(){if(!(this.flags&1))return this.fn();this.flags|=2,Uo(this),Pc(this);const e=Ze,t=oi;Ze=this,oi=!0;try{return this.fn()}finally{Dc(this),Ze=e,oi=t,this.flags&=-3}}stop(){if(this.flags&1){for(let e=this.deps;e;e=e.nextDep)go(e);this.deps=this.depsTail=void 0,Uo(this),this.onStop&&this.onStop(),this.flags&=-2}}trigger(){this.flags&64?ia.add(this):this.scheduler?this.scheduler():this.runIfDirty()}runIfDirty(){Ya(this)&&this.run()}get dirty(){return Ya(this)}}let Lc=0,Ss,Es;function Rc(s,e=!1){if(s.flags|=8,e){s.next=Es,Es=s;return}s.next=Ss,Ss=s}function po(){Lc++}function mo(){if(--Lc>0)return;if(Es){let e=Es;for(Es=void 0;e;){const t=e.next;e.next=void 0,e.flags&=-9,e=t}}let s;for(;Ss;){let e=Ss;for(Ss=void 0;e;){const t=e.next;if(e.next=void 0,e.flags&=-9,e.flags&1)try{e.trigger()}catch(i){s||(s=i)}e=t}}if(s)throw s}function Pc(s){for(let e=s.deps;e;e=e.nextDep)e.version=-1,e.prevActiveLink=e.dep.activeLink,e.dep.activeLink=e}function Dc(s){let e,t=s.depsTail,i=t;for(;i;){const r=i.prevDep;i.version===-1?(i===t&&(t=r),go(i),vh(i)):e=i,i.dep.activeLink=i.prevActiveLink,i.prevActiveLink=void 0,i=r}s.deps=e,s.depsTail=t}function Ya(s){for(let e=s.deps;e;e=e.nextDep)if(e.dep.version!==e.version||e.dep.computed&&(Fc(e.dep.computed)||e.dep.version!==e.version))return!0;return!!s._dirty}function Fc(s){if(s.flags&4&&!(s.flags&16)||(s.flags&=-17,s.globalVersion===Rs)||(s.globalVersion=Rs,!s.isSSR&&s.flags&128&&(!s.deps&&!s._dirty||!Ya(s))))return;s.flags|=2;const e=s.dep,t=Ze,i=oi;Ze=s,oi=!0;try{Pc(s);const r=s.fn(s._value);(e.version===0||ir(r,s._value))&&(s.flags|=128,s._value=r,e.version++)}catch(r){throw e.version++,r}finally{Ze=t,oi=i,Dc(s),s.flags&=-3}}function go(s,e=!1){const{dep:t,prevSub:i,nextSub:r}=s;if(i&&(i.nextSub=r,s.prevSub=void 0),r&&(r.prevSub=i,s.nextSub=void 0),t.subs===s&&(t.subs=i,!i&&t.computed)){t.computed.flags&=-5;for(let n=t.computed.deps;n;n=n.nextDep)go(n,!0)}!e&&!--t.sc&&t.map&&t.map.delete(t.key)}function vh(s){const{prevDep:e,nextDep:t}=s;e&&(e.nextDep=t,s.prevDep=void 0),t&&(t.prevDep=e,s.nextDep=void 0)}let oi=!0;const Ic=[];function Bi(){Ic.push(oi),oi=!1}function ki(){const s=Ic.pop();oi=s===void 0?!0:s}function Uo(s){const{cleanup:e}=s;if(s.cleanup=void 0,e){const t=Ze;Ze=void 0;try{e()}finally{Ze=t}}}let Rs=0;class _h{constructor(e,t){this.sub=e,this.dep=t,this.version=t.version,this.nextDep=this.prevDep=this.nextSub=this.prevSub=this.prevActiveLink=void 0}}class vo{constructor(e){this.computed=e,this.version=0,this.activeLink=void 0,this.subs=void 0,this.map=void 0,this.key=void 0,this.sc=0}track(e){if(!Ze||!oi||Ze===this.computed)return;let t=this.activeLink;if(t===void 0||t.sub!==Ze)t=this.activeLink=new _h(Ze,this),Ze.deps?(t.prevDep=Ze.depsTail,Ze.depsTail.nextDep=t,Ze.depsTail=t):Ze.deps=Ze.depsTail=t,zc(t);else if(t.version===-1&&(t.version=this.version,t.nextDep)){const i=t.nextDep;i.prevDep=t.prevDep,t.prevDep&&(t.prevDep.nextDep=i),t.prevDep=Ze.depsTail,t.nextDep=void 0,Ze.depsTail.nextDep=t,Ze.depsTail=t,Ze.deps===t&&(Ze.deps=i)}return t}trigger(e){this.version++,Rs++,this.notify(e)}notify(e){po();try{for(let t=this.subs;t;t=t.prevSub)t.sub.notify()&&t.sub.dep.notify()}finally{mo()}}}function zc(s){if(s.dep.sc++,s.sub.flags&4){const e=s.dep.computed;if(e&&!s.dep.subs){e.flags|=20;for(let i=e.deps;i;i=i.nextDep)zc(i)}const t=s.dep.subs;t!==s&&(s.prevSub=t,t&&(t.nextSub=s)),s.dep.subs=s}}const Xa=new WeakMap,yr=Symbol(""),$a=Symbol(""),Ps=Symbol("");function wt(s,e,t){if(oi&&Ze){let i=Xa.get(s);i||Xa.set(s,i=new Map);let r=i.get(t);r||(i.set(t,r=new vo),r.map=i,r.key=t),r.track()}}function Ni(s,e,t,i,r,n){const o=Xa.get(s);if(!o){Rs++;return}const a=l=>{l&&l.trigger()};if(po(),e==="clear")o.forEach(a);else{const l=Re(s),c=l&&fo(t);if(l&&t==="length"){const u=Number(i);o.forEach((d,h)=>{(h==="length"||h===Ps||!Gi(h)&&h>=u)&&a(d)})}else switch((t!==void 0||o.has(void 0))&&a(o.get(t)),c&&a(o.get(Ps)),e){case"add":l?c&&a(o.get("length")):(a(o.get(yr)),Jr(s)&&a(o.get($a)));break;case"delete":l||(a(o.get(yr)),Jr(s)&&a(o.get($a)));break;case"set":Jr(s)&&a(o.get(yr));break}}mo()}function Dr(s){const e=Ye(s);return e===s?e:(wt(e,"iterate",Ps),Qt(s)?e:e.map(_t))}function Gn(s){return wt(s=Ye(s),"iterate",Ps),s}const xh={__proto__:null,[Symbol.iterator](){return ra(this,Symbol.iterator,_t)},concat(...s){return Dr(this).concat(...s.map(e=>Re(e)?Dr(e):e))},entries(){return ra(this,"entries",s=>(s[1]=_t(s[1]),s))},every(s,e){return Mi(this,"every",s,e,void 0,arguments)},filter(s,e){return Mi(this,"filter",s,e,t=>t.map(_t),arguments)},find(s,e){return Mi(this,"find",s,e,_t,arguments)},findIndex(s,e){return Mi(this,"findIndex",s,e,void 0,arguments)},findLast(s,e){return Mi(this,"findLast",s,e,_t,arguments)},findLastIndex(s,e){return Mi(this,"findLastIndex",s,e,void 0,arguments)},forEach(s,e){return Mi(this,"forEach",s,e,void 0,arguments)},includes(...s){return sa(this,"includes",s)},indexOf(...s){return sa(this,"indexOf",s)},join(s){return Dr(this).join(s)},lastIndexOf(...s){return sa(this,"lastIndexOf",s)},map(s,e){return Mi(this,"map",s,e,void 0,arguments)},pop(){return us(this,"pop")},push(...s){return us(this,"push",s)},reduce(s,...e){return Go(this,"reduce",s,e)},reduceRight(s,...e){return Go(this,"reduceRight",s,e)},shift(){return us(this,"shift")},some(s,e){return Mi(this,"some",s,e,void 0,arguments)},splice(...s){return us(this,"splice",s)},toReversed(){return Dr(this).toReversed()},toSorted(s){return Dr(this).toSorted(s)},toSpliced(...s){return Dr(this).toSpliced(...s)},unshift(...s){return us(this,"unshift",s)},values(){return ra(this,"values",_t)}};function ra(s,e,t){const i=Gn(s),r=i[e]();return i!==s&&!Qt(s)&&(r._next=r.next,r.next=()=>{const n=r._next();return n.value&&(n.value=t(n.value)),n}),r}const yh=Array.prototype;function Mi(s,e,t,i,r,n){const o=Gn(s),a=o!==s&&!Qt(s),l=o[e];if(l!==yh[e]){const d=l.apply(s,n);return a?_t(d):d}let c=t;o!==s&&(a?c=function(d,h){return t.call(this,_t(d),h,s)}:t.length>2&&(c=function(d,h){return t.call(this,d,h,s)}));const u=l.call(o,c,i);return a&&r?r(u):u}function Go(s,e,t,i){const r=Gn(s);let n=t;return r!==s&&(Qt(s)?t.length>3&&(n=function(o,a,l){return t.call(this,o,a,l,s)}):n=function(o,a,l){return t.call(this,o,_t(a),l,s)}),r[e](n,...i)}function sa(s,e,t){const i=Ye(s);wt(i,"iterate",Ps);const r=i[e](...t);return(r===-1||r===!1)&&bo(t[0])?(t[0]=Ye(t[0]),i[e](...t)):r}function us(s,e,t=[]){Bi(),po();const i=Ye(s)[e].apply(s,t);return mo(),ki(),i}const bh=co("__proto__,__v_isRef,__isVue"),Nc=new Set(Object.getOwnPropertyNames(Symbol).filter(s=>s!=="arguments"&&s!=="caller").map(s=>Symbol[s]).filter(Gi));function wh(s){Gi(s)||(s=String(s));const e=Ye(this);return wt(e,"has",s),e.hasOwnProperty(s)}class Oc{constructor(e=!1,t=!1){this._isReadonly=e,this._isShallow=t}get(e,t,i){if(t==="__v_skip")return e.__v_skip;const r=this._isReadonly,n=this._isShallow;if(t==="__v_isReactive")return!r;if(t==="__v_isReadonly")return r;if(t==="__v_isShallow")return n;if(t==="__v_raw")return i===(r?n?Dh:Gc:n?Uc:kc).get(e)||Object.getPrototypeOf(e)===Object.getPrototypeOf(i)?e:void 0;const o=Re(e);if(!r){let l;if(o&&(l=xh[t]))return l;if(t==="hasOwnProperty")return wh}const a=Reflect.get(e,t,St(e)?e:i);return(Gi(t)?Nc.has(t):bh(t))||(r||wt(e,"get",t),n)?a:St(a)?o&&fo(t)?a:a.value:it(a)?r?Hc(a):xo(a):a}}class Bc extends Oc{constructor(e=!1){super(!1,e)}set(e,t,i,r){let n=e[t];if(!this._isShallow){const l=sr(n);if(!Qt(i)&&!sr(i)&&(n=Ye(n),i=Ye(i)),!Re(e)&&St(n)&&!St(i))return l?!1:(n.value=i,!0)}const o=Re(e)&&fo(t)?Number(t)<e.length:Xe(e,t),a=Reflect.set(e,t,i,St(e)?e:r);return e===Ye(r)&&(o?ir(i,n)&&Ni(e,"set",t,i):Ni(e,"add",t,i)),a}deleteProperty(e,t){const i=Xe(e,t);e[t];const r=Reflect.deleteProperty(e,t);return r&&i&&Ni(e,"delete",t,void 0),r}has(e,t){const i=Reflect.has(e,t);return(!Gi(t)||!Nc.has(t))&&wt(e,"has",t),i}ownKeys(e){return wt(e,"iterate",Re(e)?"length":yr),Reflect.ownKeys(e)}}class Mh extends Oc{constructor(e=!1){super(!0,e)}set(e,t){return!0}deleteProperty(e,t){return!0}}const Sh=new Bc,Eh=new Mh,Th=new Bc(!0);const Za=s=>s,js=s=>Reflect.getPrototypeOf(s);function Ah(s,e,t){return function(...i){const r=this.__v_raw,n=Ye(r),o=Jr(n),a=s==="entries"||s===Symbol.iterator&&o,l=s==="keys"&&o,c=r[s](...i),u=t?Za:e?Cn:_t;return!e&&wt(n,"iterate",l?$a:yr),{next(){const{value:d,done:h}=c.next();return h?{value:d,done:h}:{value:a?[u(d[0]),u(d[1])]:u(d),done:h}},[Symbol.iterator](){return this}}}}function qs(s){return function(...e){return s==="delete"?!1:s==="clear"?void 0:this}}function Ch(s,e){const t={get(r){const n=this.__v_raw,o=Ye(n),a=Ye(r);s||(ir(r,a)&&wt(o,"get",r),wt(o,"get",a));const{has:l}=js(o),c=e?Za:s?Cn:_t;if(l.call(o,r))return c(n.get(r));if(l.call(o,a))return c(n.get(a));n!==o&&n.get(r)},get size(){const r=this.__v_raw;return!s&&wt(Ye(r),"iterate",yr),Reflect.get(r,"size",r)},has(r){const n=this.__v_raw,o=Ye(n),a=Ye(r);return s||(ir(r,a)&&wt(o,"has",r),wt(o,"has",a)),r===a?n.has(r):n.has(r)||n.has(a)},forEach(r,n){const o=this,a=o.__v_raw,l=Ye(a),c=e?Za:s?Cn:_t;return!s&&wt(l,"iterate",yr),a.forEach((u,d)=>r.call(n,c(u),c(d),o))}};return Et(t,s?{add:qs("add"),set:qs("set"),delete:qs("delete"),clear:qs("clear")}:{add(r){!e&&!Qt(r)&&!sr(r)&&(r=Ye(r));const n=Ye(this);return js(n).has.call(n,r)||(n.add(r),Ni(n,"add",r,r)),this},set(r,n){!e&&!Qt(n)&&!sr(n)&&(n=Ye(n));const o=Ye(this),{has:a,get:l}=js(o);let c=a.call(o,r);c||(r=Ye(r),c=a.call(o,r));const u=l.call(o,r);return o.set(r,n),c?ir(n,u)&&Ni(o,"set",r,n):Ni(o,"add",r,n),this},delete(r){const n=Ye(this),{has:o,get:a}=js(n);let l=o.call(n,r);l||(r=Ye(r),l=o.call(n,r)),a&&a.call(n,r);const c=n.delete(r);return l&&Ni(n,"delete",r,void 0),c},clear(){const r=Ye(this),n=r.size!==0,o=r.clear();return n&&Ni(r,"clear",void 0,void 0),o}}),["keys","values","entries",Symbol.iterator].forEach(r=>{t[r]=Ah(r,s,e)}),t}function _o(s,e){const t=Ch(s,e);return(i,r,n)=>r==="__v_isReactive"?!s:r==="__v_isReadonly"?s:r==="__v_raw"?i:Reflect.get(Xe(t,r)&&r in i?t:i,r,n)}const Lh={get:_o(!1,!1)},Rh={get:_o(!1,!0)},Ph={get:_o(!0,!1)};const kc=new WeakMap,Uc=new WeakMap,Gc=new WeakMap,Dh=new WeakMap;function Fh(s){switch(s){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function Ih(s){return s.__v_skip||!Object.isExtensible(s)?0:Fh(nh(s))}function xo(s){return sr(s)?s:yo(s,!1,Sh,Lh,kc)}function zh(s){return yo(s,!1,Th,Rh,Uc)}function Hc(s){return yo(s,!0,Eh,Ph,Gc)}function yo(s,e,t,i,r){if(!it(s)||s.__v_raw&&!(e&&s.__v_isReactive))return s;const n=Ih(s);if(n===0)return s;const o=r.get(s);if(o)return o;const a=new Proxy(s,n===2?i:t);return r.set(s,a),a}function Qr(s){return sr(s)?Qr(s.__v_raw):!!(s&&s.__v_isReactive)}function sr(s){return!!(s&&s.__v_isReadonly)}function Qt(s){return!!(s&&s.__v_isShallow)}function bo(s){return s?!!s.__v_raw:!1}function Ye(s){const e=s&&s.__v_raw;return e?Ye(e):s}function Nh(s){return!Xe(s,"__v_skip")&&Object.isExtensible(s)&&Sc(s,"__v_skip",!0),s}const _t=s=>it(s)?xo(s):s,Cn=s=>it(s)?Hc(s):s;function St(s){return s?s.__v_isRef===!0:!1}function Kt(s){return Oh(s,!1)}function Oh(s,e){return St(s)?s:new Bh(s,e)}class Bh{constructor(e,t){this.dep=new vo,this.__v_isRef=!0,this.__v_isShallow=!1,this._rawValue=t?e:Ye(e),this._value=t?e:_t(e),this.__v_isShallow=t}get value(){return this.dep.track(),this._value}set value(e){const t=this._rawValue,i=this.__v_isShallow||Qt(e)||sr(e);e=i?e:Ye(e),ir(e,t)&&(this._rawValue=e,this._value=i?e:_t(e),this.dep.trigger())}}function ni(s){return St(s)?s.value:s}const kh={get:(s,e,t)=>e==="__v_raw"?s:ni(Reflect.get(s,e,t)),set:(s,e,t,i)=>{const r=s[e];return St(r)&&!St(t)?(r.value=t,!0):Reflect.set(s,e,t,i)}};function Vc(s){return Qr(s)?s:new Proxy(s,kh)}class Uh{constructor(e,t,i){this.fn=e,this.setter=t,this._value=void 0,this.dep=new vo(this),this.__v_isRef=!0,this.deps=void 0,this.depsTail=void 0,this.flags=16,this.globalVersion=Rs-1,this.next=void 0,this.effect=this,this.__v_isReadonly=!t,this.isSSR=i}notify(){if(this.flags|=16,!(this.flags&8)&&Ze!==this)return Rc(this,!0),!0}get value(){const e=this.dep.track();return Fc(this),e&&(e.version=this.dep.version),this._value}set value(e){this.setter&&this.setter(e)}}function Gh(s,e,t=!1){let i,r;return Ie(s)?i=s:(i=s.get,r=s.set),new Uh(i,r,t)}const Ys={},Ln=new WeakMap;let dr;function Hh(s,e=!1,t=dr){if(t){let i=Ln.get(t);i||Ln.set(t,i=[]),i.push(s)}}function Vh(s,e,t=Je){const{immediate:i,deep:r,once:n,scheduler:o,augmentJob:a,call:l}=t,c=x=>r?x:Qt(x)||r===!1||r===0?tr(x,1):tr(x);let u,d,h,m,g=!1,f=!1;if(St(s)?(d=()=>s.value,g=Qt(s)):Qr(s)?(d=()=>c(s),g=!0):Re(s)?(f=!0,g=s.some(x=>Qr(x)||Qt(x)),d=()=>s.map(x=>{if(St(x))return x.value;if(Qr(x))return c(x);if(Ie(x))return l?l(x,2):x()})):Ie(s)?e?d=l?()=>l(s,2):s:d=()=>{if(h){Bi();try{h()}finally{ki()}}const x=dr;dr=u;try{return l?l(s,3,[m]):s(m)}finally{dr=x}}:d=_i,e&&r){const x=d,S=r===!0?1/0:r;d=()=>tr(x(),S)}const p=gh(),v=()=>{u.stop(),p&&p.active&&ho(p.effects,u)};if(n&&e){const x=e;e=(...S)=>{x(...S),v()}}let _=f?new Array(s.length).fill(Ys):Ys;const b=x=>{if(!(!(u.flags&1)||!u.dirty&&!x))if(e){const S=u.run();if(r||g||(f?S.some((E,R)=>ir(E,_[R])):ir(S,_))){h&&h();const E=dr;dr=u;try{const R=[S,_===Ys?void 0:f&&_[0]===Ys?[]:_,m];_=S,l?l(e,3,R):e(...R)}finally{dr=E}}}else u.run()};return a&&a(b),u=new Cc(d),u.scheduler=o?()=>o(b,!1):b,m=x=>Hh(x,!1,u),h=u.onStop=()=>{const x=Ln.get(u);if(x){if(l)l(x,4);else for(const S of x)S();Ln.delete(u)}},e?i?b(!0):_=u.run():o?o(b.bind(null,!0),!0):u.run(),v.pause=u.pause.bind(u),v.resume=u.resume.bind(u),v.stop=v,v}function tr(s,e=1/0,t){if(e<=0||!it(s)||s.__v_skip||(t=t||new Set,t.has(s)))return s;if(t.add(s),e--,St(s))tr(s.value,e,t);else if(Re(s))for(let i=0;i<s.length;i++)tr(s[i],e,t);else if(xc(s)||Jr(s))s.forEach(i=>{tr(i,e,t)});else if(wc(s)){for(const i in s)tr(s[i],e,t);for(const i of Object.getOwnPropertySymbols(s))Object.prototype.propertyIsEnumerable.call(s,i)&&tr(s[i],e,t)}return s}/**
* @vue/runtime-core v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Ns(s,e,t,i){try{return i?s(...i):s()}catch(r){Hn(r,e,t)}}function yi(s,e,t,i){if(Ie(s)){const r=Ns(s,e,t,i);return r&&yc(r)&&r.catch(n=>{Hn(n,e,t)}),r}if(Re(s)){const r=[];for(let n=0;n<s.length;n++)r.push(yi(s[n],e,t,i));return r}}function Hn(s,e,t,i=!0){const r=e?e.vnode:null,{errorHandler:n,throwUnhandledErrorInProduction:o}=e&&e.appContext.config||Je;if(e){let a=e.parent;const l=e.proxy,c=`https://vuejs.org/error-reference/#runtime-${t}`;for(;a;){const u=a.ec;if(u){for(let d=0;d<u.length;d++)if(u[d](s,l,c)===!1)return}a=a.parent}if(n){Bi(),Ns(n,null,10,[s,l,c]),ki();return}}Wh(s,t,r,i,o)}function Wh(s,e,t,i=!0,r=!1){if(r)throw s;console.error(s)}const Ct=[];let fi=-1;const es=[];let Qi=null,$r=0;const Wc=Promise.resolve();let Rn=null;function jh(s){const e=Rn||Wc;return s?e.then(this?s.bind(this):s):e}function qh(s){let e=fi+1,t=Ct.length;for(;e<t;){const i=e+t>>>1,r=Ct[i],n=Ds(r);n<s||n===s&&r.flags&2?e=i+1:t=i}return e}function wo(s){if(!(s.flags&1)){const e=Ds(s),t=Ct[Ct.length-1];!t||!(s.flags&2)&&e>=Ds(t)?Ct.push(s):Ct.splice(qh(e),0,s),s.flags|=1,jc()}}function jc(){Rn||(Rn=Wc.then(Yc))}function Yh(s){Re(s)?es.push(...s):Qi&&s.id===-1?Qi.splice($r+1,0,s):s.flags&1||(es.push(s),s.flags|=1),jc()}function Ho(s,e,t=fi+1){for(;t<Ct.length;t++){const i=Ct[t];if(i&&i.flags&2){if(s&&i.id!==s.uid)continue;Ct.splice(t,1),t--,i.flags&4&&(i.flags&=-2),i(),i.flags&4||(i.flags&=-2)}}}function qc(s){if(es.length){const e=[...new Set(es)].sort((t,i)=>Ds(t)-Ds(i));if(es.length=0,Qi){Qi.push(...e);return}for(Qi=e,$r=0;$r<Qi.length;$r++){const t=Qi[$r];t.flags&4&&(t.flags&=-2),t.flags&8||t(),t.flags&=-2}Qi=null,$r=0}}const Ds=s=>s.id==null?s.flags&2?-1:1/0:s.id;function Yc(s){try{for(fi=0;fi<Ct.length;fi++){const e=Ct[fi];e&&!(e.flags&8)&&(e.flags&4&&(e.flags&=-2),Ns(e,e.i,e.i?15:14),e.flags&4||(e.flags&=-2))}}finally{for(;fi<Ct.length;fi++){const e=Ct[fi];e&&(e.flags&=-2)}fi=-1,Ct.length=0,qc(),Rn=null,(Ct.length||es.length)&&Yc()}}let zt=null,Xc=null;function Pn(s){const e=zt;return zt=s,Xc=s&&s.type.__scopeId||null,e}function Ka(s,e=zt,t){if(!e||s._n)return s;const i=(...r)=>{i._d&&Ko(-1);const n=Pn(e);let o;try{o=s(...r)}finally{Pn(n),i._d&&Ko(1)}return o};return i._n=!0,i._c=!0,i._d=!0,i}function ar(s,e,t,i){const r=s.dirs,n=e&&e.dirs;for(let o=0;o<r.length;o++){const a=r[o];n&&(a.oldValue=n[o].value);let l=a.dir[i];l&&(Bi(),yi(l,t,8,[s.el,a,s,e]),ki())}}const Xh=Symbol("_vte"),$h=s=>s.__isTeleport;function Mo(s,e){s.shapeFlag&6&&s.component?(s.transition=e,Mo(s.component.subTree,e)):s.shapeFlag&128?(s.ssContent.transition=e.clone(s.ssContent),s.ssFallback.transition=e.clone(s.ssFallback)):s.transition=e}/*! #__NO_SIDE_EFFECTS__ */function Os(s,e){return Ie(s)?Et({name:s.name},e,{setup:s}):s}function $c(s){s.ids=[s.ids[0]+s.ids[2]+++"-",0,0]}function Dn(s,e,t,i,r=!1){if(Re(s)){s.forEach((g,f)=>Dn(g,e&&(Re(e)?e[f]:e),t,i,r));return}if(ts(i)&&!r){i.shapeFlag&512&&i.type.__asyncResolved&&i.component.subTree.component&&Dn(s,e,t,i.component.subTree);return}const n=i.shapeFlag&4?Co(i.component):i.el,o=r?null:n,{i:a,r:l}=s,c=e&&e.r,u=a.refs===Je?a.refs={}:a.refs,d=a.setupState,h=Ye(d),m=d===Je?()=>!1:g=>Xe(h,g);if(c!=null&&c!==l&&(ut(c)?(u[c]=null,m(c)&&(d[c]=null)):St(c)&&(c.value=null)),Ie(l))Ns(l,a,12,[o,u]);else{const g=ut(l),f=St(l);if(g||f){const p=()=>{if(s.f){const v=g?m(l)?d[l]:u[l]:l.value;r?Re(v)&&ho(v,n):Re(v)?v.includes(n)||v.push(n):g?(u[l]=[n],m(l)&&(d[l]=u[l])):(l.value=[n],s.k&&(u[s.k]=l.value))}else g?(u[l]=o,m(l)&&(d[l]=o)):f&&(l.value=o,s.k&&(u[s.k]=o))};o?(p.id=-1,Ut(p,t)):p()}}}Un().requestIdleCallback;Un().cancelIdleCallback;const ts=s=>!!s.type.__asyncLoader,Zc=s=>s.type.__isKeepAlive;function Zh(s,e){Kc(s,"a",e)}function Kh(s,e){Kc(s,"da",e)}function Kc(s,e,t=Lt){const i=s.__wdc||(s.__wdc=()=>{let r=t;for(;r;){if(r.isDeactivated)return;r=r.parent}return s()});if(Vn(e,i,t),t){let r=t.parent;for(;r&&r.parent;)Zc(r.parent.vnode)&&Jh(i,e,t,r),r=r.parent}}function Jh(s,e,t,i){const r=Vn(e,s,i,!0);Qc(()=>{ho(i[e],r)},t)}function Vn(s,e,t=Lt,i=!1){if(t){const r=t[s]||(t[s]=[]),n=e.__weh||(e.__weh=(...o)=>{Bi();const a=Bs(t),l=yi(e,t,s,o);return a(),ki(),l});return i?r.unshift(n):r.push(n),n}}const Hi=s=>(e,t=Lt)=>{(!Is||s==="sp")&&Vn(s,(...i)=>e(...i),t)},Qh=Hi("bm"),Jc=Hi("m"),ed=Hi("bu"),td=Hi("u"),id=Hi("bum"),Qc=Hi("um"),rd=Hi("sp"),sd=Hi("rtg"),nd=Hi("rtc");function ad(s,e=Lt){Vn("ec",s,e)}const od=Symbol.for("v-ndc");function Xs(s,e,t,i){let r;const n=t,o=Re(s);if(o||ut(s)){const a=o&&Qr(s);let l=!1,c=!1;a&&(l=!Qt(s),c=sr(s),s=Gn(s)),r=new Array(s.length);for(let u=0,d=s.length;u<d;u++)r[u]=e(l?c?Cn(_t(s[u])):_t(s[u]):s[u],u,void 0,n)}else if(typeof s=="number"){r=new Array(s);for(let a=0;a<s;a++)r[a]=e(a+1,a,void 0,n)}else if(it(s))if(s[Symbol.iterator])r=Array.from(s,(a,l)=>e(a,l,void 0,n));else{const a=Object.keys(s);r=new Array(a.length);for(let l=0,c=a.length;l<c;l++){const u=a[l];r[l]=e(s[u],u,l,n)}}else r=[];return r}function wn(s,e,t={},i,r){if(zt.ce||zt.parent&&ts(zt.parent)&&zt.parent.ce)return $e(),io(lt,null,[Nt("slot",t,i)],64);let n=s[e];n&&n._c&&(n._d=!1),$e();const o=n&&eu(n(t)),a=t.key||o&&o.key,l=io(lt,{key:(a&&!Gi(a)?a:`_${e}`)+""},o||[],o&&s._===1?64:-2);return!r&&l.scopeId&&(l.slotScopeIds=[l.scopeId+"-s"]),n&&n._c&&(n._d=!0),l}function eu(s){return s.some(e=>To(e)?!(e.type===Ui||e.type===lt&&!eu(e.children)):!0)?s:null}const Ja=s=>s?yu(s)?Co(s):Ja(s.parent):null,Ts=Et(Object.create(null),{$:s=>s,$el:s=>s.vnode.el,$data:s=>s.data,$props:s=>s.props,$attrs:s=>s.attrs,$slots:s=>s.slots,$refs:s=>s.refs,$parent:s=>Ja(s.parent),$root:s=>Ja(s.root),$host:s=>s.ce,$emit:s=>s.emit,$options:s=>iu(s),$forceUpdate:s=>s.f||(s.f=()=>{wo(s.update)}),$nextTick:s=>s.n||(s.n=jh.bind(s.proxy)),$watch:s=>Ld.bind(s)}),na=(s,e)=>s!==Je&&!s.__isScriptSetup&&Xe(s,e),ld={get({_:s},e){if(e==="__v_skip")return!0;const{ctx:t,setupState:i,data:r,props:n,accessCache:o,type:a,appContext:l}=s;let c;if(e[0]!=="$"){const m=o[e];if(m!==void 0)switch(m){case 1:return i[e];case 2:return r[e];case 4:return t[e];case 3:return n[e]}else{if(na(i,e))return o[e]=1,i[e];if(r!==Je&&Xe(r,e))return o[e]=2,r[e];if((c=s.propsOptions[0])&&Xe(c,e))return o[e]=3,n[e];if(t!==Je&&Xe(t,e))return o[e]=4,t[e];Qa&&(o[e]=0)}}const u=Ts[e];let d,h;if(u)return e==="$attrs"&&wt(s.attrs,"get",""),u(s);if((d=a.__cssModules)&&(d=d[e]))return d;if(t!==Je&&Xe(t,e))return o[e]=4,t[e];if(h=l.config.globalProperties,Xe(h,e))return h[e]},set({_:s},e,t){const{data:i,setupState:r,ctx:n}=s;return na(r,e)?(r[e]=t,!0):i!==Je&&Xe(i,e)?(i[e]=t,!0):Xe(s.props,e)||e[0]==="$"&&e.slice(1)in s?!1:(n[e]=t,!0)},has({_:{data:s,setupState:e,accessCache:t,ctx:i,appContext:r,propsOptions:n}},o){let a;return!!t[o]||s!==Je&&Xe(s,o)||na(e,o)||(a=n[0])&&Xe(a,o)||Xe(i,o)||Xe(Ts,o)||Xe(r.config.globalProperties,o)},defineProperty(s,e,t){return t.get!=null?s._.accessCache[e]=0:Xe(t,"value")&&this.set(s,e,t.value,null),Reflect.defineProperty(s,e,t)}};function Vo(s){return Re(s)?s.reduce((e,t)=>(e[t]=null,e),{}):s}let Qa=!0;function cd(s){const e=iu(s),t=s.proxy,i=s.ctx;Qa=!1,e.beforeCreate&&Wo(e.beforeCreate,s,"bc");const{data:r,computed:n,methods:o,watch:a,provide:l,inject:c,created:u,beforeMount:d,mounted:h,beforeUpdate:m,updated:g,activated:f,deactivated:p,beforeDestroy:v,beforeUnmount:_,destroyed:b,unmounted:x,render:S,renderTracked:E,renderTriggered:R,errorCaptured:y,serverPrefetch:A,expose:F,inheritAttrs:z,components:G,directives:N,filters:D}=e;if(c&&ud(c,i,null),o)for(const V in o){const W=o[V];Ie(W)&&(i[V]=W.bind(t))}if(r){const V=r.call(t,t);it(V)&&(s.data=xo(V))}if(Qa=!0,n)for(const V in n){const W=n[V],U=Ie(W)?W.bind(t,t):Ie(W.get)?W.get.bind(t,t):_i,X=!Ie(W)&&Ie(W.set)?W.set.bind(t):_i,le=gi({get:U,set:X});Object.defineProperty(i,V,{enumerable:!0,configurable:!0,get:()=>le.value,set:j=>le.value=j})}if(a)for(const V in a)tu(a[V],i,t,V);if(l){const V=Ie(l)?l.call(t):l;Reflect.ownKeys(V).forEach(W=>{gd(W,V[W])})}u&&Wo(u,s,"c");function I(V,W){Re(W)?W.forEach(U=>V(U.bind(t))):W&&V(W.bind(t))}if(I(Qh,d),I(Jc,h),I(ed,m),I(td,g),I(Zh,f),I(Kh,p),I(ad,y),I(nd,E),I(sd,R),I(id,_),I(Qc,x),I(rd,A),Re(F))if(F.length){const V=s.exposed||(s.exposed={});F.forEach(W=>{Object.defineProperty(V,W,{get:()=>t[W],set:U=>t[W]=U})})}else s.exposed||(s.exposed={});S&&s.render===_i&&(s.render=S),z!=null&&(s.inheritAttrs=z),G&&(s.components=G),N&&(s.directives=N),A&&$c(s)}function ud(s,e,t=_i){Re(s)&&(s=eo(s));for(const i in s){const r=s[i];let n;it(r)?"default"in r?n=Mn(r.from||i,r.default,!0):n=Mn(r.from||i):n=Mn(r),St(n)?Object.defineProperty(e,i,{enumerable:!0,configurable:!0,get:()=>n.value,set:o=>n.value=o}):e[i]=n}}function Wo(s,e,t){yi(Re(s)?s.map(i=>i.bind(e.proxy)):s.bind(e.proxy),e,t)}function tu(s,e,t,i){let r=i.includes(".")?mu(t,i):()=>t[i];if(ut(s)){const n=e[s];Ie(n)&&As(r,n)}else if(Ie(s))As(r,s.bind(t));else if(it(s))if(Re(s))s.forEach(n=>tu(n,e,t,i));else{const n=Ie(s.handler)?s.handler.bind(t):e[s.handler];Ie(n)&&As(r,n,s)}}function iu(s){const e=s.type,{mixins:t,extends:i}=e,{mixins:r,optionsCache:n,config:{optionMergeStrategies:o}}=s.appContext,a=n.get(e);let l;return a?l=a:!r.length&&!t&&!i?l=e:(l={},r.length&&r.forEach(c=>Fn(l,c,o,!0)),Fn(l,e,o)),it(e)&&n.set(e,l),l}function Fn(s,e,t,i=!1){const{mixins:r,extends:n}=e;n&&Fn(s,n,t,!0),r&&r.forEach(o=>Fn(s,o,t,!0));for(const o in e)if(!(i&&o==="expose")){const a=hd[o]||t&&t[o];s[o]=a?a(s[o],e[o]):e[o]}return s}const hd={data:jo,props:qo,emits:qo,methods:ys,computed:ys,beforeCreate:At,created:At,beforeMount:At,mounted:At,beforeUpdate:At,updated:At,beforeDestroy:At,beforeUnmount:At,destroyed:At,unmounted:At,activated:At,deactivated:At,errorCaptured:At,serverPrefetch:At,components:ys,directives:ys,watch:fd,provide:jo,inject:dd};function jo(s,e){return e?s?function(){return Et(Ie(s)?s.call(this,this):s,Ie(e)?e.call(this,this):e)}:e:s}function dd(s,e){return ys(eo(s),eo(e))}function eo(s){if(Re(s)){const e={};for(let t=0;t<s.length;t++)e[s[t]]=s[t];return e}return s}function At(s,e){return s?[...new Set([].concat(s,e))]:e}function ys(s,e){return s?Et(Object.create(null),s,e):e}function qo(s,e){return s?Re(s)&&Re(e)?[...new Set([...s,...e])]:Et(Object.create(null),Vo(s),Vo(e??{})):e}function fd(s,e){if(!s)return e;if(!e)return s;const t=Et(Object.create(null),s);for(const i in e)t[i]=At(s[i],e[i]);return t}function ru(){return{app:null,config:{isNativeTag:rh,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let pd=0;function md(s,e){return function(i,r=null){Ie(i)||(i=Et({},i)),r!=null&&!it(r)&&(r=null);const n=ru(),o=new WeakSet,a=[];let l=!1;const c=n.app={_uid:pd++,_component:i,_props:r,_container:null,_context:n,_instance:null,version:$d,get config(){return n.config},set config(u){},use(u,...d){return o.has(u)||(u&&Ie(u.install)?(o.add(u),u.install(c,...d)):Ie(u)&&(o.add(u),u(c,...d))),c},mixin(u){return n.mixins.includes(u)||n.mixins.push(u),c},component(u,d){return d?(n.components[u]=d,c):n.components[u]},directive(u,d){return d?(n.directives[u]=d,c):n.directives[u]},mount(u,d,h){if(!l){const m=c._ceVNode||Nt(i,r);return m.appContext=n,h===!0?h="svg":h===!1&&(h=void 0),s(m,u,h),l=!0,c._container=u,u.__vue_app__=c,Co(m.component)}},onUnmount(u){a.push(u)},unmount(){l&&(yi(a,c._instance,16),s(null,c._container),delete c._container.__vue_app__)},provide(u,d){return n.provides[u]=d,c},runWithContext(u){const d=is;is=c;try{return u()}finally{is=d}}};return c}}let is=null;function gd(s,e){if(Lt){let t=Lt.provides;const i=Lt.parent&&Lt.parent.provides;i===t&&(t=Lt.provides=Object.create(i)),t[s]=e}}function Mn(s,e,t=!1){const i=Lt||zt;if(i||is){let r=is?is._context.provides:i?i.parent==null||i.ce?i.vnode.appContext&&i.vnode.appContext.provides:i.parent.provides:void 0;if(r&&s in r)return r[s];if(arguments.length>1)return t&&Ie(e)?e.call(i&&i.proxy):e}}const su={},nu=()=>Object.create(su),au=s=>Object.getPrototypeOf(s)===su;function vd(s,e,t,i=!1){const r={},n=nu();s.propsDefaults=Object.create(null),ou(s,e,r,n);for(const o in s.propsOptions[0])o in r||(r[o]=void 0);t?s.props=i?r:zh(r):s.type.props?s.props=r:s.props=n,s.attrs=n}function _d(s,e,t,i){const{props:r,attrs:n,vnode:{patchFlag:o}}=s,a=Ye(r),[l]=s.propsOptions;let c=!1;if((i||o>0)&&!(o&16)){if(o&8){const u=s.vnode.dynamicProps;for(let d=0;d<u.length;d++){let h=u[d];if(Wn(s.emitsOptions,h))continue;const m=e[h];if(l)if(Xe(n,h))m!==n[h]&&(n[h]=m,c=!0);else{const g=rr(h);r[g]=to(l,a,g,m,s,!1)}else m!==n[h]&&(n[h]=m,c=!0)}}}else{ou(s,e,r,n)&&(c=!0);let u;for(const d in a)(!e||!Xe(e,d)&&((u=Ar(d))===d||!Xe(e,u)))&&(l?t&&(t[d]!==void 0||t[u]!==void 0)&&(r[d]=to(l,a,d,void 0,s,!0)):delete r[d]);if(n!==a)for(const d in n)(!e||!Xe(e,d))&&(delete n[d],c=!0)}c&&Ni(s.attrs,"set","")}function ou(s,e,t,i){const[r,n]=s.propsOptions;let o=!1,a;if(e)for(let l in e){if(Ms(l))continue;const c=e[l];let u;r&&Xe(r,u=rr(l))?!n||!n.includes(u)?t[u]=c:(a||(a={}))[u]=c:Wn(s.emitsOptions,l)||(!(l in i)||c!==i[l])&&(i[l]=c,o=!0)}if(n){const l=Ye(t),c=a||Je;for(let u=0;u<n.length;u++){const d=n[u];t[d]=to(r,l,d,c[d],s,!Xe(c,d))}}return o}function to(s,e,t,i,r,n){const o=s[t];if(o!=null){const a=Xe(o,"default");if(a&&i===void 0){const l=o.default;if(o.type!==Function&&!o.skipFactory&&Ie(l)){const{propsDefaults:c}=r;if(t in c)i=c[t];else{const u=Bs(r);i=c[t]=l.call(null,e),u()}}else i=l;r.ce&&r.ce._setProp(t,i)}o[0]&&(n&&!a?i=!1:o[1]&&(i===""||i===Ar(t))&&(i=!0))}return i}const xd=new WeakMap;function lu(s,e,t=!1){const i=t?xd:e.propsCache,r=i.get(s);if(r)return r;const n=s.props,o={},a=[];let l=!1;if(!Ie(s)){const u=d=>{l=!0;const[h,m]=lu(d,e,!0);Et(o,h),m&&a.push(...m)};!t&&e.mixins.length&&e.mixins.forEach(u),s.extends&&u(s.extends),s.mixins&&s.mixins.forEach(u)}if(!n&&!l)return it(s)&&i.set(s,Kr),Kr;if(Re(n))for(let u=0;u<n.length;u++){const d=rr(n[u]);Yo(d)&&(o[d]=Je)}else if(n)for(const u in n){const d=rr(u);if(Yo(d)){const h=n[u],m=o[d]=Re(h)||Ie(h)?{type:h}:Et({},h),g=m.type;let f=!1,p=!0;if(Re(g))for(let v=0;v<g.length;++v){const _=g[v],b=Ie(_)&&_.name;if(b==="Boolean"){f=!0;break}else b==="String"&&(p=!1)}else f=Ie(g)&&g.name==="Boolean";m[0]=f,m[1]=p,(f||Xe(m,"default"))&&a.push(d)}}const c=[o,a];return it(s)&&i.set(s,c),c}function Yo(s){return s[0]!=="$"&&!Ms(s)}const So=s=>s[0]==="_"||s==="$stable",Eo=s=>Re(s)?s.map(pi):[pi(s)],yd=(s,e,t)=>{if(e._n)return e;const i=Ka((...r)=>Eo(e(...r)),t);return i._c=!1,i},cu=(s,e,t)=>{const i=s._ctx;for(const r in s){if(So(r))continue;const n=s[r];if(Ie(n))e[r]=yd(r,n,i);else if(n!=null){const o=Eo(n);e[r]=()=>o}}},uu=(s,e)=>{const t=Eo(e);s.slots.default=()=>t},hu=(s,e,t)=>{for(const i in e)(t||!So(i))&&(s[i]=e[i])},bd=(s,e,t)=>{const i=s.slots=nu();if(s.vnode.shapeFlag&32){const r=e._;r?(hu(i,e,t),t&&Sc(i,"_",r,!0)):cu(e,i)}else e&&uu(s,e)},wd=(s,e,t)=>{const{vnode:i,slots:r}=s;let n=!0,o=Je;if(i.shapeFlag&32){const a=e._;a?t&&a===1?n=!1:hu(r,e,t):(n=!e.$stable,cu(e,r)),o=e}else e&&(uu(s,e),o={default:1});if(n)for(const a in r)!So(a)&&o[a]==null&&delete r[a]},Ut=Nd;function Md(s){return Sd(s)}function Sd(s,e){const t=Un();t.__VUE__=!0;const{insert:i,remove:r,patchProp:n,createElement:o,createText:a,createComment:l,setText:c,setElementText:u,parentNode:d,nextSibling:h,setScopeId:m=_i,insertStaticContent:g}=s,f=(L,P,Y,se=null,te=null,ne=null,he=void 0,ae=null,de=!!P.dynamicChildren)=>{if(L===P)return;L&&!hs(L,P)&&(se=Oe(L),j(L,te,ne,!0),L=null),P.patchFlag===-2&&(de=!1,P.dynamicChildren=null);const{type:oe,ref:T,shapeFlag:M}=P;switch(oe){case jn:p(L,P,Y,se);break;case Ui:v(L,P,Y,se);break;case oa:L==null&&_(P,Y,se,he);break;case lt:G(L,P,Y,se,te,ne,he,ae,de);break;default:M&1?S(L,P,Y,se,te,ne,he,ae,de):M&6?N(L,P,Y,se,te,ne,he,ae,de):(M&64||M&128)&&oe.process(L,P,Y,se,te,ne,he,ae,de,_e)}T!=null&&te&&Dn(T,L&&L.ref,ne,P||L,!P)},p=(L,P,Y,se)=>{if(L==null)i(P.el=a(P.children),Y,se);else{const te=P.el=L.el;P.children!==L.children&&c(te,P.children)}},v=(L,P,Y,se)=>{L==null?i(P.el=l(P.children||""),Y,se):P.el=L.el},_=(L,P,Y,se)=>{[L.el,L.anchor]=g(L.children,P,Y,se,L.el,L.anchor)},b=({el:L,anchor:P},Y,se)=>{let te;for(;L&&L!==P;)te=h(L),i(L,Y,se),L=te;i(P,Y,se)},x=({el:L,anchor:P})=>{let Y;for(;L&&L!==P;)Y=h(L),r(L),L=Y;r(P)},S=(L,P,Y,se,te,ne,he,ae,de)=>{P.type==="svg"?he="svg":P.type==="math"&&(he="mathml"),L==null?E(P,Y,se,te,ne,he,ae,de):A(L,P,te,ne,he,ae,de)},E=(L,P,Y,se,te,ne,he,ae)=>{let de,oe;const{props:T,shapeFlag:M,transition:B,dirs:K}=L;if(de=L.el=o(L.type,ne,T&&T.is,T),M&8?u(de,L.children):M&16&&y(L.children,de,null,se,te,aa(L,ne),he,ae),K&&ar(L,null,se,"created"),R(de,L,L.scopeId,he,se),T){for(const ce in T)ce!=="value"&&!Ms(ce)&&n(de,ce,null,T[ce],ne,se);"value"in T&&n(de,"value",null,T.value,ne),(oe=T.onVnodeBeforeMount)&&ci(oe,se,L)}K&&ar(L,null,se,"beforeMount");const ie=Ed(te,B);ie&&B.beforeEnter(de),i(de,P,Y),((oe=T&&T.onVnodeMounted)||ie||K)&&Ut(()=>{oe&&ci(oe,se,L),ie&&B.enter(de),K&&ar(L,null,se,"mounted")},te)},R=(L,P,Y,se,te)=>{if(Y&&m(L,Y),se)for(let ne=0;ne<se.length;ne++)m(L,se[ne]);if(te){let ne=te.subTree;if(P===ne||vu(ne.type)&&(ne.ssContent===P||ne.ssFallback===P)){const he=te.vnode;R(L,he,he.scopeId,he.slotScopeIds,te.parent)}}},y=(L,P,Y,se,te,ne,he,ae,de=0)=>{for(let oe=de;oe<L.length;oe++){const T=L[oe]=ae?er(L[oe]):pi(L[oe]);f(null,T,P,Y,se,te,ne,he,ae)}},A=(L,P,Y,se,te,ne,he)=>{const ae=P.el=L.el;let{patchFlag:de,dynamicChildren:oe,dirs:T}=P;de|=L.patchFlag&16;const M=L.props||Je,B=P.props||Je;let K;if(Y&&or(Y,!1),(K=B.onVnodeBeforeUpdate)&&ci(K,Y,P,L),T&&ar(P,L,Y,"beforeUpdate"),Y&&or(Y,!0),(M.innerHTML&&B.innerHTML==null||M.textContent&&B.textContent==null)&&u(ae,""),oe?F(L.dynamicChildren,oe,ae,Y,se,aa(P,te),ne):he||W(L,P,ae,null,Y,se,aa(P,te),ne,!1),de>0){if(de&16)z(ae,M,B,Y,te);else if(de&2&&M.class!==B.class&&n(ae,"class",null,B.class,te),de&4&&n(ae,"style",M.style,B.style,te),de&8){const ie=P.dynamicProps;for(let ce=0;ce<ie.length;ce++){const ge=ie[ce],Z=M[ge],ye=B[ge];(ye!==Z||ge==="value")&&n(ae,ge,Z,ye,te,Y)}}de&1&&L.children!==P.children&&u(ae,P.children)}else!he&&oe==null&&z(ae,M,B,Y,te);((K=B.onVnodeUpdated)||T)&&Ut(()=>{K&&ci(K,Y,P,L),T&&ar(P,L,Y,"updated")},se)},F=(L,P,Y,se,te,ne,he)=>{for(let ae=0;ae<P.length;ae++){const de=L[ae],oe=P[ae],T=de.el&&(de.type===lt||!hs(de,oe)||de.shapeFlag&198)?d(de.el):Y;f(de,oe,T,null,se,te,ne,he,!0)}},z=(L,P,Y,se,te)=>{if(P!==Y){if(P!==Je)for(const ne in P)!Ms(ne)&&!(ne in Y)&&n(L,ne,P[ne],null,te,se);for(const ne in Y){if(Ms(ne))continue;const he=Y[ne],ae=P[ne];he!==ae&&ne!=="value"&&n(L,ne,ae,he,te,se)}"value"in Y&&n(L,"value",P.value,Y.value,te)}},G=(L,P,Y,se,te,ne,he,ae,de)=>{const oe=P.el=L?L.el:a(""),T=P.anchor=L?L.anchor:a("");let{patchFlag:M,dynamicChildren:B,slotScopeIds:K}=P;K&&(ae=ae?ae.concat(K):K),L==null?(i(oe,Y,se),i(T,Y,se),y(P.children||[],Y,T,te,ne,he,ae,de)):M>0&&M&64&&B&&L.dynamicChildren?(F(L.dynamicChildren,B,Y,te,ne,he,ae),(P.key!=null||te&&P===te.subTree)&&du(L,P,!0)):W(L,P,Y,T,te,ne,he,ae,de)},N=(L,P,Y,se,te,ne,he,ae,de)=>{P.slotScopeIds=ae,L==null?P.shapeFlag&512?te.ctx.activate(P,Y,se,he,de):D(P,Y,se,te,ne,he,de):O(L,P,de)},D=(L,P,Y,se,te,ne,he)=>{const ae=L.component=Vd(L,se,te);if(Zc(L)&&(ae.ctx.renderer=_e),Wd(ae,!1,he),ae.asyncDep){if(te&&te.registerDep(ae,I,he),!L.el){const de=ae.subTree=Nt(Ui);v(null,de,P,Y)}}else I(ae,L,P,Y,te,ne,he)},O=(L,P,Y)=>{const se=P.component=L.component;if(Id(L,P,Y))if(se.asyncDep&&!se.asyncResolved){V(se,P,Y);return}else se.next=P,se.update();else P.el=L.el,se.vnode=P},I=(L,P,Y,se,te,ne,he)=>{const ae=()=>{if(L.isMounted){let{next:M,bu:B,u:K,parent:ie,vnode:ce}=L;{const Se=fu(L);if(Se){M&&(M.el=ce.el,V(L,M,he)),Se.asyncDep.then(()=>{L.isUnmounted||ae()});return}}let ge=M,Z;or(L,!1),M?(M.el=ce.el,V(L,M,he)):M=ce,B&&ea(B),(Z=M.props&&M.props.onVnodeBeforeUpdate)&&ci(Z,ie,M,ce),or(L,!0);const ye=$o(L),ve=L.subTree;L.subTree=ye,f(ve,ye,d(ve.el),Oe(ve),L,te,ne),M.el=ye.el,ge===null&&zd(L,ye.el),K&&Ut(K,te),(Z=M.props&&M.props.onVnodeUpdated)&&Ut(()=>ci(Z,ie,M,ce),te)}else{let M;const{el:B,props:K}=P,{bm:ie,m:ce,parent:ge,root:Z,type:ye}=L,ve=ts(P);or(L,!1),ie&&ea(ie),!ve&&(M=K&&K.onVnodeBeforeMount)&&ci(M,ge,P),or(L,!0);{Z.ce&&Z.ce._injectChildStyle(ye);const Se=L.subTree=$o(L);f(null,Se,Y,se,L,te,ne),P.el=Se.el}if(ce&&Ut(ce,te),!ve&&(M=K&&K.onVnodeMounted)){const Se=P;Ut(()=>ci(M,ge,Se),te)}(P.shapeFlag&256||ge&&ts(ge.vnode)&&ge.vnode.shapeFlag&256)&&L.a&&Ut(L.a,te),L.isMounted=!0,P=Y=se=null}};L.scope.on();const de=L.effect=new Cc(ae);L.scope.off();const oe=L.update=de.run.bind(de),T=L.job=de.runIfDirty.bind(de);T.i=L,T.id=L.uid,de.scheduler=()=>wo(T),or(L,!0),oe()},V=(L,P,Y)=>{P.component=L;const se=L.vnode.props;L.vnode=P,L.next=null,_d(L,P.props,se,Y),wd(L,P.children,Y),Bi(),Ho(L),ki()},W=(L,P,Y,se,te,ne,he,ae,de=!1)=>{const oe=L&&L.children,T=L?L.shapeFlag:0,M=P.children,{patchFlag:B,shapeFlag:K}=P;if(B>0){if(B&128){X(oe,M,Y,se,te,ne,he,ae,de);return}else if(B&256){U(oe,M,Y,se,te,ne,he,ae,de);return}}K&8?(T&16&&ee(oe,te,ne),M!==oe&&u(Y,M)):T&16?K&16?X(oe,M,Y,se,te,ne,he,ae,de):ee(oe,te,ne,!0):(T&8&&u(Y,""),K&16&&y(M,Y,se,te,ne,he,ae,de))},U=(L,P,Y,se,te,ne,he,ae,de)=>{L=L||Kr,P=P||Kr;const oe=L.length,T=P.length,M=Math.min(oe,T);let B;for(B=0;B<M;B++){const K=P[B]=de?er(P[B]):pi(P[B]);f(L[B],K,Y,null,te,ne,he,ae,de)}oe>T?ee(L,te,ne,!0,!1,M):y(P,Y,se,te,ne,he,ae,de,M)},X=(L,P,Y,se,te,ne,he,ae,de)=>{let oe=0;const T=P.length;let M=L.length-1,B=T-1;for(;oe<=M&&oe<=B;){const K=L[oe],ie=P[oe]=de?er(P[oe]):pi(P[oe]);if(hs(K,ie))f(K,ie,Y,null,te,ne,he,ae,de);else break;oe++}for(;oe<=M&&oe<=B;){const K=L[M],ie=P[B]=de?er(P[B]):pi(P[B]);if(hs(K,ie))f(K,ie,Y,null,te,ne,he,ae,de);else break;M--,B--}if(oe>M){if(oe<=B){const K=B+1,ie=K<T?P[K].el:se;for(;oe<=B;)f(null,P[oe]=de?er(P[oe]):pi(P[oe]),Y,ie,te,ne,he,ae,de),oe++}}else if(oe>B)for(;oe<=M;)j(L[oe],te,ne,!0),oe++;else{const K=oe,ie=oe,ce=new Map;for(oe=ie;oe<=B;oe++){const Le=P[oe]=de?er(P[oe]):pi(P[oe]);Le.key!=null&&ce.set(Le.key,oe)}let ge,Z=0;const ye=B-ie+1;let ve=!1,Se=0;const xe=new Array(ye);for(oe=0;oe<ye;oe++)xe[oe]=0;for(oe=K;oe<=M;oe++){const Le=L[oe];if(Z>=ye){j(Le,te,ne,!0);continue}let Ve;if(Le.key!=null)Ve=ce.get(Le.key);else for(ge=ie;ge<=B;ge++)if(xe[ge-ie]===0&&hs(Le,P[ge])){Ve=ge;break}Ve===void 0?j(Le,te,ne,!0):(xe[Ve-ie]=oe+1,Ve>=Se?Se=Ve:ve=!0,f(Le,P[Ve],Y,null,te,ne,he,ae,de),Z++)}const Pe=ve?Td(xe):Kr;for(ge=Pe.length-1,oe=ye-1;oe>=0;oe--){const Le=ie+oe,Ve=P[Le],k=Le+1<T?P[Le+1].el:se;xe[oe]===0?f(null,Ve,Y,k,te,ne,he,ae,de):ve&&(ge<0||oe!==Pe[ge]?le(Ve,Y,k,2):ge--)}}},le=(L,P,Y,se,te=null)=>{const{el:ne,type:he,transition:ae,children:de,shapeFlag:oe}=L;if(oe&6){le(L.component.subTree,P,Y,se);return}if(oe&128){L.suspense.move(P,Y,se);return}if(oe&64){he.move(L,P,Y,_e);return}if(he===lt){i(ne,P,Y);for(let M=0;M<de.length;M++)le(de[M],P,Y,se);i(L.anchor,P,Y);return}if(he===oa){b(L,P,Y);return}if(se!==2&&oe&1&&ae)if(se===0)ae.beforeEnter(ne),i(ne,P,Y),Ut(()=>ae.enter(ne),te);else{const{leave:M,delayLeave:B,afterLeave:K}=ae,ie=()=>{L.ctx.isUnmounted?r(ne):i(ne,P,Y)},ce=()=>{M(ne,()=>{ie(),K&&K()})};B?B(ne,ie,ce):ce()}else i(ne,P,Y)},j=(L,P,Y,se=!1,te=!1)=>{const{type:ne,props:he,ref:ae,children:de,dynamicChildren:oe,shapeFlag:T,patchFlag:M,dirs:B,cacheIndex:K}=L;if(M===-2&&(te=!1),ae!=null&&(Bi(),Dn(ae,null,Y,L,!0),ki()),K!=null&&(P.renderCache[K]=void 0),T&256){P.ctx.deactivate(L);return}const ie=T&1&&B,ce=!ts(L);let ge;if(ce&&(ge=he&&he.onVnodeBeforeUnmount)&&ci(ge,P,L),T&6)ze(L.component,Y,se);else{if(T&128){L.suspense.unmount(Y,se);return}ie&&ar(L,null,P,"beforeUnmount"),T&64?L.type.remove(L,P,Y,_e,se):oe&&!oe.hasOnce&&(ne!==lt||M>0&&M&64)?ee(oe,P,Y,!1,!0):(ne===lt&&M&384||!te&&T&16)&&ee(de,P,Y),se&&ue(L)}(ce&&(ge=he&&he.onVnodeUnmounted)||ie)&&Ut(()=>{ge&&ci(ge,P,L),ie&&ar(L,null,P,"unmounted")},Y)},ue=L=>{const{type:P,el:Y,anchor:se,transition:te}=L;if(P===lt){Me(Y,se);return}if(P===oa){x(L);return}const ne=()=>{r(Y),te&&!te.persisted&&te.afterLeave&&te.afterLeave()};if(L.shapeFlag&1&&te&&!te.persisted){const{leave:he,delayLeave:ae}=te,de=()=>he(Y,ne);ae?ae(L.el,ne,de):de()}else ne()},Me=(L,P)=>{let Y;for(;L!==P;)Y=h(L),r(L),L=Y;r(P)},ze=(L,P,Y)=>{const{bum:se,scope:te,job:ne,subTree:he,um:ae,m:de,a:oe,parent:T,slots:{__:M}}=L;Xo(de),Xo(oe),se&&ea(se),T&&Re(M)&&M.forEach(B=>{T.renderCache[B]=void 0}),te.stop(),ne&&(ne.flags|=8,j(he,L,P,Y)),ae&&Ut(ae,P),Ut(()=>{L.isUnmounted=!0},P),P&&P.pendingBranch&&!P.isUnmounted&&L.asyncDep&&!L.asyncResolved&&L.suspenseId===P.pendingId&&(P.deps--,P.deps===0&&P.resolve())},ee=(L,P,Y,se=!1,te=!1,ne=0)=>{for(let he=ne;he<L.length;he++)j(L[he],P,Y,se,te)},Oe=L=>{if(L.shapeFlag&6)return Oe(L.component.subTree);if(L.shapeFlag&128)return L.suspense.next();const P=h(L.anchor||L.el),Y=P&&P[Xh];return Y?h(Y):P};let Ae=!1;const Ce=(L,P,Y)=>{L==null?P._vnode&&j(P._vnode,null,null,!0):f(P._vnode||null,L,P,null,null,null,Y),P._vnode=L,Ae||(Ae=!0,Ho(),qc(),Ae=!1)},_e={p:f,um:j,m:le,r:ue,mt:D,mc:y,pc:W,pbc:F,n:Oe,o:s};return{render:Ce,hydrate:void 0,createApp:md(Ce)}}function aa({type:s,props:e},t){return t==="svg"&&s==="foreignObject"||t==="mathml"&&s==="annotation-xml"&&e&&e.encoding&&e.encoding.includes("html")?void 0:t}function or({effect:s,job:e},t){t?(s.flags|=32,e.flags|=4):(s.flags&=-33,e.flags&=-5)}function Ed(s,e){return(!s||s&&!s.pendingBranch)&&e&&!e.persisted}function du(s,e,t=!1){const i=s.children,r=e.children;if(Re(i)&&Re(r))for(let n=0;n<i.length;n++){const o=i[n];let a=r[n];a.shapeFlag&1&&!a.dynamicChildren&&((a.patchFlag<=0||a.patchFlag===32)&&(a=r[n]=er(r[n]),a.el=o.el),!t&&a.patchFlag!==-2&&du(o,a)),a.type===jn&&(a.el=o.el),a.type===Ui&&!a.el&&(a.el=o.el)}}function Td(s){const e=s.slice(),t=[0];let i,r,n,o,a;const l=s.length;for(i=0;i<l;i++){const c=s[i];if(c!==0){if(r=t[t.length-1],s[r]<c){e[i]=r,t.push(i);continue}for(n=0,o=t.length-1;n<o;)a=n+o>>1,s[t[a]]<c?n=a+1:o=a;c<s[t[n]]&&(n>0&&(e[i]=t[n-1]),t[n]=i)}}for(n=t.length,o=t[n-1];n-- >0;)t[n]=o,o=e[o];return t}function fu(s){const e=s.subTree.component;if(e)return e.asyncDep&&!e.asyncResolved?e:fu(e)}function Xo(s){if(s)for(let e=0;e<s.length;e++)s[e].flags|=8}const Ad=Symbol.for("v-scx"),Cd=()=>Mn(Ad);function As(s,e,t){return pu(s,e,t)}function pu(s,e,t=Je){const{immediate:i,deep:r,flush:n,once:o}=t,a=Et({},t),l=e&&i||!e&&n!=="post";let c;if(Is){if(n==="sync"){const m=Cd();c=m.__watcherHandles||(m.__watcherHandles=[])}else if(!l){const m=()=>{};return m.stop=_i,m.resume=_i,m.pause=_i,m}}const u=Lt;a.call=(m,g,f)=>yi(m,u,g,f);let d=!1;n==="post"?a.scheduler=m=>{Ut(m,u&&u.suspense)}:n!=="sync"&&(d=!0,a.scheduler=(m,g)=>{g?m():wo(m)}),a.augmentJob=m=>{e&&(m.flags|=4),d&&(m.flags|=2,u&&(m.id=u.uid,m.i=u))};const h=Vh(s,e,a);return Is&&(c?c.push(h):l&&h()),h}function Ld(s,e,t){const i=this.proxy,r=ut(s)?s.includes(".")?mu(i,s):()=>i[s]:s.bind(i,i);let n;Ie(e)?n=e:(n=e.handler,t=e);const o=Bs(this),a=pu(r,n.bind(i),t);return o(),a}function mu(s,e){const t=e.split(".");return()=>{let i=s;for(let r=0;r<t.length&&i;r++)i=i[t[r]];return i}}const Rd=(s,e)=>e==="modelValue"||e==="model-value"?s.modelModifiers:s[`${e}Modifiers`]||s[`${rr(e)}Modifiers`]||s[`${Ar(e)}Modifiers`];function Pd(s,e,...t){if(s.isUnmounted)return;const i=s.vnode.props||Je;let r=t;const n=e.startsWith("update:"),o=n&&Rd(i,e.slice(7));o&&(o.trim&&(r=t.map(u=>ut(u)?u.trim():u)),o.number&&(r=t.map(lh)));let a,l=i[a=Qn(e)]||i[a=Qn(rr(e))];!l&&n&&(l=i[a=Qn(Ar(e))]),l&&yi(l,s,6,r);const c=i[a+"Once"];if(c){if(!s.emitted)s.emitted={};else if(s.emitted[a])return;s.emitted[a]=!0,yi(c,s,6,r)}}function gu(s,e,t=!1){const i=e.emitsCache,r=i.get(s);if(r!==void 0)return r;const n=s.emits;let o={},a=!1;if(!Ie(s)){const l=c=>{const u=gu(c,e,!0);u&&(a=!0,Et(o,u))};!t&&e.mixins.length&&e.mixins.forEach(l),s.extends&&l(s.extends),s.mixins&&s.mixins.forEach(l)}return!n&&!a?(it(s)&&i.set(s,null),null):(Re(n)?n.forEach(l=>o[l]=null):Et(o,n),it(s)&&i.set(s,o),o)}function Wn(s,e){return!s||!On(e)?!1:(e=e.slice(2).replace(/Once$/,""),Xe(s,e[0].toLowerCase()+e.slice(1))||Xe(s,Ar(e))||Xe(s,e))}function $o(s){const{type:e,vnode:t,proxy:i,withProxy:r,propsOptions:[n],slots:o,attrs:a,emit:l,render:c,renderCache:u,props:d,data:h,setupState:m,ctx:g,inheritAttrs:f}=s,p=Pn(s);let v,_;try{if(t.shapeFlag&4){const x=r||i,S=x;v=pi(c.call(S,x,u,d,m,h,g)),_=a}else{const x=e;v=pi(x.length>1?x(d,{attrs:a,slots:o,emit:l}):x(d,null)),_=e.props?a:Dd(a)}}catch(x){Cs.length=0,Hn(x,s,1),v=Nt(Ui)}let b=v;if(_&&f!==!1){const x=Object.keys(_),{shapeFlag:S}=b;x.length&&S&7&&(n&&x.some(uo)&&(_=Fd(_,n)),b=rs(b,_,!1,!0))}return t.dirs&&(b=rs(b,null,!1,!0),b.dirs=b.dirs?b.dirs.concat(t.dirs):t.dirs),t.transition&&Mo(b,t.transition),v=b,Pn(p),v}const Dd=s=>{let e;for(const t in s)(t==="class"||t==="style"||On(t))&&((e||(e={}))[t]=s[t]);return e},Fd=(s,e)=>{const t={};for(const i in s)(!uo(i)||!(i.slice(9)in e))&&(t[i]=s[i]);return t};function Id(s,e,t){const{props:i,children:r,component:n}=s,{props:o,children:a,patchFlag:l}=e,c=n.emitsOptions;if(e.dirs||e.transition)return!0;if(t&&l>=0){if(l&1024)return!0;if(l&16)return i?Zo(i,o,c):!!o;if(l&8){const u=e.dynamicProps;for(let d=0;d<u.length;d++){const h=u[d];if(o[h]!==i[h]&&!Wn(c,h))return!0}}}else return(r||a)&&(!a||!a.$stable)?!0:i===o?!1:i?o?Zo(i,o,c):!0:!!o;return!1}function Zo(s,e,t){const i=Object.keys(e);if(i.length!==Object.keys(s).length)return!0;for(let r=0;r<i.length;r++){const n=i[r];if(e[n]!==s[n]&&!Wn(t,n))return!0}return!1}function zd({vnode:s,parent:e},t){for(;e;){const i=e.subTree;if(i.suspense&&i.suspense.activeBranch===s&&(i.el=s.el),i===s)(s=e.vnode).el=t,e=e.parent;else break}}const vu=s=>s.__isSuspense;function Nd(s,e){e&&e.pendingBranch?Re(s)?e.effects.push(...s):e.effects.push(s):Yh(s)}const lt=Symbol.for("v-fgt"),jn=Symbol.for("v-txt"),Ui=Symbol.for("v-cmt"),oa=Symbol.for("v-stc"),Cs=[];let Wt=null;function $e(s=!1){Cs.push(Wt=s?null:[])}function Od(){Cs.pop(),Wt=Cs[Cs.length-1]||null}let Fs=1;function Ko(s,e=!1){Fs+=s,s<0&&Wt&&e&&(Wt.hasOnce=!0)}function _u(s){return s.dynamicChildren=Fs>0?Wt||Kr:null,Od(),Fs>0&&Wt&&Wt.push(s),s}function Ke(s,e,t,i,r,n){return _u(We(s,e,t,i,r,n,!0))}function io(s,e,t,i,r){return _u(Nt(s,e,t,i,r,!0))}function To(s){return s?s.__v_isVNode===!0:!1}function hs(s,e){return s.type===e.type&&s.key===e.key}const xu=({key:s})=>s??null,Sn=({ref:s,ref_key:e,ref_for:t})=>(typeof s=="number"&&(s=""+s),s!=null?ut(s)||St(s)||Ie(s)?{i:zt,r:s,k:e,f:!!t}:s:null);function We(s,e=null,t=null,i=0,r=null,n=s===lt?0:1,o=!1,a=!1){const l={__v_isVNode:!0,__v_skip:!0,type:s,props:e,key:e&&xu(e),ref:e&&Sn(e),scopeId:Xc,slotScopeIds:null,children:t,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetStart:null,targetAnchor:null,staticCount:0,shapeFlag:n,patchFlag:i,dynamicProps:r,dynamicChildren:null,appContext:null,ctx:zt};return a?(Ao(l,t),n&128&&s.normalize(l)):t&&(l.shapeFlag|=ut(t)?8:16),Fs>0&&!o&&Wt&&(l.patchFlag>0||n&6)&&l.patchFlag!==32&&Wt.push(l),l}const Nt=Bd;function Bd(s,e=null,t=null,i=0,r=null,n=!1){if((!s||s===od)&&(s=Ui),To(s)){const a=rs(s,e,!0);return t&&Ao(a,t),Fs>0&&!n&&Wt&&(a.shapeFlag&6?Wt[Wt.indexOf(s)]=a:Wt.push(a)),a.patchFlag=-2,a}if(Xd(s)&&(s=s.__vccOpts),e){e=kd(e);let{class:a,style:l}=e;a&&!ut(a)&&(e.class=Gt(a)),it(l)&&(bo(l)&&!Re(l)&&(l=Et({},l)),e.style=xr(l))}const o=ut(s)?1:vu(s)?128:$h(s)?64:it(s)?4:Ie(s)?2:0;return We(s,e,t,i,r,o,n,!0)}function kd(s){return s?bo(s)||au(s)?Et({},s):s:null}function rs(s,e,t=!1,i=!1){const{props:r,ref:n,patchFlag:o,children:a,transition:l}=s,c=e?Ud(r||{},e):r,u={__v_isVNode:!0,__v_skip:!0,type:s.type,props:c,key:c&&xu(c),ref:e&&e.ref?t&&n?Re(n)?n.concat(Sn(e)):[n,Sn(e)]:Sn(e):n,scopeId:s.scopeId,slotScopeIds:s.slotScopeIds,children:a,target:s.target,targetStart:s.targetStart,targetAnchor:s.targetAnchor,staticCount:s.staticCount,shapeFlag:s.shapeFlag,patchFlag:e&&s.type!==lt?o===-1?16:o|16:o,dynamicProps:s.dynamicProps,dynamicChildren:s.dynamicChildren,appContext:s.appContext,dirs:s.dirs,transition:l,component:s.component,suspense:s.suspense,ssContent:s.ssContent&&rs(s.ssContent),ssFallback:s.ssFallback&&rs(s.ssFallback),el:s.el,anchor:s.anchor,ctx:s.ctx,ce:s.ce};return l&&i&&Mo(u,l.clone(u)),u}function ro(s=" ",e=0){return Nt(jn,null,s,e)}function vr(s="",e=!1){return e?($e(),io(Ui,null,s)):Nt(Ui,null,s)}function pi(s){return s==null||typeof s=="boolean"?Nt(Ui):Re(s)?Nt(lt,null,s.slice()):To(s)?er(s):Nt(jn,null,String(s))}function er(s){return s.el===null&&s.patchFlag!==-1||s.memo?s:rs(s)}function Ao(s,e){let t=0;const{shapeFlag:i}=s;if(e==null)e=null;else if(Re(e))t=16;else if(typeof e=="object")if(i&65){const r=e.default;r&&(r._c&&(r._d=!1),Ao(s,r()),r._c&&(r._d=!0));return}else{t=32;const r=e._;!r&&!au(e)?e._ctx=zt:r===3&&zt&&(zt.slots._===1?e._=1:(e._=2,s.patchFlag|=1024))}else Ie(e)?(e={default:e,_ctx:zt},t=32):(e=String(e),i&64?(t=16,e=[ro(e)]):t=8);s.children=e,s.shapeFlag|=t}function Ud(...s){const e={};for(let t=0;t<s.length;t++){const i=s[t];for(const r in i)if(r==="class")e.class!==i.class&&(e.class=Gt([e.class,i.class]));else if(r==="style")e.style=xr([e.style,i.style]);else if(On(r)){const n=e[r],o=i[r];o&&n!==o&&!(Re(n)&&n.includes(o))&&(e[r]=n?[].concat(n,o):o)}else r!==""&&(e[r]=i[r])}return e}function ci(s,e,t,i=null){yi(s,e,7,[t,i])}const Gd=ru();let Hd=0;function Vd(s,e,t){const i=s.type,r=(e?e.appContext:s.appContext)||Gd,n={uid:Hd++,vnode:s,type:i,parent:e,appContext:r,root:null,next:null,subTree:null,effect:null,update:null,job:null,scope:new mh(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:e?e.provides:Object.create(r.provides),ids:e?e.ids:["",0,0],accessCache:null,renderCache:[],components:null,directives:null,propsOptions:lu(i,r),emitsOptions:gu(i,r),emit:null,emitted:null,propsDefaults:Je,inheritAttrs:i.inheritAttrs,ctx:Je,data:Je,props:Je,attrs:Je,slots:Je,refs:Je,setupState:Je,setupContext:null,suspense:t,suspenseId:t?t.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return n.ctx={_:n},n.root=e?e.root:n,n.emit=Pd.bind(null,n),s.ce&&s.ce(n),n}let Lt=null,In,so;{const s=Un(),e=(t,i)=>{let r;return(r=s[t])||(r=s[t]=[]),r.push(i),n=>{r.length>1?r.forEach(o=>o(n)):r[0](n)}};In=e("__VUE_INSTANCE_SETTERS__",t=>Lt=t),so=e("__VUE_SSR_SETTERS__",t=>Is=t)}const Bs=s=>{const e=Lt;return In(s),s.scope.on(),()=>{s.scope.off(),In(e)}},Jo=()=>{Lt&&Lt.scope.off(),In(null)};function yu(s){return s.vnode.shapeFlag&4}let Is=!1;function Wd(s,e=!1,t=!1){e&&so(e);const{props:i,children:r}=s.vnode,n=yu(s);vd(s,i,n,e),bd(s,r,t||e);const o=n?jd(s,e):void 0;return e&&so(!1),o}function jd(s,e){const t=s.type;s.accessCache=Object.create(null),s.proxy=new Proxy(s.ctx,ld);const{setup:i}=t;if(i){Bi();const r=s.setupContext=i.length>1?Yd(s):null,n=Bs(s),o=Ns(i,s,0,[s.props,r]),a=yc(o);if(ki(),n(),(a||s.sp)&&!ts(s)&&$c(s),a){if(o.then(Jo,Jo),e)return o.then(l=>{Qo(s,l)}).catch(l=>{Hn(l,s,0)});s.asyncDep=o}else Qo(s,o)}else bu(s)}function Qo(s,e,t){Ie(e)?s.type.__ssrInlineRender?s.ssrRender=e:s.render=e:it(e)&&(s.setupState=Vc(e)),bu(s)}function bu(s,e,t){const i=s.type;s.render||(s.render=i.render||_i);{const r=Bs(s);Bi();try{cd(s)}finally{ki(),r()}}}const qd={get(s,e){return wt(s,"get",""),s[e]}};function Yd(s){const e=t=>{s.exposed=t||{}};return{attrs:new Proxy(s.attrs,qd),slots:s.slots,emit:s.emit,expose:e}}function Co(s){return s.exposed?s.exposeProxy||(s.exposeProxy=new Proxy(Vc(Nh(s.exposed)),{get(e,t){if(t in e)return e[t];if(t in Ts)return Ts[t](s)},has(e,t){return t in e||t in Ts}})):s.proxy}function Xd(s){return Ie(s)&&"__vccOpts"in s}const gi=(s,e)=>Gh(s,e,Is),$d="3.5.16";/**
* @vue/runtime-dom v3.5.16
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let no;const el=typeof window<"u"&&window.trustedTypes;if(el)try{no=el.createPolicy("vue",{createHTML:s=>s})}catch{}const wu=no?s=>no.createHTML(s):s=>s,Zd="http://www.w3.org/2000/svg",Kd="http://www.w3.org/1998/Math/MathML",Ii=typeof document<"u"?document:null,tl=Ii&&Ii.createElement("template"),Jd={insert:(s,e,t)=>{e.insertBefore(s,t||null)},remove:s=>{const e=s.parentNode;e&&e.removeChild(s)},createElement:(s,e,t,i)=>{const r=e==="svg"?Ii.createElementNS(Zd,s):e==="mathml"?Ii.createElementNS(Kd,s):t?Ii.createElement(s,{is:t}):Ii.createElement(s);return s==="select"&&i&&i.multiple!=null&&r.setAttribute("multiple",i.multiple),r},createText:s=>Ii.createTextNode(s),createComment:s=>Ii.createComment(s),setText:(s,e)=>{s.nodeValue=e},setElementText:(s,e)=>{s.textContent=e},parentNode:s=>s.parentNode,nextSibling:s=>s.nextSibling,querySelector:s=>Ii.querySelector(s),setScopeId(s,e){s.setAttribute(e,"")},insertStaticContent(s,e,t,i,r,n){const o=t?t.previousSibling:e.lastChild;if(r&&(r===n||r.nextSibling))for(;e.insertBefore(r.cloneNode(!0),t),!(r===n||!(r=r.nextSibling)););else{tl.innerHTML=wu(i==="svg"?`<svg>${s}</svg>`:i==="mathml"?`<math>${s}</math>`:s);const a=tl.content;if(i==="svg"||i==="mathml"){const l=a.firstChild;for(;l.firstChild;)a.appendChild(l.firstChild);a.removeChild(l)}e.insertBefore(a,t)}return[o?o.nextSibling:e.firstChild,t?t.previousSibling:e.lastChild]}},Qd=Symbol("_vtc");function ef(s,e,t){const i=s[Qd];i&&(e=(e?[e,...i]:[...i]).join(" ")),e==null?s.removeAttribute("class"):t?s.setAttribute("class",e):s.className=e}const il=Symbol("_vod"),tf=Symbol("_vsh"),rf=Symbol(""),sf=/(^|;)\s*display\s*:/;function nf(s,e,t){const i=s.style,r=ut(t);let n=!1;if(t&&!r){if(e)if(ut(e))for(const o of e.split(";")){const a=o.slice(0,o.indexOf(":")).trim();t[a]==null&&En(i,a,"")}else for(const o in e)t[o]==null&&En(i,o,"");for(const o in t)o==="display"&&(n=!0),En(i,o,t[o])}else if(r){if(e!==t){const o=i[rf];o&&(t+=";"+o),i.cssText=t,n=sf.test(t)}}else e&&s.removeAttribute("style");il in s&&(s[il]=n?i.display:"",s[tf]&&(i.display="none"))}const rl=/\s*!important$/;function En(s,e,t){if(Re(t))t.forEach(i=>En(s,e,i));else if(t==null&&(t=""),e.startsWith("--"))s.setProperty(e,t);else{const i=af(s,e);rl.test(t)?s.setProperty(Ar(i),t.replace(rl,""),"important"):s[i]=t}}const sl=["Webkit","Moz","ms"],la={};function af(s,e){const t=la[e];if(t)return t;let i=rr(e);if(i!=="filter"&&i in s)return la[e]=i;i=Mc(i);for(let r=0;r<sl.length;r++){const n=sl[r]+i;if(n in s)return la[e]=n}return e}const nl="http://www.w3.org/1999/xlink";function al(s,e,t,i,r,n=ph(e)){i&&e.startsWith("xlink:")?t==null?s.removeAttributeNS(nl,e.slice(6,e.length)):s.setAttributeNS(nl,e,t):t==null||n&&!Ec(t)?s.removeAttribute(e):s.setAttribute(e,n?"":Gi(t)?String(t):t)}function ol(s,e,t,i,r){if(e==="innerHTML"||e==="textContent"){t!=null&&(s[e]=e==="innerHTML"?wu(t):t);return}const n=s.tagName;if(e==="value"&&n!=="PROGRESS"&&!n.includes("-")){const a=n==="OPTION"?s.getAttribute("value")||"":s.value,l=t==null?s.type==="checkbox"?"on":"":String(t);(a!==l||!("_value"in s))&&(s.value=l),t==null&&s.removeAttribute(e),s._value=t;return}let o=!1;if(t===""||t==null){const a=typeof s[e];a==="boolean"?t=Ec(t):t==null&&a==="string"?(t="",o=!0):a==="number"&&(t=0,o=!0)}try{s[e]=t}catch{}o&&s.removeAttribute(r||e)}function of(s,e,t,i){s.addEventListener(e,t,i)}function lf(s,e,t,i){s.removeEventListener(e,t,i)}const ll=Symbol("_vei");function cf(s,e,t,i,r=null){const n=s[ll]||(s[ll]={}),o=n[e];if(i&&o)o.value=i;else{const[a,l]=uf(e);if(i){const c=n[e]=ff(i,r);of(s,a,c,l)}else o&&(lf(s,a,o,l),n[e]=void 0)}}const cl=/(?:Once|Passive|Capture)$/;function uf(s){let e;if(cl.test(s)){e={};let i;for(;i=s.match(cl);)s=s.slice(0,s.length-i[0].length),e[i[0].toLowerCase()]=!0}return[s[2]===":"?s.slice(3):Ar(s.slice(2)),e]}let ca=0;const hf=Promise.resolve(),df=()=>ca||(hf.then(()=>ca=0),ca=Date.now());function ff(s,e){const t=i=>{if(!i._vts)i._vts=Date.now();else if(i._vts<=t.attached)return;yi(pf(i,t.value),e,5,[i])};return t.value=s,t.attached=df(),t}function pf(s,e){if(Re(e)){const t=s.stopImmediatePropagation;return s.stopImmediatePropagation=()=>{t.call(s),s._stopped=!0},e.map(i=>r=>!r._stopped&&i&&i(r))}else return e}const ul=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&s.charCodeAt(2)>96&&s.charCodeAt(2)<123,mf=(s,e,t,i,r,n)=>{const o=r==="svg";e==="class"?ef(s,i,o):e==="style"?nf(s,t,i):On(e)?uo(e)||cf(s,e,t,i,n):(e[0]==="."?(e=e.slice(1),!0):e[0]==="^"?(e=e.slice(1),!1):gf(s,e,i,o))?(ol(s,e,i),!s.tagName.includes("-")&&(e==="value"||e==="checked"||e==="selected")&&al(s,e,i,o,n,e!=="value")):s._isVueCE&&(/[A-Z]/.test(e)||!ut(i))?ol(s,rr(e),i,n,e):(e==="true-value"?s._trueValue=i:e==="false-value"&&(s._falseValue=i),al(s,e,i,o))};function gf(s,e,t,i){if(i)return!!(e==="innerHTML"||e==="textContent"||e in s&&ul(e)&&Ie(t));if(e==="spellcheck"||e==="draggable"||e==="translate"||e==="autocorrect"||e==="form"||e==="list"&&s.tagName==="INPUT"||e==="type"&&s.tagName==="TEXTAREA")return!1;if(e==="width"||e==="height"){const r=s.tagName;if(r==="IMG"||r==="VIDEO"||r==="CANVAS"||r==="SOURCE")return!1}return ul(e)&&ut(t)?!1:e in s}const vf=["ctrl","shift","alt","meta"],_f={stop:s=>s.stopPropagation(),prevent:s=>s.preventDefault(),self:s=>s.target!==s.currentTarget,ctrl:s=>!s.ctrlKey,shift:s=>!s.shiftKey,alt:s=>!s.altKey,meta:s=>!s.metaKey,left:s=>"button"in s&&s.button!==0,middle:s=>"button"in s&&s.button!==1,right:s=>"button"in s&&s.button!==2,exact:(s,e)=>vf.some(t=>s[`${t}Key`]&&!e.includes(t))},hl=(s,e)=>{const t=s._withMods||(s._withMods={}),i=e.join(".");return t[i]||(t[i]=(r,...n)=>{for(let o=0;o<e.length;o++){const a=_f[e[o]];if(a&&a(r,e))return}return s(r,...n)})},xf=Et({patchProp:mf},Jd);let dl;function yf(){return dl||(dl=Md(xf))}const bf=(...s)=>{const e=yf().createApp(...s),{mount:t}=e;return e.mount=i=>{const r=Mf(i);if(!r)return;const n=e._component;!Ie(n)&&!n.render&&!n.template&&(n.template=r.innerHTML),r.nodeType===1&&(r.textContent="");const o=t(r,!1,wf(r));return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),o},e};function wf(s){if(s instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&s instanceof MathMLElement)return"mathml"}function Mf(s){return ut(s)?document.querySelector(s):s}const Sf="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='480'%20height='480'%20data-name='Layer%201'%20viewBox='0%200%20480%20480'%3e%3cpath%20d='M240%200a499.97%20499.97%200%200%200%20240%20240%20499.97%20499.97%200%200%200-240%20240A499.97%20499.97%200%200%200%200%20240%20499.97%20499.97%200%200%200%20240%200m0%2090A299.96%20299.96%200%200%201%2090%20240a299.96%20299.96%200%200%201%20150%20150%20299.96%20299.96%200%200%201%20150-150A299.96%20299.96%200%200%201%20240%2090'%20style='fill:%23130c0e'/%3e%3c/svg%3e",Ef="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20width='430.084'%20height='432.338'%20style='clip-rule:evenodd;fill-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2'%20viewBox='0%200%20430.084%20432.338'%3e%3cpath%20d='M429.934%20247.995c-29.609-16.683-48.547-25.025-56.889-25.025q-9.13%200-14.203%2013.978c-3.382%209.319-10.221%2013.903-20.441%2013.903-4.208%200-12.7-1.503-25.626-4.509-7.215%2010.972-10.822%2018.036-10.822%2021.042%200%204.208%203.081%209.093%209.319%2014.804%206.237%205.712%2011.423%208.492%2015.706%208.492%202.706%200%206.388-.526%2011.047-1.728%204.659-1.127%207.741-1.729%209.319-1.729%204.659%200%206.989%208.568%206.989%2025.627%200%2016.307-3.758%2041.332-11.348%2075.075-9.845-38.703-20.29-58.016-31.262-58.016-1.503%200-4.66%201.127-9.394%203.457-4.735%202.254-8.267%203.381-10.521%203.381-10.972%200-20.817-10.07-29.609-30.135-17.435%202.63-26.153%2011.573-26.153%2026.754%200%207.59%203.532%2013.677%2010.521%2018.186%206.989%204.584%2010.521%207.816%2010.521%209.694%200%2010.221-14.954%2026.002-44.939%2047.195-15.932%2011.347-26.904%2019.313-32.991%2023.897%205.26-6.838%2010.596-15.706%2015.932-26.753%206.087-12.475%209.093-22.169%209.093-29.008%200-3.758-4.359-9.093-13.076-15.932q-13.076-10.258-13.076-21.643c0-6.463%202.254-14.429%206.838-23.898-4.96-5.711-10.821-8.567-17.66-8.567-15.18%200-22.771%204.96-22.771%2014.805v15.33c.376%2012.55-9.093%2018.788-28.481%2018.788-14.805%200-39.605-3.457-74.549-10.221%2039.453-9.844%2059.143-21.267%2059.143-34.118%200%201.503-.752-3.006-2.255-13.677-1.503-11.724%206.839-22.395%2025.025-31.864q-5.073-26.152-27.279-26.152c-2.255%200-6.463%203.983-12.475%2011.949-6.087%207.966-11.724%2011.949-17.059%2011.949-9.093%200-20.892-9.845-35.246-29.609-6.838-9.845-17.284-24.424-31.262-43.813%208.717%204.584%2017.435%209.093%2026.152%2013.677%2011.348%205.336%2020.516%207.966%2027.28%207.966%205.335%200%2010.521-4.659%2015.631-13.978s11.874-13.978%2020.215-13.978c1.127%200%208.718%202.255%2022.771%206.839%207.214-10.972%2010.821-19.163%2010.821-24.499%200-4.584-2.78-9.769-8.266-15.631q-8.229-8.793-15.105-8.793c-1.879%200-4.81.602-8.793%201.729s-6.914%201.728-8.792%201.728c-6.839%200-10.221-8.567-10.221-25.626%200-4.584%204.359-30.511%2013.076-77.931-.376%205.712%202.104%2016.308%207.365%2031.864%206.463%2018.938%2014.053%2028.482%2022.77%2028.482%201.503%200%204.585-1.127%209.094-3.382%204.584-2.254%208.116-3.382%2010.821-3.382%208.718%200%2015.932%204.96%2021.643%2014.805l8.568%2015.331c7.965%200%2014.579-2.856%2019.914-8.492%205.336-5.712%207.966-12.55%207.966-20.516%200-8.342-3.532-14.73-10.521-19.088-7.064-4.359-10.521-7.666-10.521-9.92%200-7.966%2012.55-21.418%2037.575-40.356C229.508%2011.573%20242.66%202.705%20248.672%200c-16.308%2022.019-24.499%2038.101-24.499%2048.321%200%205.336%203.231%2010.972%209.694%2017.059%207.966%207.215%2012.55%2012.325%2013.677%2015.331q5.637%2013.076-1.127%2035.846c10.221%207.215%2018.036%2010.822%2023.297%2010.822%2010.972%200%2016.458-5.711%2016.458-17.059%200-1.127-.451-4.734-1.428-10.822s-1.203-9.469-.827-10.22c1.503-5.336%2011.949-7.966%2031.263-7.966%2012.174%200%2037.349%203.382%2075.676%2010.22-8.342%202.255-20.892%205.712-37.575%2010.221q-22.771%206.876-22.771%2015.331c0%202.63.977%207.214%202.856%2013.677s2.856%2011.197%202.856%2014.203c0%205.336-3.382%2010.221-10.221%2014.805l-19.313%2013.677c4.584%208.342%207.59%2013.302%209.093%2014.805%203.757%204.584%208.943%206.838%2015.33%206.838%204.585%200%208.718-3.983%2012.55-11.949%203.758-7.965%209.845-11.948%2018.187-11.948%2010.22%200%2021.793%209.469%2034.719%2028.482%207.215%2010.671%2018.412%2026.753%2033.517%2048.396m-126.252-32.991c0-24.273-8.943-45.315-26.754-63.126-17.81-17.81-38.852-26.753-63.126-26.753-24.649%200-45.916%208.792-63.727%2026.453-17.811%2017.66-26.904%2038.777-27.28%2063.426-.375%2024.274%208.643%2045.241%2027.055%2062.826%2018.411%2017.66%2039.754%2026.453%2064.027%2026.453%2025.777%200%2047.345-8.417%2064.554-25.326%2017.285-16.834%2025.702-38.176%2025.326-63.953m-8.567%200c0%2023.147-7.741%2042.31-23.297%2057.415-15.556%2015.18-34.869%2022.77-58.016%2022.77-22.394%200-41.558-7.74-57.414-23.296-15.932-15.556-23.898-34.494-23.898-56.889%200-22.019%208.041-40.881%2024.198-56.588%2016.158-15.706%2035.171-23.597%2057.19-23.597s41.032%207.966%2057.189%2023.898c16.082%2015.932%2024.198%2034.719%2024.198%2056.287'%20style='fill-rule:nonzero'/%3e%3c/svg%3e",Tf="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20width='225.944'%20height='362.9'%20style='clip-rule:evenodd;fill-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2'%20viewBox='0%200%20225.944%20362.9'%3e%3cpath%20d='M193.602%20329.953q-32.378%2032.948-79.757%2032.947c-35.448%200-63.569-12.129-84.371-36.403Q-.002%20291.823%200%20238.091c0-38.522%2016.76-82.455%2050.276-131.769C77.615%2065.881%20109.787%2030.436%20146.776%200c-5.397%2024.66-8.085%2042.182-8.085%2052.584%200%2023.893%207.503%2047.196%2022.527%2069.927%2018.496%2026.964%2032.548%2047.014%2042.19%2060.096%2015.024%2022.741%2022.536%2044.887%2022.536%2066.448q0%2047.973-32.345%2080.899m-.582-123.374c-5.776-12.903-12.521-21.472-20.227-25.716%201.154%202.317%201.736%205.591%201.736%209.829%200%208.094-2.309%2019.645-6.939%2034.667l-7.503%2023.118c0%2013.482%206.727%2020.227%2020.218%2020.227%2014.248%200%2021.382-9.446%2021.382-28.321%200-9.622-2.886-20.885-8.667-33.808'%20style='fill-rule:nonzero'/%3e%3c/svg%3e",Af="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20width='367.108'%20height='380.936'%20style='clip-rule:evenodd;fill-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2'%20viewBox='0%200%20367.108%20380.936'%3e%3cpath%20d='M366.883%20184.193c0%2024.875-9.018%2041.859-27.129%2050.877-5.261%202.63-21.869%206.237-49.75%2010.746-18.111%203.006-27.129%209.995-27.129%2020.892v45.766c0%201.879.601%207.741%201.728%2017.51l1.729%2018.111c0%205.637-1.353%2014.88-3.983%2027.731a2504%202504%200%200%201-24.875%205.11c-3.006-11.348-4.509-19.013-4.509-23.221%200-1.879.451-4.735%201.428-8.492.902-3.758%201.428-6.614%201.428-8.492%200-2.631-2.33-9.995-7.064-22.019h-8.793c-1.127%201.878-1.578%204.358-1.202%207.364%201.503%206.388%202.104%2011.874%201.728%2016.383-6.387%204.509-15.255%2010.596-26.603%2018.111-2.63-.751-3.607-1.127-2.856-1.127v-40.13q-1.127-2.818-5.636-2.255h-6.763l-6.764%2053.132c-5.26.375-11.723.375-19.238%200-2.631-12.4-7.365-30.887-14.129-55.386h-4.509c-4.133%2013.226-6.387%2020.366-6.763%2021.493%200%201.503.451%204.434%201.428%208.792.902%204.359%201.428%207.29%201.428%208.793%200%201.127-.376%203.983-1.128%208.492l-1.728%2013.602c-.752.752-1.728%201.127-2.856%201.127-11.272%200-18.862-2.855-22.62-8.492-3.757-5.636-5.26-13.602-4.509-23.747l4.509-67.861q0-1.69%201.127-4.509c.752-1.878%201.128-3.231%201.128-3.983%200-3.006-3.232-9.018-9.62-18.111-1.127-.376-6.989-1.728-17.51-3.983q-9.581-2.254-37.875-7.891C13.001%20233.642%200%20212.75%200%20175.776c0-55.01%2022.62-100.851%2067.86-137.374%201.879%2010.145%205.111%2023.747%209.62%2040.731%203.381.752%2010.746%202.48%2022.019%205.11%202.254.752%2013.752%204.885%2034.493%2012.475q-15.894-9.582-41.257-31.112c-6.388-7.515-9.619-20.14-9.619-37.876%200-4.133%207.139-9.018%2021.493-14.729%2012.775-5.261%2022.47-8.267%2028.857-9.018C153.832%201.353%20169.463%200%20180.435%200c47.119%200%2085.221%2012.099%20114.228%2036.222-9.393%2010.972-25.626%2022.621-48.622%2035.02%209.094.376%2022.245-3.156%2039.604-10.746%2017.36-7.515%2024.725-11.273%2022.019-11.273%203.006%200%209.094%206.012%2018.112%2018.111%206.763%209.018%2012.249%2017.135%2016.382%2024.349%2012.024%2021.493%2020.141%2044.714%2024.349%2069.589%200%208.718.15%2014.88.601%2018.637v4.509zM150.3%20194.338c0-16.232-7.064-31.563-21.192-46.067s-29.309-21.793-45.541-21.793c-14.354%200-26.979%206.087-37.876%2018.186-10.972%2012.174-16.383%2025.626-16.383%2040.431%200%2012.926%206.238%2021.267%2018.638%2025.025%207.89%202.254%2019.013%203.607%2033.366%203.983h31.112c25.251.375%2037.876-6.238%2037.876-19.765m61.623%2070.115v-17.51a572%20572%200%200%201-7.891-15.255c-2.254-7.515-6.387-18.111-12.475-31.638l-6.237%2066.132q0%207.89-3.382%207.89-2.255%200-3.381-1.127c-2.631-39.98-3.983-57.264-3.983-52.004v-19.764c-.752-1.127-1.654-1.729-2.781-1.729-12.851%2013.227-19.238%2034.494-19.238%2063.878q0%2024.348%204.509%2029.985c3.006-.752%206.387-2.104%2010.145-3.983%201.503-.752%205.862-1.127%2013.001-1.127s15.856%202.254%2026.002%206.763c3.757%200%205.636-10.145%205.636-30.511m127.83-78.757c0-15.18-5.636-28.707-16.984-40.656-11.347-11.949-24.348-17.886-39.002-17.886-15.857%200-30.662%207.214-44.414%2021.794-13.753%2014.504-20.666%2029.684-20.666%2045.541%200%2013.226%206.387%2019.764%2019.238%2019.764h65.005c24.499-.376%2036.748-9.845%2036.748-28.482'%20style='fill-rule:nonzero'/%3e%3c/svg%3e",Cf="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20width='393.786'%20height='400.476'%20style='clip-rule:evenodd;fill-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2'%20viewBox='0%200%20393.786%20400.476'%3e%3cpath%20d='M393.711%20224.699c0%207.515-2.931%2014.279-8.717%2020.291s-12.475%209.018-19.99%209.018c-12.024%200-20.817-5.636-26.453-16.909l-26.453-1.127c-5.636%200-16.758%202.48-33.216%207.365-17.661%204.884-27.806%208.792-30.436%2011.798q-6.2%206.763-10.145%2031.563c-2.255%2013.527-3.382%2023.447-3.382%2029.835%200%2010.145%201.578%2017.585%204.81%2022.244%203.231%204.66%209.769%208.643%2019.689%2011.799s16.082%204.96%2018.337%205.335c1.503%200%203.907-.15%207.364-.526h6.764c4.885%200%209.92.752%2015.18%202.255%207.515%202.254%2010.747%205.26%209.619%209.018-5.26-.752-14.429.376-27.58%203.382l15.782%207.89q0%206.764-19.164%206.764c-3.381%200-7.965-.752-13.827-2.255-5.787-1.503-9.695-2.254-11.573-2.254h-7.29q-.564%205.636-3.382%2016.909-9.58-.564-22.545-11.273c-8.642-7.139-14.053-10.671-16.307-10.671-2.255%200-5.486%203.607-9.544%2010.671-4.134%207.139-6.163%2012.024-6.163%2014.655q-7.327-3.947-12.399-14.655c-1.503-4.885-3.157-9.769-5.035-14.654-3.758.376-10.672%208.266-20.817%2023.672h-2.856c-.751-1.127-3.607-9.018-8.417-23.672q-17.472-5.637-32.69-5.636-7.327%200-22.545%203.381l-15.781-1.127c2.254-2.254%208.792-6.538%2019.689-12.926q19.163-11.272%2029.308-11.272c1.128%200%202.631.225%204.509.601s3.382.601%204.509.601c2.631%200%206.839-1.428%2012.701-4.208%205.786-2.781%209.168-5.336%2010.145-7.59.977-2.255%201.428-8.117%201.428-17.435%200-21.418-5.636-37.35-16.909-47.871q-14.654-14.09-48.472-20.29c-6.012%2021.417-22.92%2032.089-50.651%2032.089-9.018%200-18.036-5.411-27.054-16.308C4.509%20252.054%200%20242.134%200%20233.116c0-13.903%205.786-25.325%2017.434-34.343-9.393-9.77-14.053-19.69-14.053-29.835%200-9.394%202.931-17.66%208.718-24.8%205.786-7.139%2013.452-11.272%2022.845-12.399-.751-12.024%203.157-20.291%2011.799-24.8-4.133-4.133-6.162-11.423-6.162-21.944%200-12.4%204.133-22.695%2012.399-30.962%208.267-8.266%2018.563-12.399%2030.962-12.399%2013.527%200%2024.574%204.734%2033.217%2014.128C128.055%2018.563%20151.502%200%20187.574%200q28.182%200%2049.599%2022.545%207.891%208.456%207.891%209.018c-4.509%200-2.254-.826%206.764-2.555%209.018-1.653%2015.556-2.555%2019.689-2.555%2014.654%200%2027.58%205.411%2038.853%2016.308q14.654%2014.654%2020.29%2037.199%203.946.564%2012.4%203.382%2012.4%206.2%2012.4%2021.418c0%201.878-1.503%205.486-4.509%2010.671q36.072%2020.29%2036.072%2056.363%200%2010.145-7.891%2028.181%2014.654%208.454%2014.654%2024.799m-232.063%2024.8v-7.29c0-8.642-4.209-16.533-12.701-23.672-8.416-7.139-16.984-10.671-25.626-10.671-10.521%200-20.29%202.405-29.308%207.289%2019.914-1.127%2042.459%2010.371%2067.56%2034.344m-10.146-69.814c-5.636-6.388-10.521-12.926-14.654-19.69-15.782%204.133-23.672%208.793-23.672%2014.053%204.509-.375%2011.047.451%2019.689%202.555s14.805%203.082%2018.637%203.082m34.344-17.435v-24.8c-9.018-1.503-14.504-2.254-16.308-2.254v8.416l16.308%2018.563m73.196-15.782c-4.509-1.879-12.926-5.636-25.325-11.272v48.471c17.66-10.145%2026.077-22.545%2025.325-37.199m30.962%2066.508-12.4-15.18a4706%204706%200%200%200-22.845%2016.082c-7.741%205.411-14.354%2011.573-19.99%2018.336%2016.908-9.018%2035.32-15.405%2055.16-19.163'%20style='fill-rule:nonzero'/%3e%3c/svg%3e",Lf="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20xml:space='preserve'%20width='347.72'%20height='387.035'%20style='clip-rule:evenodd;fill-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:2'%20viewBox='0%200%20347.72%20387.035'%3e%3cpath%20d='M341.482%20269.789c-16.833%2040.206-50.35%2060.271-100.4%2060.271-9.169%200-19.163%201.127-29.835%203.457-16.082%203.457-24.123%208.266-24.123%2014.353%200%201.879%201.353%204.134%203.983%206.614%202.705%202.48%204.96%203.757%206.914%203.757-9.544%200-3.081.301%2019.539.827%2022.62.601%2036.748.826%2042.46.826-33.292%2019.539-88.978%2028.482-167.059%2026.979-25.626-.375-47.645-11.648-65.982-33.892C8.943%20331.939%200%20308.417%200%20282.415c0-27.505%209.244-50.952%2027.881-70.341%2018.562-19.313%2041.633-29.008%2069.138-29.008%206.087%200%2014.279%201.353%2024.424%203.983%2010.145%202.706%2016.909%203.983%2020.365%203.983%2014.129%200%2031.789-5.862%2052.831-17.51s31.037-17.51%2029.835-17.51c-3.833%2040.205-17.21%2067.184-40.206%2080.937-16.458%209.544-24.649%2018.938-24.649%2028.106%200%205.711%203.457%2010.371%2010.296%2013.752q8.003%204.059%2017.81%204.059c9.92%200%2019.69-6.088%2029.309-18.337%209.544-12.25%2013.752-23.372%2012.625-33.292-1.127-11.498-.376-25.25%202.33-41.332q1.127-6.876%208.341-16.909c4.81-6.688%209.093-10.822%2012.926-12.325%200%203.457-1.202%209.169-3.757%2017.21-2.48%208.041-3.758%2013.978-3.758%2017.81%200%208.417%202.255%2014.955%206.914%2019.539%206.914-2.705%2013.001-11.272%2018.337-25.851%204.584-11.122%207.289-21.794%208.041-32.164-16.083-.752-31.488-8.042-46.218-21.794-14.729-13.752-22.094-28.707-22.094-44.789%200-2.706.376-5.336%201.127-8.042%202.255%203.457%205.712%208.793%2010.296%2016.083%206.538%209.544%2011.498%2014.353%2014.955%2014.353%204.584%200%206.914-4.809%206.914-14.353%200-12.25-3.232-23.372-9.77-33.292-7.289-11.874-16.683-17.811-28.106-17.811-5.336%200-13.377%202.856-24.123%208.643-10.747%205.711-20.516%208.642-29.309%208.642q-4.058%200-35.621-10.371c37.124-6.087%2055.686-11.648%2055.686-16.608%200-13.001-25.476-21.793-76.352-26.378-4.96-.375-14.128-1.127-27.58-2.329q2.254-2.818%2032.69-6.313C118.737.977%20130.837%200%20137.675%200c91.082%200%20148.873%2044.189%20173.372%20132.64%204.208-3.456%206.312-9.318%206.312-17.434%200-10.446-3.081-23.673-9.168-39.605-2.33-6.162-5.937-15.48-10.897-27.955%2031.338%2039.98%2047.044%2077.855%2047.044%20113.627%200%2018.862-4.434%2035.921-13.226%2051.327-5.712%2010.371-16.458%2023.672-32.165%2039.83-15.706%2016.157-26.377%2028.632-32.164%2037.5%2021.042-5.712%2034.87-10.146%2041.333-13.227%2014.504-6.463%2027.73-16.232%2039.604-29.308%200%204.96-2.104%2012.475-6.313%2022.394M91.232%2044.189c0%206.914-3.832%2011.272-11.498%2013.226l-14.954%202.33c-5.336%202.705-13.227%2013.226-23.522%2031.563q-1.691-8.568-5.186-24.123c-3.457.375-9.168%203.457-17.209%209.168-3.457%202.705-9.018%206.688-16.683%2012.024%202.329-13.752%209.919-27.73%2022.995-41.934C38.928%2030.737%2052.38%2022.921%2065.381%2022.921c17.209%200%2025.851%207.064%2025.851%2021.268m99.875%2052.83c0%206.538-3.532%2011.949-10.596%2016.383s-14.053%206.613-20.967%206.613c-9.168%200-17.435-5.185-24.649-15.481-8.793-12.625-17.811-20.816-26.979-24.724%201.879-1.879%204.208-2.856%206.914-2.856%203.456%200%209.243%202.706%2017.51%208.041%208.191%205.336%2013.451%208.041%2015.781%208.041%201.879%200%205.035-2.705%209.469-8.041%204.434-5.335%209.243-8.041%2014.654-8.041q18.938%200%2018.938%2020.065'%20style='fill-rule:nonzero'/%3e%3c/svg%3e";var bt=(s=>(s[s.White=1]="White",s[s.Blue=2]="Blue",s[s.Black=3]="Black",s[s.Red=4]="Red",s[s.Green=5]="Green",s))(bt||{});const Rf="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20640%20512'%3e%3c!--!Font%20Awesome%20Free%206.7.2%20by%20@fontawesome%20-%20https://fontawesome.com%20License%20-%20https://fontawesome.com/license/free%20Copyright%202025%20Fonticons,%20Inc.--%3e%3cpath%20d='M144%200a80%2080%200%201%201%200%20160A80%2080%200%201%201%20144%200zM512%200a80%2080%200%201%201%200%20160A80%2080%200%201%201%20512%200zM0%20298.7C0%20239.8%2047.8%20192%20106.7%20192l42.7%200c15.9%200%2031%203.5%2044.6%209.7c-1.3%207.2-1.9%2014.7-1.9%2022.3c0%2038.2%2016.8%2072.5%2043.3%2096c-.2%200-.4%200-.7%200L21.3%20320C9.6%20320%200%20310.4%200%20298.7zM405.3%20320c-.2%200-.4%200-.7%200c26.6-23.5%2043.3-57.8%2043.3-96c0-7.6-.7-15-1.9-22.3c13.6-6.3%2028.7-9.7%2044.6-9.7l42.7%200C592.2%20192%20640%20239.8%20640%20298.7c0%2011.8-9.6%2021.3-21.3%2021.3l-213.3%200zM224%20224a96%2096%200%201%201%20192%200%2096%2096%200%201%201%20-192%200zM128%20485.3C128%20411.7%20187.7%20352%20261.3%20352l117.3%200C452.3%20352%20512%20411.7%20512%20485.3c0%2014.7-11.9%2026.7-26.7%2026.7l-330.7%200c-14.7%200-26.7-11.9-26.7-26.7z'/%3e%3c/svg%3e",Pf="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'%3e%3c!--!Font%20Awesome%20Free%206.7.2%20by%20@fontawesome%20-%20https://fontawesome.com%20License%20-%20https://fontawesome.com/license/free%20Copyright%202025%20Fonticons,%20Inc.--%3e%3cpath%20d='M47.6%20300.4L228.3%20469.1c7.5%207%2017.4%2010.9%2027.7%2010.9s20.2-3.9%2027.7-10.9L464.4%20300.4c30.4-28.3%2047.6-68%2047.6-109.5v-5.8c0-69.9-50.5-129.5-119.4-141C347%2036.5%20300.6%2051.4%20268%2084L256%2096%20244%2084c-32.6-32.6-79-47.5-124.6-39.9C50.5%2055.6%200%20115.2%200%20185.1v5.8c0%2041.5%2017.2%2081.2%2047.6%20109.5z'/%3e%3c/svg%3e",Df="/assets/colorpie-tM7i4vK-.svg",Ff="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20448%20512'%3e%3c!--!Font%20Awesome%20Free%206.7.2%20by%20@fontawesome%20-%20https://fontawesome.com%20License%20-%20https://fontawesome.com/license/free%20Copyright%202025%20Fonticons,%20Inc.--%3e%3cpath%20d='M64%2032C28.7%2032%200%2060.7%200%2096L0%20416c0%2035.3%2028.7%2064%2064%2064l320%200c35.3%200%2064-28.7%2064-64l0-320c0-35.3-28.7-64-64-64L64%2032zm64%2096a32%2032%200%201%201%200%2064%2032%2032%200%201%201%200-64zM96%20352a32%2032%200%201%201%2064%200%2032%2032%200%201%201%20-64%200zM224%20224a32%2032%200%201%201%200%2064%2032%2032%200%201%201%200-64zm64-64a32%2032%200%201%201%2064%200%2032%2032%200%201%201%20-64%200zm32%20160a32%2032%200%201%201%200%2064%2032%2032%200%201%201%200-64z'/%3e%3c/svg%3e",If="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'%3e%3c!--!Font%20Awesome%20Free%206.7.2%20by%20@fontawesome%20-%20https://fontawesome.com%20License%20-%20https://fontawesome.com/license/free%20Copyright%202025%20Fonticons,%20Inc.--%3e%3cpath%20d='M105.1%20202.6c7.7-21.8%2020.2-42.3%2037.8-59.8c62.5-62.5%20163.8-62.5%20226.3%200L386.3%20160%20352%20160c-17.7%200-32%2014.3-32%2032s14.3%2032%2032%2032l111.5%200c0%200%200%200%200%200l.4%200c17.7%200%2032-14.3%2032-32l0-112c0-17.7-14.3-32-32-32s-32%2014.3-32%2032l0%2035.2L414.4%2097.6c-87.5-87.5-229.3-87.5-316.8%200C73.2%20122%2055.6%20150.7%2044.8%20181.4c-5.9%2016.7%202.9%2034.9%2019.5%2040.8s34.9-2.9%2040.8-19.5zM39%20289.3c-5%201.5-9.8%204.2-13.7%208.2c-4%204-6.7%208.8-8.1%2014c-.3%201.2-.6%202.5-.8%203.8c-.3%201.7-.4%203.4-.4%205.1L16%20432c0%2017.7%2014.3%2032%2032%2032s32-14.3%2032-32l0-35.1%2017.6%2017.5c0%200%200%200%200%200c87.5%2087.4%20229.3%2087.4%20316.7%200c24.4-24.4%2042.1-53.1%2052.9-83.8c5.9-16.7-2.9-34.9-19.5-40.8s-34.9%202.9-40.8%2019.5c-7.7%2021.8-20.2%2042.3-37.8%2059.8c-62.5%2062.5-163.8%2062.5-226.3%200l-.1-.1L125.6%20352l34.4%200c17.7%200%2032-14.3%2032-32s-14.3-32-32-32L48.4%20288c-1.6%200-3.2%20.1-4.8%20.3s-3.1%20.5-4.6%201z'/%3e%3c/svg%3e",zf="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20640%20512'%3e%3c!--!%20Font%20Awesome%20Pro%206.7.2%20by%20@fontawesome%20-%20https://fontawesome.com%20License%20-%20https://fontawesome.com/license%20(Commercial%20License)%20Copyright%202024%20Fonticons,%20Inc.%20--%3e%3cpath%20d='M0%20256c0-17.7%2014.3-32%2032-32l576%200c17.7%200%2032%2014.3%2032%2032s-14.3%2032-32%2032L32%20288c-17.7%200-32-14.3-32-32z'/%3e%3c/svg%3e",Nf="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20576%20512'%3e%3c!--!Font%20Awesome%20Free%206.7.2%20by%20@fontawesome%20-%20https://fontawesome.com%20License%20-%20https://fontawesome.com/license/free%20Copyright%202025%20Fonticons,%20Inc.--%3e%3cpath%20d='M137.4%20502.6c12.5%2012.5%2032.8%2012.5%2045.3%200l96-96c12.5-12.5%2012.5-32.8%200-45.3s-32.8-12.5-45.3%200L192%20402.7%20192%20288l352%200c17.7%200%2032-14.3%2032-32s-14.3-32-32-32l-96%200%200-114.7%2041.4%2041.4c12.5%2012.5%2032.8%2012.5%2045.3%200s12.5-32.8%200-45.3l-96-96c-12.5-12.5-32.8-12.5-45.3%200l-96%2096c-12.5%2012.5-12.5%2032.8%200%2045.3s32.8%2012.5%2045.3%200L384%20109.3%20384%20224l-192%200-64%200-96%200c-17.7%200-32%2014.3-32%2032s14.3%2032%2032%2032l96%200%200%20114.7L86.6%20361.4c-12.5-12.5-32.8-12.5-45.3%200s-12.5%2032.8%200%2045.3l96%2096zM128%20192l64%200%200-128c0-17.7-14.3-32-32-32s-32%2014.3-32%2032l0%20128zM448%20320l-64%200%200%20128c0%2017.7%2014.3%2032%2032%2032s32-14.3%2032-32l0-128z'/%3e%3c/svg%3e",ua="data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20384%20512'%3e%3c!--!Font%20Awesome%20Free%206.7.2%20by%20@fontawesome%20-%20https://fontawesome.com%20License%20-%20https://fontawesome.com/license/free%20Copyright%202025%20Fonticons,%20Inc.--%3e%3cpath%20d='M342.6%20150.6c12.5-12.5%2012.5-32.8%200-45.3s-32.8-12.5-45.3%200L192%20210.7%2086.6%20105.4c-12.5-12.5-32.8-12.5-45.3%200s-12.5%2032.8%200%2045.3L146.7%20256%2041.4%20361.4c-12.5%2012.5-12.5%2032.8%200%2045.3s32.8%2012.5%2045.3%200L192%20301.3%20297.4%20406.6c12.5%2012.5%2032.8%2012.5%2045.3%200s12.5-32.8%200-45.3L237.3%20256%20342.6%20150.6z'/%3e%3c/svg%3e",Of={class:"grid"},Bf={class:"cell"},kf={class:"col grow"},Uf={class:"row grow"},Gf={key:0,class:"row menu"},Hf=["onClick"],Vf=["onClick"],Wf={class:"row grow"},jf=Os({__name:"PlayerGrid",props:{players:{}},emits:["action"],setup(s,{emit:e}){const t=s,i=e,r=Kt(!0),n=Kt(!1),o=Kt(!1),a=Kt("player-count"),l=gi(()=>t.players.length%2!==0),c=gi(()=>t.players.length/2+(l.value?1:0)),u=gi(()=>l.value?t.players.slice(1,t.players.length):t.players),d=gi(()=>u.value.slice(0,Math.ceil(u.value.length/2))),h=gi(()=>u.value.slice(Math.ceil(u.value.length/2)));function m(){n.value=!0}function g(f){a.value=f,o.value=!0}return(f,p)=>($e(),Ke("div",Of,[l.value?($e(),Ke("div",{key:0,class:"col",style:xr({width:`calc(100% / ${c.value})`})},[We("div",Bf,[wn(f.$slots,"default",{player:f.players[0],rotate:r.value?90:void 0},void 0,!0)])],4)):vr("",!0),We("div",kf,[We("div",Uf,[($e(!0),Ke(lt,null,Xs(d.value,(v,_)=>($e(),Ke("div",{key:_,class:"cell",style:xr({width:`calc(100% / ${c.value})`})},[wn(f.$slots,"default",{player:v,rotate:r.value?180:void 0},void 0,!0)],4))),128))]),n.value?($e(),Ke("div",Gf,[o.value?a.value==="player-count"?($e(),Ke(lt,{key:1},[($e(),Ke(lt,null,Xs([2,3,4,5,6,7,8,10],v=>We("span",{key:v,onClick:_=>{i("action","player-count",v),o.value=!1}},Ls(v),9,Hf)),64)),We("img",{src:ua,alt:"back",onClick:p[8]||(p[8]=v=>o.value=!1)})],64)):a.value==="life-total"?($e(),Ke(lt,{key:2},[($e(),Ke(lt,null,Xs([10,20,40,80,100],v=>We("span",{key:v,onClick:_=>{i("action","life-total",v),o.value=!1}},Ls(v),9,Vf)),64)),We("img",{src:ua,alt:"back",onClick:p[9]||(p[9]=v=>o.value=!1)})],64)):vr("",!0):($e(),Ke(lt,{key:0},[We("img",{src:Rf,alt:"players",onClick:p[0]||(p[0]=v=>g("player-count"))}),We("img",{src:Pf,alt:"life",onClick:p[1]||(p[1]=v=>g("life-total"))}),We("img",{src:Df,alt:"colorselect",onClick:p[2]||(p[2]=v=>i("action","color-select"))}),We("img",{src:Ff,alt:"roll",onClick:p[3]||(p[3]=v=>i("action","roll"))}),We("img",{src:If,alt:"reset",onClick:p[4]||(p[4]=v=>i("action","reset"))}),r.value?($e(),Ke("img",{key:0,src:zf,alt:"no-rotate",onClick:p[5]||(p[5]=v=>r.value=!1)})):($e(),Ke("img",{key:1,src:Nf,alt:"rotate",onClick:p[6]||(p[6]=v=>r.value=!0)})),We("img",{src:ua,alt:"close",onClick:p[7]||(p[7]=v=>n.value=!1)})],64))])):vr("",!0),We("div",Wf,[($e(!0),Ke(lt,null,Xs(h.value,(v,_)=>($e(),Ke("div",{key:_,class:"cell",style:xr({width:`calc(100% / ${c.value})`})},[wn(f.$slots,"default",{player:v},void 0,!0)],4))),128))])]),n.value?vr("",!0):($e(),Ke("button",{key:1,onClick:m}))]))}}),qn=(s,e)=>{const t=s.__vccOpts||s;for(const[i,r]of e)t[i]=r;return t},qf=qn(jf,[["__scopeId","data-v-164923df"]]),Yf="#FDEEC3",Xf="#337fb4",$f="#020202",Zf="#b42125",Kf="#0a8050",Jf="#DBD6D3",Qf=Os({__name:"Background",props:{player:{}},setup(s){const e=s,t=gi(()=>{if(!e.player.colors.length)return{position:"relative",width:"100%",height:"100%",background:Jf};const i=[];for(const a of e.player.colors)switch(a){case bt.White:i.push(Yf);break;case bt.Blue:i.push(Xf);break;case bt.Black:i.push($f);break;case bt.Red:i.push(Zf);break;case bt.Green:i.push(Kf);break}const r=100/i.length,n=[];let o=0;for(let a=0;a<i.length;a++){const l=i[a];if(a===0)o+=r,n.push(l+", "+l+" "+o+"%");else if(a===i.length-1)n.push(l+" "+o+"%, "+l);else{const c=o;o+=r,n.push(l+" "+c+"%,"+l+" "+o+"%")}}return{position:"relative",width:"100%",height:"100%",background:`linear-gradient(to right, ${n.join(", ")})`}});return(i,r)=>($e(),Ke("div",{style:xr(t.value)},[wn(i.$slots,"default")],4))}}),ep="data:image/svg+xml,%3c!--%20Generated%20by%20IcoMoon.io%20--%3e%3csvg%20version='1.1'%20xmlns='http://www.w3.org/2000/svg'%20width='32'%20height='32'%20viewBox='0%200%2032%2032'%3e%3ctitle%3ep%3c/title%3e%3cpath%20fill='%23444'%20d='M25%2015.976c0.019-1.745-0.535-3.507-1.622-4.874-0.525-0.578-0.957-1.237-1.513-1.783-1.226-1.217-3.061-1.298-4.538-2.064-0.086-0.77-0.367-1.54-0.197-2.316%200.052-0.258%200.128-0.52-0.009-0.767-0.387-0.892-0.055-1.861-0.123-2.791-0.052-0.486-0.019-1.081-0.481-1.381-0.108%201.011-0.48%201.952-0.781%202.912-0.139%200.748-0.139%201.527-0.461%202.232%200.204%200.715-0.2%201.316-0.639%201.844-0.969%200.496-2.121%200.614-2.964%201.342-0.601%200.51-1.25%200.957-1.923%201.372-0.505%200.631-1.063%201.24-1.288%202.038-0.902%201.089-1.008%202.551-1.52%203.826-0.010%201.894%200.374%203.932%201.584%205.45%200.865%200.714%201.47%201.675%202.334%202.39%200.829%200.495%201.715%200.902%202.571%201.348%200.558%200.13%201.135%200.194%201.69%200.346%200.451%202.321%200.758%204.699%201.663%206.901%200.3-0.904%200.264-1.872%200.523-2.786%200.365-1.351-0.384-2.756%200.038-4.082%200.633-0.566%201.688-0.198%202.39-0.684%201.336-0.824%202.75-1.626%203.719-2.887%200.361-0.725%201.119-1.266%201.119-2.135%200.006-1.171%200.689-2.267%200.428-3.45zM15.082%2023.137c-0.968-0.235-1.87-0.698-2.682-1.264-0.874-0.582-1.2-1.669-2.062-2.264-0.807-0.964-0.633-2.28-0.963-3.421%200.133-0.796%200.289-1.586%200.372-2.392%200.394-0.639%201.001-1.148%201.17-1.917%200.577-0.827%201.456-1.399%202.161-2.116%200.513-0.592%201.33-0.342%202.005-0.365-0.067%200.653-0.12%201.328%200.043%201.973%200.080%200.396%200.258%200.786%200.197%201.2-0.135%200.881%200.196%201.765-0.038%202.636-0.471%201.821%200.043%203.66%200.088%205.496-0.067%200.813-0.105%201.633-0.29%202.433zM22.422%2019.686c-0.641%200.456-1.188%201.016-1.747%201.562-0.973%200.673-1.934%201.385-3.092%201.721%200.105-0.826%200.206-1.675-0.057-2.484-0.646-1.827%200.146-3.737%200.279-5.584-0.118-1.098-0.005-2.27-0.509-3.281-0.066-0.76%200.263-1.494%200.485-2.209%200.765%200.305%201.485%200.717%202.121%201.247%200.769%200.576%201.946%200.95%202.118%202.024%200.088%200.706%200.86%201.132%200.838%201.854-0.048%201.716%200.188%203.511-0.437%205.149z'%3e%3c/path%3e%3c/svg%3e";var tp=Object.defineProperty,ip=(s,e,t)=>e in s?tp(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t,rp=(s,e,t)=>(ip(s,e+"",t),t);/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Lo="143",zi="srgb",_r="srgb-linear",fl="300 es";class ns{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const t=this._listeners[e.type];if(t!==void 0){e.target=this;const i=t.slice(0);for(let r=0,n=i.length;r<n;r++)i[r].call(this,e);e.target=null}}}const xt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],ha=Math.PI/180,ao=180/Math.PI;function ks(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(xt[s&255]+xt[s>>8&255]+xt[s>>16&255]+xt[s>>24&255]+"-"+xt[e&255]+xt[e>>8&255]+"-"+xt[e>>16&15|64]+xt[e>>24&255]+"-"+xt[t&63|128]+xt[t>>8&255]+"-"+xt[t>>16&255]+xt[t>>24&255]+xt[i&255]+xt[i>>8&255]+xt[i>>16&255]+xt[i>>24&255]).toLowerCase()}function Ht(s,e,t){return Math.max(e,Math.min(t,s))}function sp(s,e){return(s%e+e)%e}function da(s,e,t){return(1-t)*s+t*e}function pl(s){return(s&s-1)===0&&s!==0}function oo(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}class Ge{constructor(e=0,t=0){Ge.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,r=e.elements;return this.x=r[0]*t+r[3]*i+r[6],this.y=r[1]*t+r[4]*i+r[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),r=Math.sin(t),n=this.x-e.x,o=this.y-e.y;return this.x=n*i-o*r+e.x,this.y=n*r+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Jt{constructor(){Jt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,i,r,n,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=r,u[2]=a,u[3]=t,u[4]=n,u[5]=l,u[6]=i,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,n=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],u=i[4],d=i[7],h=i[2],m=i[5],g=i[8],f=r[0],p=r[3],v=r[6],_=r[1],b=r[4],x=r[7],S=r[2],E=r[5],R=r[8];return n[0]=o*f+a*_+l*S,n[3]=o*p+a*b+l*E,n[6]=o*v+a*x+l*R,n[1]=c*f+u*_+d*S,n[4]=c*p+u*b+d*E,n[7]=c*v+u*x+d*R,n[2]=h*f+m*_+g*S,n[5]=h*p+m*b+g*E,n[8]=h*v+m*x+g*R,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-i*n*u+i*a*l+r*n*c-r*o*l}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],d=u*o-a*c,h=a*l-u*n,m=c*n-o*l,g=t*d+i*h+r*m;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const f=1/g;return e[0]=d*f,e[1]=(r*c-u*i)*f,e[2]=(a*i-r*o)*f,e[3]=h*f,e[4]=(u*t-r*l)*f,e[5]=(r*n-a*t)*f,e[6]=m*f,e[7]=(i*l-c*t)*f,e[8]=(o*t-i*n)*f,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,r,n,o,a){const l=Math.cos(n),c=Math.sin(n);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-r*c,r*l,-r*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){const i=this.elements;return i[0]*=e,i[3]*=e,i[6]*=e,i[1]*=t,i[4]*=t,i[7]*=t,this}rotate(e){const t=Math.cos(e),i=Math.sin(e),r=this.elements,n=r[0],o=r[3],a=r[6],l=r[1],c=r[4],u=r[7];return r[0]=t*n+i*l,r[3]=t*o+i*c,r[6]=t*a+i*u,r[1]=-i*n+t*l,r[4]=-i*o+t*c,r[7]=-i*a+t*u,this}translate(e,t){const i=this.elements;return i[0]+=e*i[2],i[3]+=e*i[5],i[6]+=e*i[8],i[1]+=t*i[2],i[4]+=t*i[5],i[7]+=t*i[8],this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<9;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function Mu(s){for(let e=s.length-1;e>=0;--e)if(s[e]>65535)return!0;return!1}function zn(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}function br(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Tn(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const fa={[zi]:{[_r]:br},[_r]:{[zi]:Tn}},ei={legacyMode:!0,get workingColorSpace(){return _r},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,e,t){if(this.legacyMode||e===t||!e||!t)return s;if(fa[e]&&fa[e][t]!==void 0){const i=fa[e][t];return s.r=i(s.r),s.g=i(s.g),s.b=i(s.b),s}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(s,e){return this.convert(s,this.workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this.workingColorSpace)}},Su={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ht={r:0,g:0,b:0},ti={h:0,s:0,l:0},$s={h:0,s:0,l:0};function pa(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}function Zs(s,e){return e.r=s.r,e.g=s.g,e.b=s.b,e}class Ue{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&i===void 0?this.set(e):this.setRGB(e,t,i)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=zi){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ei.toWorkingColorSpace(this,t),this}setRGB(e,t,i,r=_r){return this.r=e,this.g=t,this.b=i,ei.toWorkingColorSpace(this,r),this}setHSL(e,t,i,r=_r){if(e=sp(e,1),t=Ht(t,0,1),i=Ht(i,0,1),t===0)this.r=this.g=this.b=i;else{const n=i<=.5?i*(1+t):i+t-i*t,o=2*i-n;this.r=pa(o,n,e+1/3),this.g=pa(o,n,e),this.b=pa(o,n,e-1/3)}return ei.toWorkingColorSpace(this,r),this}setStyle(e,t=zi){function i(n){n!==void 0&&parseFloat(n)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let n;const o=r[1],a=r[2];switch(o){case"rgb":case"rgba":if(n=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(n[1],10))/255,this.g=Math.min(255,parseInt(n[2],10))/255,this.b=Math.min(255,parseInt(n[3],10))/255,ei.toWorkingColorSpace(this,t),i(n[4]),this;if(n=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(n[1],10))/100,this.g=Math.min(100,parseInt(n[2],10))/100,this.b=Math.min(100,parseInt(n[3],10))/100,ei.toWorkingColorSpace(this,t),i(n[4]),this;break;case"hsl":case"hsla":if(n=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const l=parseFloat(n[1])/360,c=parseInt(n[2],10)/100,u=parseInt(n[3],10)/100;return i(n[4]),this.setHSL(l,c,u,t)}break}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(e)){const n=r[1],o=n.length;if(o===3)return this.r=parseInt(n.charAt(0)+n.charAt(0),16)/255,this.g=parseInt(n.charAt(1)+n.charAt(1),16)/255,this.b=parseInt(n.charAt(2)+n.charAt(2),16)/255,ei.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(n.charAt(0)+n.charAt(1),16)/255,this.g=parseInt(n.charAt(2)+n.charAt(3),16)/255,this.b=parseInt(n.charAt(4)+n.charAt(5),16)/255,ei.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=zi){const i=Su[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=br(e.r),this.g=br(e.g),this.b=br(e.b),this}copyLinearToSRGB(e){return this.r=Tn(e.r),this.g=Tn(e.g),this.b=Tn(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=zi){return ei.fromWorkingColorSpace(Zs(this,ht),e),Ht(ht.r*255,0,255)<<16^Ht(ht.g*255,0,255)<<8^Ht(ht.b*255,0,255)<<0}getHexString(e=zi){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=_r){ei.fromWorkingColorSpace(Zs(this,ht),t);const i=ht.r,r=ht.g,n=ht.b,o=Math.max(i,r,n),a=Math.min(i,r,n);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const d=o-a;switch(c=u<=.5?d/(o+a):d/(2-o-a),o){case i:l=(r-n)/d+(r<n?6:0);break;case r:l=(n-i)/d+2;break;case n:l=(i-r)/d+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=_r){return ei.fromWorkingColorSpace(Zs(this,ht),t),e.r=ht.r,e.g=ht.g,e.b=ht.b,e}getStyle(e=zi){return ei.fromWorkingColorSpace(Zs(this,ht),e),e!==zi?`color(${e} ${ht.r} ${ht.g} ${ht.b})`:`rgb(${ht.r*255|0},${ht.g*255|0},${ht.b*255|0})`}offsetHSL(e,t,i){return this.getHSL(ti),ti.h+=e,ti.s+=t,ti.l+=i,this.setHSL(ti.h,ti.s,ti.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(ti),e.getHSL($s);const i=da(ti.h,$s.h,t),r=da(ti.s,$s.s,t),n=da(ti.l,$s.l,t);return this.setHSL(i,r,n),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}Ue.NAMES=Su;let Fr;class Eu{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Fr===void 0&&(Fr=zn("canvas")),Fr.width=e.width,Fr.height=e.height;const i=Fr.getContext("2d");e instanceof ImageData?i.putImageData(e,0,0):i.drawImage(e,0,0,e.width,e.height),t=Fr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=zn("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const r=i.getImageData(0,0,e.width,e.height),n=r.data;for(let o=0;o<n.length;o++)n[o]=br(n[o]/255)*255;return i.putImageData(r,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(br(t[i]/255)*255):t[i]=br(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Tu{constructor(e=null){this.isSource=!0,this.uuid=ks(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let n;if(Array.isArray(r)){n=[];for(let o=0,a=r.length;o<a;o++)r[o].isDataTexture?n.push(ma(r[o].image)):n.push(ma(r[o]))}else n=ma(r);i.url=n}return t||(e.images[this.uuid]=i),i}}function ma(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?Eu.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let np=0;class jt extends ns{constructor(e=jt.DEFAULT_IMAGE,t=jt.DEFAULT_MAPPING,i=1001,r=1001,n=1006,o=1008,a=1023,l=1009,c=1,u=3e3){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:np++}),this.uuid=ks(),this.name="",this.source=new Tu(e),this.mipmaps=[],this.mapping=t,this.wrapS=i,this.wrapT=r,this.magFilter=n,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Ge(0,0),this.repeat=new Ge(1,1),this.center=new Ge(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Jt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==300)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case 1e3:e.x=e.x-Math.floor(e.x);break;case 1001:e.x=e.x<0?0:1;break;case 1002:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case 1e3:e.y=e.y-Math.floor(e.y);break;case 1001:e.y=e.y<0?0:1;break;case 1002:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}jt.DEFAULT_IMAGE=null;jt.DEFAULT_MAPPING=300;class ft{constructor(e=0,t=0,i=0,r=1){ft.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,n=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*r+o[12]*n,this.y=o[1]*t+o[5]*i+o[9]*r+o[13]*n,this.z=o[2]*t+o[6]*i+o[10]*r+o[14]*n,this.w=o[3]*t+o[7]*i+o[11]*r+o[15]*n,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,r,n;const o=e.elements,a=o[0],l=o[4],c=o[8],u=o[1],d=o[5],h=o[9],m=o[2],g=o[6],f=o[10];if(Math.abs(l-u)<.01&&Math.abs(c-m)<.01&&Math.abs(h-g)<.01){if(Math.abs(l+u)<.1&&Math.abs(c+m)<.1&&Math.abs(h+g)<.1&&Math.abs(a+d+f-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const v=(a+1)/2,_=(d+1)/2,b=(f+1)/2,x=(l+u)/4,S=(c+m)/4,E=(h+g)/4;return v>_&&v>b?v<.01?(i=0,r=.707106781,n=.707106781):(i=Math.sqrt(v),r=x/i,n=S/i):_>b?_<.01?(i=.707106781,r=0,n=.707106781):(r=Math.sqrt(_),i=x/r,n=E/r):b<.01?(i=.707106781,r=.707106781,n=0):(n=Math.sqrt(b),i=S/n,r=E/n),this.set(i,r,n,t),this}let p=Math.sqrt((g-h)*(g-h)+(c-m)*(c-m)+(u-l)*(u-l));return Math.abs(p)<.001&&(p=1),this.x=(g-h)/p,this.y=(c-m)/p,this.z=(u-l)/p,this.w=Math.acos((a+d+f-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Er extends ns{constructor(e,t,i={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new ft(0,0,e,t),this.scissorTest=!1,this.viewport=new ft(0,0,e,t);const r={width:e,height:t,depth:1};this.texture=new jt(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:1006,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(e,t,i=1){(this.width!==e||this.height!==t||this.depth!==i)&&(this.width=e,this.height=t,this.depth=i,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Tu(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Au extends jt{constructor(e=null,t=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ap extends jt{constructor(e=null,t=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:r},this.magFilter=1003,this.minFilter=1003,this.wrapR=1001,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Us{constructor(e=0,t=0,i=0,r=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=r}static slerpFlat(e,t,i,r,n,o,a){let l=i[r+0],c=i[r+1],u=i[r+2],d=i[r+3];const h=n[o+0],m=n[o+1],g=n[o+2],f=n[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=d;return}if(a===1){e[t+0]=h,e[t+1]=m,e[t+2]=g,e[t+3]=f;return}if(d!==f||l!==h||c!==m||u!==g){let p=1-a;const v=l*h+c*m+u*g+d*f,_=v>=0?1:-1,b=1-v*v;if(b>Number.EPSILON){const S=Math.sqrt(b),E=Math.atan2(S,v*_);p=Math.sin(p*E)/S,a=Math.sin(a*E)/S}const x=a*_;if(l=l*p+h*x,c=c*p+m*x,u=u*p+g*x,d=d*p+f*x,p===1-a){const S=1/Math.sqrt(l*l+c*c+u*u+d*d);l*=S,c*=S,u*=S,d*=S}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=d}static multiplyQuaternionsFlat(e,t,i,r,n,o){const a=i[r],l=i[r+1],c=i[r+2],u=i[r+3],d=n[o],h=n[o+1],m=n[o+2],g=n[o+3];return e[t]=a*g+u*d+l*m-c*h,e[t+1]=l*g+u*h+c*d-a*m,e[t+2]=c*g+u*m+a*h-l*d,e[t+3]=u*g-a*d-l*h-c*m,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const i=e._x,r=e._y,n=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),u=a(r/2),d=a(n/2),h=l(i/2),m=l(r/2),g=l(n/2);switch(o){case"XYZ":this._x=h*u*d+c*m*g,this._y=c*m*d-h*u*g,this._z=c*u*g+h*m*d,this._w=c*u*d-h*m*g;break;case"YXZ":this._x=h*u*d+c*m*g,this._y=c*m*d-h*u*g,this._z=c*u*g-h*m*d,this._w=c*u*d+h*m*g;break;case"ZXY":this._x=h*u*d-c*m*g,this._y=c*m*d+h*u*g,this._z=c*u*g+h*m*d,this._w=c*u*d-h*m*g;break;case"ZYX":this._x=h*u*d-c*m*g,this._y=c*m*d+h*u*g,this._z=c*u*g-h*m*d,this._w=c*u*d+h*m*g;break;case"YZX":this._x=h*u*d+c*m*g,this._y=c*m*d+h*u*g,this._z=c*u*g-h*m*d,this._w=c*u*d-h*m*g;break;case"XZY":this._x=h*u*d-c*m*g,this._y=c*m*d-h*u*g,this._z=c*u*g+h*m*d,this._w=c*u*d+h*m*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],r=t[4],n=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],d=t[10],h=i+a+d;if(h>0){const m=.5/Math.sqrt(h+1);this._w=.25/m,this._x=(u-l)*m,this._y=(n-c)*m,this._z=(o-r)*m}else if(i>a&&i>d){const m=2*Math.sqrt(1+i-a-d);this._w=(u-l)/m,this._x=.25*m,this._y=(r+o)/m,this._z=(n+c)/m}else if(a>d){const m=2*Math.sqrt(1+a-i-d);this._w=(n-c)/m,this._x=(r+o)/m,this._y=.25*m,this._z=(l+u)/m}else{const m=2*Math.sqrt(1+d-i-a);this._w=(o-r)/m,this._x=(n+c)/m,this._y=(l+u)/m,this._z=.25*m}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<Number.EPSILON?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Ht(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const r=Math.min(1,t/i);return this.slerp(e,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,r=e._y,n=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=i*u+o*a+r*c-n*l,this._y=r*u+o*l+n*a-i*c,this._z=n*u+o*c+i*l-r*a,this._w=o*u-i*a-r*l-n*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,r=this._y,n=this._z,o=this._w;let a=o*e._w+i*e._x+r*e._y+n*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=n,this;const l=1-a*a;if(l<=Number.EPSILON){const m=1-t;return this._w=m*o+t*this._w,this._x=m*i+t*this._x,this._y=m*r+t*this._y,this._z=m*n+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),d=Math.sin((1-t)*u)/c,h=Math.sin(t*u)/c;return this._w=o*d+this._w*h,this._x=i*d+this._x*h,this._y=r*d+this._y*h,this._z=n*d+this._z*h,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=Math.random(),t=Math.sqrt(1-e),i=Math.sqrt(e),r=2*Math.PI*Math.random(),n=2*Math.PI*Math.random();return this.set(t*Math.cos(r),i*Math.sin(n),i*Math.cos(n),t*Math.sin(r))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class H{constructor(e=0,t=0,i=0){H.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(ml.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(ml.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,r=this.z,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6]*r,this.y=n[1]*t+n[4]*i+n[7]*r,this.z=n[2]*t+n[5]*i+n[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,r=this.z,n=e.elements,o=1/(n[3]*t+n[7]*i+n[11]*r+n[15]);return this.x=(n[0]*t+n[4]*i+n[8]*r+n[12])*o,this.y=(n[1]*t+n[5]*i+n[9]*r+n[13])*o,this.z=(n[2]*t+n[6]*i+n[10]*r+n[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,r=this.z,n=e.x,o=e.y,a=e.z,l=e.w,c=l*t+o*r-a*i,u=l*i+a*t-n*r,d=l*r+n*i-o*t,h=-n*t-o*i-a*r;return this.x=c*l+h*-n+u*-a-d*-o,this.y=u*l+h*-o+d*-n-c*-a,this.z=d*l+h*-a+c*-o-u*-n,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,r=this.z,n=e.elements;return this.x=n[0]*t+n[4]*i+n[8]*r,this.y=n[1]*t+n[5]*i+n[9]*r,this.z=n[2]*t+n[6]*i+n[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(e,Math.min(t,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,r=e.y,n=e.z,o=t.x,a=t.y,l=t.z;return this.x=r*l-n*a,this.y=n*o-i*l,this.z=i*a-r*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return ga.copy(this).projectOnVector(e),this.sub(ga)}reflect(e){return this.sub(ga.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(Ht(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,r=this.z-e.z;return t*t+i*i+r*r}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const r=Math.sin(t)*e;return this.x=r*Math.sin(i),this.y=Math.cos(t)*e,this.z=r*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=r,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,i=Math.sqrt(1-e**2);return this.x=i*Math.cos(t),this.y=i*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ga=new H,ml=new Us;class Gs{constructor(e=new H(1/0,1/0,1/0),t=new H(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,i=1/0,r=1/0,n=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.length;l<c;l+=3){const u=e[l],d=e[l+1],h=e[l+2];u<t&&(t=u),d<i&&(i=d),h<r&&(r=h),u>n&&(n=u),d>o&&(o=d),h>a&&(a=h)}return this.min.set(t,i,r),this.max.set(n,o,a),this}setFromBufferAttribute(e){let t=1/0,i=1/0,r=1/0,n=-1/0,o=-1/0,a=-1/0;for(let l=0,c=e.count;l<c;l++){const u=e.getX(l),d=e.getY(l),h=e.getZ(l);u<t&&(t=u),d<i&&(i=d),h<r&&(r=h),u>n&&(n=u),d>o&&(o=d),h>a&&(a=h)}return this.min.set(t,i,r),this.max.set(n,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=lr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0)if(t&&i.attributes!=null&&i.attributes.position!==void 0){const n=i.attributes.position;for(let o=0,a=n.count;o<a;o++)lr.fromBufferAttribute(n,o).applyMatrix4(e.matrixWorld),this.expandByPoint(lr)}else i.boundingBox===null&&i.computeBoundingBox(),va.copy(i.boundingBox),va.applyMatrix4(e.matrixWorld),this.union(va);const r=e.children;for(let n=0,o=r.length;n<o;n++)this.expandByObject(r[n],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,lr),lr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(ds),Ks.subVectors(this.max,ds),Ir.subVectors(e.a,ds),zr.subVectors(e.b,ds),Nr.subVectors(e.c,ds),ji.subVectors(zr,Ir),qi.subVectors(Nr,zr),cr.subVectors(Ir,Nr);let t=[0,-ji.z,ji.y,0,-qi.z,qi.y,0,-cr.z,cr.y,ji.z,0,-ji.x,qi.z,0,-qi.x,cr.z,0,-cr.x,-ji.y,ji.x,0,-qi.y,qi.x,0,-cr.y,cr.x,0];return!_a(t,Ir,zr,Nr,Ks)||(t=[1,0,0,0,1,0,0,0,1],!_a(t,Ir,zr,Nr,Ks))?!1:(Js.crossVectors(ji,qi),t=[Js.x,Js.y,Js.z],_a(t,Ir,zr,Nr,Ks))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return lr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(lr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Si[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Si[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Si[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Si[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Si[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Si[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Si[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Si[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Si),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Si=[new H,new H,new H,new H,new H,new H,new H,new H],lr=new H,va=new Gs,Ir=new H,zr=new H,Nr=new H,ji=new H,qi=new H,cr=new H,ds=new H,Ks=new H,Js=new H,ur=new H;function _a(s,e,t,i,r){for(let n=0,o=s.length-3;n<=o;n+=3){ur.fromArray(s,n);const a=r.x*Math.abs(ur.x)+r.y*Math.abs(ur.y)+r.z*Math.abs(ur.z),l=e.dot(ur),c=t.dot(ur),u=i.dot(ur);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const op=new Gs,gl=new H,Qs=new H,xa=new H;class zs{constructor(e=new H,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):op.setFromPoints(e).getCenter(i);let r=0;for(let n=0,o=e.length;n<o;n++)r=Math.max(r,i.distanceToSquared(e[n]));return this.radius=Math.sqrt(r),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){xa.subVectors(e,this.center);const t=xa.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),r=(i-this.radius)*.5;this.center.add(xa.multiplyScalar(r/i)),this.radius+=r}return this}union(e){return this.center.equals(e.center)===!0?Qs.set(0,0,1).multiplyScalar(e.radius):Qs.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(gl.copy(e.center).add(Qs)),this.expandByPoint(gl.copy(e.center).sub(Qs)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ei=new H,ya=new H,en=new H,Yi=new H,ba=new H,tn=new H,wa=new H;class lp{constructor(e=new H,t=new H(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ei)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(i).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ei.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ei.copy(this.direction).multiplyScalar(t).add(this.origin),Ei.distanceToSquared(e))}distanceSqToSegment(e,t,i,r){ya.copy(e).add(t).multiplyScalar(.5),en.copy(t).sub(e).normalize(),Yi.copy(this.origin).sub(ya);const n=e.distanceTo(t)*.5,o=-this.direction.dot(en),a=Yi.dot(this.direction),l=-Yi.dot(en),c=Yi.lengthSq(),u=Math.abs(1-o*o);let d,h,m,g;if(u>0)if(d=o*l-a,h=o*a-l,g=n*u,d>=0)if(h>=-g)if(h<=g){const f=1/u;d*=f,h*=f,m=d*(d+o*h+2*a)+h*(o*d+h+2*l)+c}else h=n,d=Math.max(0,-(o*h+a)),m=-d*d+h*(h+2*l)+c;else h=-n,d=Math.max(0,-(o*h+a)),m=-d*d+h*(h+2*l)+c;else h<=-g?(d=Math.max(0,-(-o*n+a)),h=d>0?-n:Math.min(Math.max(-n,-l),n),m=-d*d+h*(h+2*l)+c):h<=g?(d=0,h=Math.min(Math.max(-n,-l),n),m=h*(h+2*l)+c):(d=Math.max(0,-(o*n+a)),h=d>0?n:Math.min(Math.max(-n,-l),n),m=-d*d+h*(h+2*l)+c);else h=o>0?-n:n,d=Math.max(0,-(o*h+a)),m=-d*d+h*(h+2*l)+c;return i&&i.copy(this.direction).multiplyScalar(d).add(this.origin),r&&r.copy(en).multiplyScalar(h).add(ya),m}intersectSphere(e,t){Ei.subVectors(e.center,this.origin);const i=Ei.dot(this.direction),r=Ei.dot(Ei)-i*i,n=e.radius*e.radius;if(r>n)return null;const o=Math.sqrt(n-r),a=i-o,l=i+o;return a<0&&l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,r,n,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,d=1/this.direction.z,h=this.origin;return c>=0?(i=(e.min.x-h.x)*c,r=(e.max.x-h.x)*c):(i=(e.max.x-h.x)*c,r=(e.min.x-h.x)*c),u>=0?(n=(e.min.y-h.y)*u,o=(e.max.y-h.y)*u):(n=(e.max.y-h.y)*u,o=(e.min.y-h.y)*u),i>o||n>r||((n>i||i!==i)&&(i=n),(o<r||r!==r)&&(r=o),d>=0?(a=(e.min.z-h.z)*d,l=(e.max.z-h.z)*d):(a=(e.max.z-h.z)*d,l=(e.min.z-h.z)*d),i>l||a>r)||((a>i||i!==i)&&(i=a),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,t)}intersectsBox(e){return this.intersectBox(e,Ei)!==null}intersectTriangle(e,t,i,r,n){ba.subVectors(t,e),tn.subVectors(i,e),wa.crossVectors(ba,tn);let o=this.direction.dot(wa),a;if(o>0){if(r)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Yi.subVectors(this.origin,e);const l=a*this.direction.dot(tn.crossVectors(Yi,tn));if(l<0)return null;const c=a*this.direction.dot(ba.cross(Yi));if(c<0||l+c>o)return null;const u=-a*Yi.dot(wa);return u<0?null:this.at(u/o,n)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class pt{constructor(){pt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,i,r,n,o,a,l,c,u,d,h,m,g,f,p){const v=this.elements;return v[0]=e,v[4]=t,v[8]=i,v[12]=r,v[1]=n,v[5]=o,v[9]=a,v[13]=l,v[2]=c,v[6]=u,v[10]=d,v[14]=h,v[3]=m,v[7]=g,v[11]=f,v[15]=p,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new pt().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,r=1/Or.setFromMatrixColumn(e,0).length(),n=1/Or.setFromMatrixColumn(e,1).length(),o=1/Or.setFromMatrixColumn(e,2).length();return t[0]=i[0]*r,t[1]=i[1]*r,t[2]=i[2]*r,t[3]=0,t[4]=i[4]*n,t[5]=i[5]*n,t[6]=i[6]*n,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,r=e.y,n=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(r),c=Math.sin(r),u=Math.cos(n),d=Math.sin(n);if(e.order==="XYZ"){const h=o*u,m=o*d,g=a*u,f=a*d;t[0]=l*u,t[4]=-l*d,t[8]=c,t[1]=m+g*c,t[5]=h-f*c,t[9]=-a*l,t[2]=f-h*c,t[6]=g+m*c,t[10]=o*l}else if(e.order==="YXZ"){const h=l*u,m=l*d,g=c*u,f=c*d;t[0]=h+f*a,t[4]=g*a-m,t[8]=o*c,t[1]=o*d,t[5]=o*u,t[9]=-a,t[2]=m*a-g,t[6]=f+h*a,t[10]=o*l}else if(e.order==="ZXY"){const h=l*u,m=l*d,g=c*u,f=c*d;t[0]=h-f*a,t[4]=-o*d,t[8]=g+m*a,t[1]=m+g*a,t[5]=o*u,t[9]=f-h*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const h=o*u,m=o*d,g=a*u,f=a*d;t[0]=l*u,t[4]=g*c-m,t[8]=h*c+f,t[1]=l*d,t[5]=f*c+h,t[9]=m*c-g,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const h=o*l,m=o*c,g=a*l,f=a*c;t[0]=l*u,t[4]=f-h*d,t[8]=g*d+m,t[1]=d,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=m*d+g,t[10]=h-f*d}else if(e.order==="XZY"){const h=o*l,m=o*c,g=a*l,f=a*c;t[0]=l*u,t[4]=-d,t[8]=c*u,t[1]=h*d+f,t[5]=o*u,t[9]=m*d-g,t[2]=g*d-m,t[6]=a*u,t[10]=f*d+h}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(cp,e,up)}lookAt(e,t,i){const r=this.elements;return Bt.subVectors(e,t),Bt.lengthSq()===0&&(Bt.z=1),Bt.normalize(),Xi.crossVectors(i,Bt),Xi.lengthSq()===0&&(Math.abs(i.z)===1?Bt.x+=1e-4:Bt.z+=1e-4,Bt.normalize(),Xi.crossVectors(i,Bt)),Xi.normalize(),rn.crossVectors(Bt,Xi),r[0]=Xi.x,r[4]=rn.x,r[8]=Bt.x,r[1]=Xi.y,r[5]=rn.y,r[9]=Bt.y,r[2]=Xi.z,r[6]=rn.z,r[10]=Bt.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,r=t.elements,n=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],u=i[1],d=i[5],h=i[9],m=i[13],g=i[2],f=i[6],p=i[10],v=i[14],_=i[3],b=i[7],x=i[11],S=i[15],E=r[0],R=r[4],y=r[8],A=r[12],F=r[1],z=r[5],G=r[9],N=r[13],D=r[2],O=r[6],I=r[10],V=r[14],W=r[3],U=r[7],X=r[11],le=r[15];return n[0]=o*E+a*F+l*D+c*W,n[4]=o*R+a*z+l*O+c*U,n[8]=o*y+a*G+l*I+c*X,n[12]=o*A+a*N+l*V+c*le,n[1]=u*E+d*F+h*D+m*W,n[5]=u*R+d*z+h*O+m*U,n[9]=u*y+d*G+h*I+m*X,n[13]=u*A+d*N+h*V+m*le,n[2]=g*E+f*F+p*D+v*W,n[6]=g*R+f*z+p*O+v*U,n[10]=g*y+f*G+p*I+v*X,n[14]=g*A+f*N+p*V+v*le,n[3]=_*E+b*F+x*D+S*W,n[7]=_*R+b*z+x*O+S*U,n[11]=_*y+b*G+x*I+S*X,n[15]=_*A+b*N+x*V+S*le,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],r=e[8],n=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],d=e[6],h=e[10],m=e[14],g=e[3],f=e[7],p=e[11],v=e[15];return g*(+n*l*d-r*c*d-n*a*h+i*c*h+r*a*m-i*l*m)+f*(+t*l*m-t*c*h+n*o*h-r*o*m+r*c*u-n*l*u)+p*(+t*c*d-t*a*m-n*o*d+i*o*m+n*a*u-i*c*u)+v*(-r*a*u-t*l*d+t*a*h+r*o*d-i*o*h+i*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],d=e[9],h=e[10],m=e[11],g=e[12],f=e[13],p=e[14],v=e[15],_=d*p*c-f*h*c+f*l*m-a*p*m-d*l*v+a*h*v,b=g*h*c-u*p*c-g*l*m+o*p*m+u*l*v-o*h*v,x=u*f*c-g*d*c+g*a*m-o*f*m-u*a*v+o*d*v,S=g*d*l-u*f*l-g*a*h+o*f*h+u*a*p-o*d*p,E=t*_+i*b+r*x+n*S;if(E===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const R=1/E;return e[0]=_*R,e[1]=(f*h*n-d*p*n-f*r*m+i*p*m+d*r*v-i*h*v)*R,e[2]=(a*p*n-f*l*n+f*r*c-i*p*c-a*r*v+i*l*v)*R,e[3]=(d*l*n-a*h*n-d*r*c+i*h*c+a*r*m-i*l*m)*R,e[4]=b*R,e[5]=(u*p*n-g*h*n+g*r*m-t*p*m-u*r*v+t*h*v)*R,e[6]=(g*l*n-o*p*n-g*r*c+t*p*c+o*r*v-t*l*v)*R,e[7]=(o*h*n-u*l*n+u*r*c-t*h*c-o*r*m+t*l*m)*R,e[8]=x*R,e[9]=(g*d*n-u*f*n-g*i*m+t*f*m+u*i*v-t*d*v)*R,e[10]=(o*f*n-g*a*n+g*i*c-t*f*c-o*i*v+t*a*v)*R,e[11]=(u*a*n-o*d*n-u*i*c+t*d*c+o*i*m-t*a*m)*R,e[12]=S*R,e[13]=(u*f*r-g*d*r+g*i*h-t*f*h-u*i*p+t*d*p)*R,e[14]=(g*a*r-o*f*r-g*i*l+t*f*l+o*i*p-t*a*p)*R,e[15]=(o*d*r-u*a*r+u*i*l-t*d*l-o*i*h+t*a*h)*R,this}scale(e){const t=this.elements,i=e.x,r=e.y,n=e.z;return t[0]*=i,t[4]*=r,t[8]*=n,t[1]*=i,t[5]*=r,t[9]*=n,t[2]*=i,t[6]*=r,t[10]*=n,t[3]*=i,t[7]*=r,t[11]*=n,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,r))}makeTranslation(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),r=Math.sin(t),n=1-i,o=e.x,a=e.y,l=e.z,c=n*o,u=n*a;return this.set(c*o+i,c*a-r*l,c*l+r*a,0,c*a+r*l,u*a+i,u*l-r*o,0,c*l-r*a,u*l+r*o,n*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,r,n,o){return this.set(1,i,n,0,e,1,o,0,t,r,1,0,0,0,0,1),this}compose(e,t,i){const r=this.elements,n=t._x,o=t._y,a=t._z,l=t._w,c=n+n,u=o+o,d=a+a,h=n*c,m=n*u,g=n*d,f=o*u,p=o*d,v=a*d,_=l*c,b=l*u,x=l*d,S=i.x,E=i.y,R=i.z;return r[0]=(1-(f+v))*S,r[1]=(m+x)*S,r[2]=(g-b)*S,r[3]=0,r[4]=(m-x)*E,r[5]=(1-(h+v))*E,r[6]=(p+_)*E,r[7]=0,r[8]=(g+b)*R,r[9]=(p-_)*R,r[10]=(1-(h+f))*R,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,i){const r=this.elements;let n=Or.set(r[0],r[1],r[2]).length();const o=Or.set(r[4],r[5],r[6]).length(),a=Or.set(r[8],r[9],r[10]).length();this.determinant()<0&&(n=-n),e.x=r[12],e.y=r[13],e.z=r[14],ii.copy(this);const l=1/n,c=1/o,u=1/a;return ii.elements[0]*=l,ii.elements[1]*=l,ii.elements[2]*=l,ii.elements[4]*=c,ii.elements[5]*=c,ii.elements[6]*=c,ii.elements[8]*=u,ii.elements[9]*=u,ii.elements[10]*=u,t.setFromRotationMatrix(ii),i.x=n,i.y=o,i.z=a,this}makePerspective(e,t,i,r,n,o){const a=this.elements,l=2*n/(t-e),c=2*n/(i-r),u=(t+e)/(t-e),d=(i+r)/(i-r),h=-(o+n)/(o-n),m=-2*o*n/(o-n);return a[0]=l,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=c,a[9]=d,a[13]=0,a[2]=0,a[6]=0,a[10]=h,a[14]=m,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,i,r,n,o){const a=this.elements,l=1/(t-e),c=1/(i-r),u=1/(o-n),d=(t+e)*l,h=(i+r)*c,m=(o+n)*u;return a[0]=2*l,a[4]=0,a[8]=0,a[12]=-d,a[1]=0,a[5]=2*c,a[9]=0,a[13]=-h,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-m,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let r=0;r<16;r++)if(t[r]!==i[r])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const Or=new H,ii=new pt,cp=new H(0,0,0),up=new H(1,1,1),Xi=new H,rn=new H,Bt=new H,vl=new pt,_l=new Us;class Hs{constructor(e=0,t=0,i=0,r=Hs.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,r=this._order){return this._x=e,this._y=t,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const r=e.elements,n=r[0],o=r[4],a=r[8],l=r[1],c=r[5],u=r[9],d=r[2],h=r[6],m=r[10];switch(t){case"XYZ":this._y=Math.asin(Ht(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,m),this._z=Math.atan2(-o,n)):(this._x=Math.atan2(h,c),this._z=0);break;case"YXZ":this._x=Math.asin(-Ht(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,m),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-d,n),this._z=0);break;case"ZXY":this._x=Math.asin(Ht(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(-d,m),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,n));break;case"ZYX":this._y=Math.asin(-Ht(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(h,m),this._z=Math.atan2(l,n)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(Ht(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-d,n)):(this._x=0,this._y=Math.atan2(a,m));break;case"XZY":this._z=Math.asin(-Ht(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(h,c),this._y=Math.atan2(a,n)):(this._x=Math.atan2(-u,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return vl.makeRotationFromQuaternion(e),this.setFromRotationMatrix(vl,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return _l.setFromEuler(this),this.setFromQuaternion(_l,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}Hs.DefaultOrder="XYZ";Hs.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Cu{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let hp=0;const xl=new H,Br=new Us,Ti=new pt,sn=new H,fs=new H,dp=new H,fp=new Us,yl=new H(1,0,0),bl=new H(0,1,0),wl=new H(0,0,1),pp={type:"added"},Ml={type:"removed"};class Rt extends ns{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:hp++}),this.uuid=ks(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Rt.DefaultUp.clone();const e=new H,t=new Hs,i=new Us,r=new H(1,1,1);function n(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(n),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new pt},normalMatrix:{value:new Jt}}),this.matrix=new pt,this.matrixWorld=new pt,this.matrixAutoUpdate=Rt.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Cu,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Br.setFromAxisAngle(e,t),this.quaternion.multiply(Br),this}rotateOnWorldAxis(e,t){return Br.setFromAxisAngle(e,t),this.quaternion.premultiply(Br),this}rotateX(e){return this.rotateOnAxis(yl,e)}rotateY(e){return this.rotateOnAxis(bl,e)}rotateZ(e){return this.rotateOnAxis(wl,e)}translateOnAxis(e,t){return xl.copy(e).applyQuaternion(this.quaternion),this.position.add(xl.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(yl,e)}translateY(e){return this.translateOnAxis(bl,e)}translateZ(e){return this.translateOnAxis(wl,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Ti.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?sn.copy(e):sn.set(e,t,i);const r=this.parent;this.updateWorldMatrix(!0,!1),fs.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ti.lookAt(fs,sn,this.up):Ti.lookAt(sn,fs,this.up),this.quaternion.setFromRotationMatrix(Ti),r&&(Ti.extractRotation(r.matrixWorld),Br.setFromRotationMatrix(Ti),this.quaternion.premultiply(Br.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(pp)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Ml)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Ml)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Ti.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Ti.multiply(e.parent.matrixWorld)),e.applyMatrix4(Ti),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,r=this.children.length;i<r;i++){const n=this.children[i].getObjectByProperty(e,t);if(n!==void 0)return n}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fs,e,dp),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(fs,fp,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,r=t.length;i<r;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const r=this.children;for(let n=0,o=r.length;n<o;n++)r[n].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function n(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=n(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const d=l[c];n(e.shapes,d)}else n(e.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(n(e.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(n(e.materials,this.material[l]));r.material=a}else r.material=n(e.materials,this.material);if(this.children.length>0){r.children=[];for(let a=0;a<this.children.length;a++)r.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){r.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];r.animations.push(n(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),d=o(e.shapes),h=o(e.skeletons),m=o(e.animations),g=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),u.length>0&&(i.images=u),d.length>0&&(i.shapes=d),h.length>0&&(i.skeletons=h),m.length>0&&(i.animations=m),g.length>0&&(i.nodes=g)}return i.object=r,i;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const r=e.children[i];this.add(r.clone())}return this}}Rt.DefaultUp=new H(0,1,0);Rt.DefaultMatrixAutoUpdate=!0;const ri=new H,Ai=new H,Ma=new H,Ci=new H,kr=new H,Ur=new H,Sl=new H,Sa=new H,Ea=new H,Ta=new H;class Oi{constructor(e=new H,t=new H,i=new H){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,r){r.subVectors(i,t),ri.subVectors(e,t),r.cross(ri);const n=r.lengthSq();return n>0?r.multiplyScalar(1/Math.sqrt(n)):r.set(0,0,0)}static getBarycoord(e,t,i,r,n){ri.subVectors(r,t),Ai.subVectors(i,t),Ma.subVectors(e,t);const o=ri.dot(ri),a=ri.dot(Ai),l=ri.dot(Ma),c=Ai.dot(Ai),u=Ai.dot(Ma),d=o*c-a*a;if(d===0)return n.set(-2,-1,-1);const h=1/d,m=(c*l-a*u)*h,g=(o*u-a*l)*h;return n.set(1-m-g,g,m)}static containsPoint(e,t,i,r){return this.getBarycoord(e,t,i,r,Ci),Ci.x>=0&&Ci.y>=0&&Ci.x+Ci.y<=1}static getUV(e,t,i,r,n,o,a,l){return this.getBarycoord(e,t,i,r,Ci),l.set(0,0),l.addScaledVector(n,Ci.x),l.addScaledVector(o,Ci.y),l.addScaledVector(a,Ci.z),l}static isFrontFacing(e,t,i,r){return ri.subVectors(i,t),Ai.subVectors(e,t),ri.cross(Ai).dot(r)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this}setFromAttributeAndIndices(e,t,i,r){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,r),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return ri.subVectors(this.c,this.b),Ai.subVectors(this.a,this.b),ri.cross(Ai).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Oi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Oi.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,i,r,n){return Oi.getUV(e,this.a,this.b,this.c,t,i,r,n)}containsPoint(e){return Oi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Oi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,r=this.b,n=this.c;let o,a;kr.subVectors(r,i),Ur.subVectors(n,i),Sa.subVectors(e,i);const l=kr.dot(Sa),c=Ur.dot(Sa);if(l<=0&&c<=0)return t.copy(i);Ea.subVectors(e,r);const u=kr.dot(Ea),d=Ur.dot(Ea);if(u>=0&&d<=u)return t.copy(r);const h=l*d-u*c;if(h<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(i).addScaledVector(kr,o);Ta.subVectors(e,n);const m=kr.dot(Ta),g=Ur.dot(Ta);if(g>=0&&m<=g)return t.copy(n);const f=m*c-l*g;if(f<=0&&c>=0&&g<=0)return a=c/(c-g),t.copy(i).addScaledVector(Ur,a);const p=u*g-m*d;if(p<=0&&d-u>=0&&m-g>=0)return Sl.subVectors(n,r),a=(d-u)/(d-u+(m-g)),t.copy(r).addScaledVector(Sl,a);const v=1/(p+f+h);return o=f*v,a=h*v,t.copy(i).addScaledVector(kr,o).addScaledVector(Ur,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let mp=0;class Cr extends ns{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:mp++}),this.uuid=ks(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=100,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=7680,this.stencilZFail=7680,this.stencilZPass=7680,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=i===1;continue}const r=this[t];if(r===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==1&&(i.blending=this.blending),this.side!==0&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData);function r(n){const o=[];for(const a in n){const l=n[a];delete l.metadata,o.push(l)}return o}if(t){const n=r(e.textures),o=r(e.images);n.length>0&&(i.textures=n),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const r=t.length;i=new Array(r);for(let n=0;n!==r;++n)i[n]=t[n].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Lu extends Cr{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ue(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const at=new H,nn=new Ge;class xi{constructor(e,t,i){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i===!0,this.usage=35044,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let r=0,n=this.itemSize;r<n;r++)this.array[e+r]=t.array[i+r];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let i=0;for(let r=0,n=e.length;r<n;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),o=new Ue),t[i++]=o.r,t[i++]=o.g,t[i++]=o.b}return this}copyVector2sArray(e){const t=this.array;let i=0;for(let r=0,n=e.length;r<n;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),o=new Ge),t[i++]=o.x,t[i++]=o.y}return this}copyVector3sArray(e){const t=this.array;let i=0;for(let r=0,n=e.length;r<n;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),o=new H),t[i++]=o.x,t[i++]=o.y,t[i++]=o.z}return this}copyVector4sArray(e){const t=this.array;let i=0;for(let r=0,n=e.length;r<n;r++){let o=e[r];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),o=new ft),t[i++]=o.x,t[i++]=o.y,t[i++]=o.z,t[i++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)nn.fromBufferAttribute(this,t),nn.applyMatrix3(e),this.setXY(t,nn.x,nn.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)at.fromBufferAttribute(this,t),at.applyMatrix3(e),this.setXYZ(t,at.x,at.y,at.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)at.fromBufferAttribute(this,t),at.applyMatrix4(e),this.setXYZ(t,at.x,at.y,at.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)at.fromBufferAttribute(this,t),at.applyNormalMatrix(e),this.setXYZ(t,at.x,at.y,at.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)at.fromBufferAttribute(this,t),at.transformDirection(e),this.setXYZ(t,at.x,at.y,at.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this}setXYZW(e,t,i,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=n,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==35044&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}class Ru extends xi{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class Pu extends xi{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class Mt extends xi{constructor(e,t,i){super(new Float32Array(e),t,i)}}let gp=0;const $t=new pt,Aa=new Rt,Gr=new H,kt=new Gs,ps=new Gs,vt=new H;class bi extends ns{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:gp++}),this.uuid=ks(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Mu(e)?Pu:Ru)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const n=new Jt().getNormalMatrix(e);i.applyNormalMatrix(n),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(e),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return $t.makeRotationFromQuaternion(e),this.applyMatrix4($t),this}rotateX(e){return $t.makeRotationX(e),this.applyMatrix4($t),this}rotateY(e){return $t.makeRotationY(e),this.applyMatrix4($t),this}rotateZ(e){return $t.makeRotationZ(e),this.applyMatrix4($t),this}translate(e,t,i){return $t.makeTranslation(e,t,i),this.applyMatrix4($t),this}scale(e,t,i){return $t.makeScale(e,t,i),this.applyMatrix4($t),this}lookAt(e){return Aa.lookAt(e),Aa.updateMatrix(),this.applyMatrix4(Aa.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Gr).negate(),this.translate(Gr.x,Gr.y,Gr.z),this}setFromPoints(e){const t=[];for(let i=0,r=e.length;i<r;i++){const n=e[i];t.push(n.x,n.y,n.z||0)}return this.setAttribute("position",new Mt(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Gs);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new H(-1/0,-1/0,-1/0),new H(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,r=t.length;i<r;i++){const n=t[i];kt.setFromBufferAttribute(n),this.morphTargetsRelative?(vt.addVectors(this.boundingBox.min,kt.min),this.boundingBox.expandByPoint(vt),vt.addVectors(this.boundingBox.max,kt.max),this.boundingBox.expandByPoint(vt)):(this.boundingBox.expandByPoint(kt.min),this.boundingBox.expandByPoint(kt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new zs);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new H,1/0);return}if(e){const i=this.boundingSphere.center;if(kt.setFromBufferAttribute(e),t)for(let n=0,o=t.length;n<o;n++){const a=t[n];ps.setFromBufferAttribute(a),this.morphTargetsRelative?(vt.addVectors(kt.min,ps.min),kt.expandByPoint(vt),vt.addVectors(kt.max,ps.max),kt.expandByPoint(vt)):(kt.expandByPoint(ps.min),kt.expandByPoint(ps.max))}kt.getCenter(i);let r=0;for(let n=0,o=e.count;n<o;n++)vt.fromBufferAttribute(e,n),r=Math.max(r,i.distanceToSquared(vt));if(t)for(let n=0,o=t.length;n<o;n++){const a=t[n],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)vt.fromBufferAttribute(a,c),l&&(Gr.fromBufferAttribute(e,c),vt.add(Gr)),r=Math.max(r,i.distanceToSquared(vt))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.array,r=t.position.array,n=t.normal.array,o=t.uv.array,a=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new xi(new Float32Array(4*a),4));const l=this.getAttribute("tangent").array,c=[],u=[];for(let F=0;F<a;F++)c[F]=new H,u[F]=new H;const d=new H,h=new H,m=new H,g=new Ge,f=new Ge,p=new Ge,v=new H,_=new H;function b(F,z,G){d.fromArray(r,F*3),h.fromArray(r,z*3),m.fromArray(r,G*3),g.fromArray(o,F*2),f.fromArray(o,z*2),p.fromArray(o,G*2),h.sub(d),m.sub(d),f.sub(g),p.sub(g);const N=1/(f.x*p.y-p.x*f.y);!isFinite(N)||(v.copy(h).multiplyScalar(p.y).addScaledVector(m,-f.y).multiplyScalar(N),_.copy(m).multiplyScalar(f.x).addScaledVector(h,-p.x).multiplyScalar(N),c[F].add(v),c[z].add(v),c[G].add(v),u[F].add(_),u[z].add(_),u[G].add(_))}let x=this.groups;x.length===0&&(x=[{start:0,count:i.length}]);for(let F=0,z=x.length;F<z;++F){const G=x[F],N=G.start,D=G.count;for(let O=N,I=N+D;O<I;O+=3)b(i[O+0],i[O+1],i[O+2])}const S=new H,E=new H,R=new H,y=new H;function A(F){R.fromArray(n,F*3),y.copy(R);const z=c[F];S.copy(z),S.sub(R.multiplyScalar(R.dot(z))).normalize(),E.crossVectors(y,z);const G=E.dot(u[F])<0?-1:1;l[F*4]=S.x,l[F*4+1]=S.y,l[F*4+2]=S.z,l[F*4+3]=G}for(let F=0,z=x.length;F<z;++F){const G=x[F],N=G.start,D=G.count;for(let O=N,I=N+D;O<I;O+=3)A(i[O+0]),A(i[O+1]),A(i[O+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new xi(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let h=0,m=i.count;h<m;h++)i.setXYZ(h,0,0,0);const r=new H,n=new H,o=new H,a=new H,l=new H,c=new H,u=new H,d=new H;if(e)for(let h=0,m=e.count;h<m;h+=3){const g=e.getX(h+0),f=e.getX(h+1),p=e.getX(h+2);r.fromBufferAttribute(t,g),n.fromBufferAttribute(t,f),o.fromBufferAttribute(t,p),u.subVectors(o,n),d.subVectors(r,n),u.cross(d),a.fromBufferAttribute(i,g),l.fromBufferAttribute(i,f),c.fromBufferAttribute(i,p),a.add(u),l.add(u),c.add(u),i.setXYZ(g,a.x,a.y,a.z),i.setXYZ(f,l.x,l.y,l.z),i.setXYZ(p,c.x,c.y,c.z)}else for(let h=0,m=t.count;h<m;h+=3)r.fromBufferAttribute(t,h+0),n.fromBufferAttribute(t,h+1),o.fromBufferAttribute(t,h+2),u.subVectors(o,n),d.subVectors(r,n),u.cross(d),i.setXYZ(h+0,u.x,u.y,u.z),i.setXYZ(h+1,u.x,u.y,u.z),i.setXYZ(h+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const i=this.attributes;for(const r in i){if(e.attributes[r]===void 0)continue;const n=i[r].array,o=e.attributes[r],a=o.array,l=o.itemSize*t,c=Math.min(a.length,n.length-l);for(let u=0,d=l;u<c;u++,d++)n[d]=a[u]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)vt.fromBufferAttribute(e,t),vt.normalize(),e.setXYZ(t,vt.x,vt.y,vt.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,d=a.normalized,h=new c.constructor(l.length*u);let m=0,g=0;for(let f=0,p=l.length;f<p;f++){a.isInterleavedBufferAttribute?m=l[f]*a.data.stride+a.offset:m=l[f]*u;for(let v=0;v<u;v++)h[g++]=c[m++]}return new xi(h,u,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new bi,i=this.index.array,r=this.attributes;for(const a in r){const l=r[a],c=e(l,i);t.setAttribute(a,c)}const n=this.morphAttributes;for(const a in n){const l=[],c=n[a];for(let u=0,d=c.length;u<d;u++){const h=c[u],m=e(h,i);l.push(m)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const r={};let n=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let d=0,h=c.length;d<h;d++){const m=c[d];u.push(m.toJSON(e.data))}u.length>0&&(r[l]=u,n=!0)}n&&(e.data.morphAttributes=r,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone(t));const r=e.attributes;for(const c in r){const u=r[c];this.setAttribute(c,u.clone(t))}const n=e.morphAttributes;for(const c in n){const u=[],d=n[c];for(let h=0,m=d.length;h<m;h++)u.push(d[h].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const d=o[c];this.addGroup(d.start,d.count,d.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const El=new pt,Hr=new lp,Ca=new zs,$i=new H,Zi=new H,Ki=new H,La=new H,Ra=new H,Pa=new H,an=new H,on=new H,ln=new H,cn=new Ge,un=new Ge,hn=new Ge,Da=new H,dn=new H;class vi extends Rt{constructor(e=new bi,t=new Lu){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const i=e[t[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,n=i.length;r<n;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}raycast(e,t){const i=this.geometry,r=this.material,n=this.matrixWorld;if(r===void 0||(i.boundingSphere===null&&i.computeBoundingSphere(),Ca.copy(i.boundingSphere),Ca.applyMatrix4(n),e.ray.intersectsSphere(Ca)===!1)||(El.copy(n).invert(),Hr.copy(e.ray).applyMatrix4(El),i.boundingBox!==null&&Hr.intersectsBox(i.boundingBox)===!1))return;let o;const a=i.index,l=i.attributes.position,c=i.morphAttributes.position,u=i.morphTargetsRelative,d=i.attributes.uv,h=i.attributes.uv2,m=i.groups,g=i.drawRange;if(a!==null)if(Array.isArray(r))for(let f=0,p=m.length;f<p;f++){const v=m[f],_=r[v.materialIndex],b=Math.max(v.start,g.start),x=Math.min(a.count,Math.min(v.start+v.count,g.start+g.count));for(let S=b,E=x;S<E;S+=3){const R=a.getX(S),y=a.getX(S+1),A=a.getX(S+2);o=fn(this,_,e,Hr,l,c,u,d,h,R,y,A),o&&(o.faceIndex=Math.floor(S/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const f=Math.max(0,g.start),p=Math.min(a.count,g.start+g.count);for(let v=f,_=p;v<_;v+=3){const b=a.getX(v),x=a.getX(v+1),S=a.getX(v+2);o=fn(this,r,e,Hr,l,c,u,d,h,b,x,S),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}else if(l!==void 0)if(Array.isArray(r))for(let f=0,p=m.length;f<p;f++){const v=m[f],_=r[v.materialIndex],b=Math.max(v.start,g.start),x=Math.min(l.count,Math.min(v.start+v.count,g.start+g.count));for(let S=b,E=x;S<E;S+=3){const R=S,y=S+1,A=S+2;o=fn(this,_,e,Hr,l,c,u,d,h,R,y,A),o&&(o.faceIndex=Math.floor(S/3),o.face.materialIndex=v.materialIndex,t.push(o))}}else{const f=Math.max(0,g.start),p=Math.min(l.count,g.start+g.count);for(let v=f,_=p;v<_;v+=3){const b=v,x=v+1,S=v+2;o=fn(this,r,e,Hr,l,c,u,d,h,b,x,S),o&&(o.faceIndex=Math.floor(v/3),t.push(o))}}}}function vp(s,e,t,i,r,n,o,a){let l;if(e.side===1?l=i.intersectTriangle(o,n,r,!0,a):l=i.intersectTriangle(r,n,o,e.side!==2,a),l===null)return null;dn.copy(a),dn.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(dn);return c<t.near||c>t.far?null:{distance:c,point:dn.clone(),object:s}}function fn(s,e,t,i,r,n,o,a,l,c,u,d){$i.fromBufferAttribute(r,c),Zi.fromBufferAttribute(r,u),Ki.fromBufferAttribute(r,d);const h=s.morphTargetInfluences;if(n&&h){an.set(0,0,0),on.set(0,0,0),ln.set(0,0,0);for(let g=0,f=n.length;g<f;g++){const p=h[g],v=n[g];p!==0&&(La.fromBufferAttribute(v,c),Ra.fromBufferAttribute(v,u),Pa.fromBufferAttribute(v,d),o?(an.addScaledVector(La,p),on.addScaledVector(Ra,p),ln.addScaledVector(Pa,p)):(an.addScaledVector(La.sub($i),p),on.addScaledVector(Ra.sub(Zi),p),ln.addScaledVector(Pa.sub(Ki),p)))}$i.add(an),Zi.add(on),Ki.add(ln)}s.isSkinnedMesh&&(s.boneTransform(c,$i),s.boneTransform(u,Zi),s.boneTransform(d,Ki));const m=vp(s,e,t,i,$i,Zi,Ki,Da);if(m){a&&(cn.fromBufferAttribute(a,c),un.fromBufferAttribute(a,u),hn.fromBufferAttribute(a,d),m.uv=Oi.getUV(Da,$i,Zi,Ki,cn,un,hn,new Ge)),l&&(cn.fromBufferAttribute(l,c),un.fromBufferAttribute(l,u),hn.fromBufferAttribute(l,d),m.uv2=Oi.getUV(Da,$i,Zi,Ki,cn,un,hn,new Ge));const g={a:c,b:u,c:d,normal:new H,materialIndex:0};Oi.getNormal($i,Zi,Ki,g.normal),m.face=g}return m}class Vs extends bi{constructor(e=1,t=1,i=1,r=1,n=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:n,depthSegments:o};const a=this;r=Math.floor(r),n=Math.floor(n),o=Math.floor(o);const l=[],c=[],u=[],d=[];let h=0,m=0;g("z","y","x",-1,-1,i,t,e,o,n,0),g("z","y","x",1,-1,i,t,-e,o,n,1),g("x","z","y",1,1,e,i,t,r,o,2),g("x","z","y",1,-1,e,i,-t,r,o,3),g("x","y","z",1,-1,e,t,i,r,n,4),g("x","y","z",-1,-1,e,t,-i,r,n,5),this.setIndex(l),this.setAttribute("position",new Mt(c,3)),this.setAttribute("normal",new Mt(u,3)),this.setAttribute("uv",new Mt(d,2));function g(f,p,v,_,b,x,S,E,R,y,A){const F=x/R,z=S/y,G=x/2,N=S/2,D=E/2,O=R+1,I=y+1;let V=0,W=0;const U=new H;for(let X=0;X<I;X++){const le=X*z-N;for(let j=0;j<O;j++){const ue=j*F-G;U[f]=ue*_,U[p]=le*b,U[v]=D,c.push(U.x,U.y,U.z),U[f]=0,U[p]=0,U[v]=E>0?1:-1,u.push(U.x,U.y,U.z),d.push(j/R),d.push(1-X/y),V+=1}}for(let X=0;X<y;X++)for(let le=0;le<R;le++){const j=h+le+O*X,ue=h+le+O*(X+1),Me=h+(le+1)+O*(X+1),ze=h+(le+1)+O*X;l.push(j,ue,ze),l.push(ue,Me,ze),W+=6}a.addGroup(m,W,A),m+=W,h+=V}}static fromJSON(e){return new Vs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function ss(s){const e={};for(const t in s){e[t]={};for(const i in s[t]){const r=s[t][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?e[t][i]=r.clone():Array.isArray(r)?e[t][i]=r.slice():e[t][i]=r}}return e}function yt(s){const e={};for(let t=0;t<s.length;t++){const i=ss(s[t]);for(const r in i)e[r]=i[r]}return e}function _p(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}const xp={clone:ss,merge:yt};var yp=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,bp=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Tr extends Cr{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=yp,this.fragmentShader=bp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ss(e.uniforms),this.uniformsGroups=_p(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const n=this.uniforms[r].value;n&&n.isTexture?t.uniforms[r]={type:"t",value:n.toJSON(e).uuid}:n&&n.isColor?t.uniforms[r]={type:"c",value:n.getHex()}:n&&n.isVector2?t.uniforms[r]={type:"v2",value:n.toArray()}:n&&n.isVector3?t.uniforms[r]={type:"v3",value:n.toArray()}:n&&n.isVector4?t.uniforms[r]={type:"v4",value:n.toArray()}:n&&n.isMatrix3?t.uniforms[r]={type:"m3",value:n.toArray()}:n&&n.isMatrix4?t.uniforms[r]={type:"m4",value:n.toArray()}:t.uniforms[r]={value:n}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}class Du extends Rt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new pt,this.projectionMatrix=new pt,this.projectionMatrixInverse=new pt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Vt extends Du{constructor(e=50,t=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=ao*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(ha*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return ao*2*Math.atan(Math.tan(ha*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,i,r,n,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(ha*.5*this.fov)/this.zoom,i=2*t,r=this.aspect*i,n=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;n+=o.offsetX*r/l,t-=o.offsetY*i/c,r*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(n+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(n,n+r,t,t-i,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Vr=90,Wr=1;class wp extends Rt{constructor(e,t,i){if(super(),this.type="CubeCamera",i.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=i;const r=new Vt(Vr,Wr,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new H(1,0,0)),this.add(r);const n=new Vt(Vr,Wr,e,t);n.layers=this.layers,n.up.set(0,-1,0),n.lookAt(new H(-1,0,0)),this.add(n);const o=new Vt(Vr,Wr,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new H(0,1,0)),this.add(o);const a=new Vt(Vr,Wr,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new H(0,-1,0)),this.add(a);const l=new Vt(Vr,Wr,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new H(0,0,1)),this.add(l);const c=new Vt(Vr,Wr,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new H(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget,[r,n,o,a,l,c]=this.children,u=e.getRenderTarget(),d=e.toneMapping,h=e.xr.enabled;e.toneMapping=0,e.xr.enabled=!1;const m=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0),e.render(t,r),e.setRenderTarget(i,1),e.render(t,n),e.setRenderTarget(i,2),e.render(t,o),e.setRenderTarget(i,3),e.render(t,a),e.setRenderTarget(i,4),e.render(t,l),i.texture.generateMipmaps=m,e.setRenderTarget(i,5),e.render(t,c),e.setRenderTarget(u),e.toneMapping=d,e.xr.enabled=h,i.texture.needsPMREMUpdate=!0}}class Fu extends jt{constructor(e,t,i,r,n,o,a,l,c,u){e=e!==void 0?e:[],t=t!==void 0?t:301,super(e,t,i,r,n,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Mp extends Er{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},r=[i,i,i,i,i,i];this.texture=new Fu(r,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:1006}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Vs(5,5,5),n=new Tr({name:"CubemapFromEquirect",uniforms:ss(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:1,blending:0});n.uniforms.tEquirect.value=t;const o=new vi(r,n),a=t.minFilter;return t.minFilter===1008&&(t.minFilter=1006),new wp(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,i,r){const n=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,r);e.setRenderTarget(n)}}const Fa=new H,Sp=new H,Ep=new Jt;class fr{constructor(e=new H(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const r=Fa.subVectors(i,t).cross(Sp.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(r,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const i=e.delta(Fa),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const n=-(e.start.dot(this.normal)+this.constant)/r;return n<0||n>1?null:t.copy(i).multiplyScalar(n).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||Ep.getNormalMatrix(e),r=this.coplanarPoint(Fa).applyMatrix4(e),n=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(n),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const jr=new zs,pn=new H;class Ro{constructor(e=new fr,t=new fr,i=new fr,r=new fr,n=new fr,o=new fr){this.planes=[e,t,i,r,n,o]}set(e,t,i,r,n,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(n),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e){const t=this.planes,i=e.elements,r=i[0],n=i[1],o=i[2],a=i[3],l=i[4],c=i[5],u=i[6],d=i[7],h=i[8],m=i[9],g=i[10],f=i[11],p=i[12],v=i[13],_=i[14],b=i[15];return t[0].setComponents(a-r,d-l,f-h,b-p).normalize(),t[1].setComponents(a+r,d+l,f+h,b+p).normalize(),t[2].setComponents(a+n,d+c,f+m,b+v).normalize(),t[3].setComponents(a-n,d-c,f-m,b-v).normalize(),t[4].setComponents(a-o,d-u,f-g,b-_).normalize(),t[5].setComponents(a+o,d+u,f+g,b+_).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),jr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(jr)}intersectsSprite(e){return jr.center.set(0,0,0),jr.radius=.7071067811865476,jr.applyMatrix4(e.matrixWorld),this.intersectsSphere(jr)}intersectsSphere(e){const t=this.planes,i=e.center,r=-e.radius;for(let n=0;n<6;n++)if(t[n].distanceToPoint(i)<r)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const r=t[i];if(pn.x=r.normal.x>0?e.max.x:e.min.x,pn.y=r.normal.y>0?e.max.y:e.min.y,pn.z=r.normal.z>0?e.max.z:e.min.z,r.distanceToPoint(pn)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Iu(){let s=null,e=!1,t=null,i=null;function r(n,o){t(n,o),i=s.requestAnimationFrame(r)}return{start:function(){e!==!0&&t!==null&&(i=s.requestAnimationFrame(r),e=!0)},stop:function(){s.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(n){t=n},setContext:function(n){s=n}}}function Tp(s,e){const t=e.isWebGL2,i=new WeakMap;function r(c,u){const d=c.array,h=c.usage,m=s.createBuffer();s.bindBuffer(u,m),s.bufferData(u,d,h),c.onUploadCallback();let g;if(d instanceof Float32Array)g=5126;else if(d instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(d instanceof Int16Array)g=5122;else if(d instanceof Uint32Array)g=5125;else if(d instanceof Int32Array)g=5124;else if(d instanceof Int8Array)g=5120;else if(d instanceof Uint8Array)g=5121;else if(d instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:m,type:g,bytesPerElement:d.BYTES_PER_ELEMENT,version:c.version}}function n(c,u,d){const h=u.array,m=u.updateRange;s.bindBuffer(d,c),m.count===-1?s.bufferSubData(d,0,h):(t?s.bufferSubData(d,m.offset*h.BYTES_PER_ELEMENT,h,m.offset,m.count):s.bufferSubData(d,m.offset*h.BYTES_PER_ELEMENT,h.subarray(m.offset,m.offset+m.count)),m.count=-1)}function o(c){return c.isInterleavedBufferAttribute&&(c=c.data),i.get(c)}function a(c){c.isInterleavedBufferAttribute&&(c=c.data);const u=i.get(c);u&&(s.deleteBuffer(u.buffer),i.delete(c))}function l(c,u){if(c.isGLBufferAttribute){const h=i.get(c);(!h||h.version<c.version)&&i.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const d=i.get(c);d===void 0?i.set(c,r(c,u)):d.version<c.version&&(n(d.buffer,c,u),d.version=c.version)}return{get:o,remove:a,update:l}}class Yn extends bi{constructor(e=1,t=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};const n=e/2,o=t/2,a=Math.floor(i),l=Math.floor(r),c=a+1,u=l+1,d=e/a,h=t/l,m=[],g=[],f=[],p=[];for(let v=0;v<u;v++){const _=v*h-o;for(let b=0;b<c;b++){const x=b*d-n;g.push(x,-_,0),f.push(0,0,1),p.push(b/a),p.push(1-v/l)}}for(let v=0;v<l;v++)for(let _=0;_<a;_++){const b=_+c*v,x=_+c*(v+1),S=_+1+c*(v+1),E=_+1+c*v;m.push(b,x,E),m.push(x,S,E)}this.setIndex(m),this.setAttribute("position",new Mt(g,3)),this.setAttribute("normal",new Mt(f,3)),this.setAttribute("uv",new Mt(p,2))}static fromJSON(e){return new Yn(e.width,e.height,e.widthSegments,e.heightSegments)}}var Ap=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,Cp=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Lp=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,Rp=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,Pp=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,Dp=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Fp="vec3 transformed = vec3( position );",Ip=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,zp=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,Np=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Op=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Bp=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,kp=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Up=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,Gp=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Hp=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Vp=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Wp=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,jp=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,qp=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Yp=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Xp=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,$p=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Zp=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Kp=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Jp=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Qp="gl_FragColor = linearToOutputTexel( gl_FragColor );",e0=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,t0=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,i0=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,r0=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,s0=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,n0=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,a0=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,o0=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,l0=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,c0=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,u0=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,h0=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,d0=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,f0=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,p0=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,m0=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,g0=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,v0=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,_0=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,x0=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,y0=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,b0=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,w0=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,M0=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,S0=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,E0=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,T0=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,A0=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,C0=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,L0=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,R0=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,P0=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,D0=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,F0=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,I0=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,z0=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,N0=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,O0=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,B0=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,k0=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,U0=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,G0=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,H0=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,V0=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,W0=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,j0=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,q0=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Y0=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,X0=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,$0=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,Z0=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,K0=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,J0=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Q0=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,em=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,tm=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,im=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,rm=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,sm=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,nm=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,am=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,om=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,lm=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,cm=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,um=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,hm=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,dm=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,fm=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,pm=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,mm=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,gm=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,vm=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,_m=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,xm=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,ym=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,bm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,wm=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,Mm=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Sm=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Em=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Tm=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,Am=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Cm=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,Lm=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,Rm=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,Pm=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,Dm=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,Fm=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,Im=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,zm=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Nm=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,Om=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Bm=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,km=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Um=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,Gm=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Hm=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,Vm=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,Wm=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,jm=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,qm=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Ym=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Xm=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,$m=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Zm=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Km=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Jm=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Qm=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,eg=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,tg=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ne={alphamap_fragment:Ap,alphamap_pars_fragment:Cp,alphatest_fragment:Lp,alphatest_pars_fragment:Rp,aomap_fragment:Pp,aomap_pars_fragment:Dp,begin_vertex:Fp,beginnormal_vertex:Ip,bsdfs:zp,iridescence_fragment:Np,bumpmap_pars_fragment:Op,clipping_planes_fragment:Bp,clipping_planes_pars_fragment:kp,clipping_planes_pars_vertex:Up,clipping_planes_vertex:Gp,color_fragment:Hp,color_pars_fragment:Vp,color_pars_vertex:Wp,color_vertex:jp,common:qp,cube_uv_reflection_fragment:Yp,defaultnormal_vertex:Xp,displacementmap_pars_vertex:$p,displacementmap_vertex:Zp,emissivemap_fragment:Kp,emissivemap_pars_fragment:Jp,encodings_fragment:Qp,encodings_pars_fragment:e0,envmap_fragment:t0,envmap_common_pars_fragment:i0,envmap_pars_fragment:r0,envmap_pars_vertex:s0,envmap_physical_pars_fragment:m0,envmap_vertex:n0,fog_vertex:a0,fog_pars_vertex:o0,fog_fragment:l0,fog_pars_fragment:c0,gradientmap_pars_fragment:u0,lightmap_fragment:h0,lightmap_pars_fragment:d0,lights_lambert_vertex:f0,lights_pars_begin:p0,lights_toon_fragment:g0,lights_toon_pars_fragment:v0,lights_phong_fragment:_0,lights_phong_pars_fragment:x0,lights_physical_fragment:y0,lights_physical_pars_fragment:b0,lights_fragment_begin:w0,lights_fragment_maps:M0,lights_fragment_end:S0,logdepthbuf_fragment:E0,logdepthbuf_pars_fragment:T0,logdepthbuf_pars_vertex:A0,logdepthbuf_vertex:C0,map_fragment:L0,map_pars_fragment:R0,map_particle_fragment:P0,map_particle_pars_fragment:D0,metalnessmap_fragment:F0,metalnessmap_pars_fragment:I0,morphcolor_vertex:z0,morphnormal_vertex:N0,morphtarget_pars_vertex:O0,morphtarget_vertex:B0,normal_fragment_begin:k0,normal_fragment_maps:U0,normal_pars_fragment:G0,normal_pars_vertex:H0,normal_vertex:V0,normalmap_pars_fragment:W0,clearcoat_normal_fragment_begin:j0,clearcoat_normal_fragment_maps:q0,clearcoat_pars_fragment:Y0,iridescence_pars_fragment:X0,output_fragment:$0,packing:Z0,premultiplied_alpha_fragment:K0,project_vertex:J0,dithering_fragment:Q0,dithering_pars_fragment:em,roughnessmap_fragment:tm,roughnessmap_pars_fragment:im,shadowmap_pars_fragment:rm,shadowmap_pars_vertex:sm,shadowmap_vertex:nm,shadowmask_pars_fragment:am,skinbase_vertex:om,skinning_pars_vertex:lm,skinning_vertex:cm,skinnormal_vertex:um,specularmap_fragment:hm,specularmap_pars_fragment:dm,tonemapping_fragment:fm,tonemapping_pars_fragment:pm,transmission_fragment:mm,transmission_pars_fragment:gm,uv_pars_fragment:vm,uv_pars_vertex:_m,uv_vertex:xm,uv2_pars_fragment:ym,uv2_pars_vertex:bm,uv2_vertex:wm,worldpos_vertex:Mm,background_vert:Sm,background_frag:Em,cube_vert:Tm,cube_frag:Am,depth_vert:Cm,depth_frag:Lm,distanceRGBA_vert:Rm,distanceRGBA_frag:Pm,equirect_vert:Dm,equirect_frag:Fm,linedashed_vert:Im,linedashed_frag:zm,meshbasic_vert:Nm,meshbasic_frag:Om,meshlambert_vert:Bm,meshlambert_frag:km,meshmatcap_vert:Um,meshmatcap_frag:Gm,meshnormal_vert:Hm,meshnormal_frag:Vm,meshphong_vert:Wm,meshphong_frag:jm,meshphysical_vert:qm,meshphysical_frag:Ym,meshtoon_vert:Xm,meshtoon_frag:$m,points_vert:Zm,points_frag:Km,shadow_vert:Jm,shadow_frag:Qm,sprite_vert:eg,sprite_frag:tg},me={common:{diffuse:{value:new Ue(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Jt},uv2Transform:{value:new Jt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ge(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ue(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ue(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Jt}},sprite:{diffuse:{value:new Ue(16777215)},opacity:{value:1},center:{value:new Ge(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Jt}}},mi={basic:{uniforms:yt([me.common,me.specularmap,me.envmap,me.aomap,me.lightmap,me.fog]),vertexShader:Ne.meshbasic_vert,fragmentShader:Ne.meshbasic_frag},lambert:{uniforms:yt([me.common,me.specularmap,me.envmap,me.aomap,me.lightmap,me.emissivemap,me.fog,me.lights,{emissive:{value:new Ue(0)}}]),vertexShader:Ne.meshlambert_vert,fragmentShader:Ne.meshlambert_frag},phong:{uniforms:yt([me.common,me.specularmap,me.envmap,me.aomap,me.lightmap,me.emissivemap,me.bumpmap,me.normalmap,me.displacementmap,me.fog,me.lights,{emissive:{value:new Ue(0)},specular:{value:new Ue(1118481)},shininess:{value:30}}]),vertexShader:Ne.meshphong_vert,fragmentShader:Ne.meshphong_frag},standard:{uniforms:yt([me.common,me.envmap,me.aomap,me.lightmap,me.emissivemap,me.bumpmap,me.normalmap,me.displacementmap,me.roughnessmap,me.metalnessmap,me.fog,me.lights,{emissive:{value:new Ue(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ne.meshphysical_vert,fragmentShader:Ne.meshphysical_frag},toon:{uniforms:yt([me.common,me.aomap,me.lightmap,me.emissivemap,me.bumpmap,me.normalmap,me.displacementmap,me.gradientmap,me.fog,me.lights,{emissive:{value:new Ue(0)}}]),vertexShader:Ne.meshtoon_vert,fragmentShader:Ne.meshtoon_frag},matcap:{uniforms:yt([me.common,me.bumpmap,me.normalmap,me.displacementmap,me.fog,{matcap:{value:null}}]),vertexShader:Ne.meshmatcap_vert,fragmentShader:Ne.meshmatcap_frag},points:{uniforms:yt([me.points,me.fog]),vertexShader:Ne.points_vert,fragmentShader:Ne.points_frag},dashed:{uniforms:yt([me.common,me.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ne.linedashed_vert,fragmentShader:Ne.linedashed_frag},depth:{uniforms:yt([me.common,me.displacementmap]),vertexShader:Ne.depth_vert,fragmentShader:Ne.depth_frag},normal:{uniforms:yt([me.common,me.bumpmap,me.normalmap,me.displacementmap,{opacity:{value:1}}]),vertexShader:Ne.meshnormal_vert,fragmentShader:Ne.meshnormal_frag},sprite:{uniforms:yt([me.sprite,me.fog]),vertexShader:Ne.sprite_vert,fragmentShader:Ne.sprite_frag},background:{uniforms:{uvTransform:{value:new Jt},t2D:{value:null}},vertexShader:Ne.background_vert,fragmentShader:Ne.background_frag},cube:{uniforms:yt([me.envmap,{opacity:{value:1}}]),vertexShader:Ne.cube_vert,fragmentShader:Ne.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ne.equirect_vert,fragmentShader:Ne.equirect_frag},distanceRGBA:{uniforms:yt([me.common,me.displacementmap,{referencePosition:{value:new H},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ne.distanceRGBA_vert,fragmentShader:Ne.distanceRGBA_frag},shadow:{uniforms:yt([me.lights,me.fog,{color:{value:new Ue(0)},opacity:{value:1}}]),vertexShader:Ne.shadow_vert,fragmentShader:Ne.shadow_frag}};mi.physical={uniforms:yt([mi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Ge(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new Ue(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Ge},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Ue(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Ue(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ne.meshphysical_vert,fragmentShader:Ne.meshphysical_frag};function ig(s,e,t,i,r,n){const o=new Ue(0);let a=r===!0?0:1,l,c,u=null,d=0,h=null;function m(f,p){let v=!1,_=p.isScene===!0?p.background:null;_&&_.isTexture&&(_=e.get(_));const b=s.xr,x=b.getSession&&b.getSession();x&&x.environmentBlendMode==="additive"&&(_=null),_===null?g(o,a):_&&_.isColor&&(g(_,1),v=!0),(s.autoClear||v)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),_&&(_.isCubeTexture||_.mapping===306)?(c===void 0&&(c=new vi(new Vs(1,1,1),new Tr({name:"BackgroundCubeMaterial",uniforms:ss(mi.cube.uniforms),vertexShader:mi.cube.vertexShader,fragmentShader:mi.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(S,E,R){this.matrixWorld.copyPosition(R.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(c)),c.material.uniforms.envMap.value=_,c.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,(u!==_||d!==_.version||h!==s.toneMapping)&&(c.material.needsUpdate=!0,u=_,d=_.version,h=s.toneMapping),c.layers.enableAll(),f.unshift(c,c.geometry,c.material,0,0,null)):_&&_.isTexture&&(l===void 0&&(l=new vi(new Yn(2,2),new Tr({name:"BackgroundMaterial",uniforms:ss(mi.background.uniforms),vertexShader:mi.background.vertexShader,fragmentShader:mi.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(l)),l.material.uniforms.t2D.value=_,_.matrixAutoUpdate===!0&&_.updateMatrix(),l.material.uniforms.uvTransform.value.copy(_.matrix),(u!==_||d!==_.version||h!==s.toneMapping)&&(l.material.needsUpdate=!0,u=_,d=_.version,h=s.toneMapping),l.layers.enableAll(),f.unshift(l,l.geometry,l.material,0,0,null))}function g(f,p){t.buffers.color.setClear(f.r,f.g,f.b,p,n)}return{getClearColor:function(){return o},setClearColor:function(f,p=1){o.set(f),a=p,g(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(f){a=f,g(o,a)},render:m}}function rg(s,e,t,i){const r=s.getParameter(34921),n=i.isWebGL2?null:e.get("OES_vertex_array_object"),o=i.isWebGL2||n!==null,a={},l=p(null);let c=l,u=!1;function d(D,O,I,V,W){let U=!1;if(o){const X=f(V,I,O);c!==X&&(c=X,m(c.object)),U=v(D,V,I,W),U&&_(D,V,I,W)}else{const X=O.wireframe===!0;(c.geometry!==V.id||c.program!==I.id||c.wireframe!==X)&&(c.geometry=V.id,c.program=I.id,c.wireframe=X,U=!0)}W!==null&&t.update(W,34963),(U||u)&&(u=!1,y(D,O,I,V),W!==null&&s.bindBuffer(34963,t.get(W).buffer))}function h(){return i.isWebGL2?s.createVertexArray():n.createVertexArrayOES()}function m(D){return i.isWebGL2?s.bindVertexArray(D):n.bindVertexArrayOES(D)}function g(D){return i.isWebGL2?s.deleteVertexArray(D):n.deleteVertexArrayOES(D)}function f(D,O,I){const V=I.wireframe===!0;let W=a[D.id];W===void 0&&(W={},a[D.id]=W);let U=W[O.id];U===void 0&&(U={},W[O.id]=U);let X=U[V];return X===void 0&&(X=p(h()),U[V]=X),X}function p(D){const O=[],I=[],V=[];for(let W=0;W<r;W++)O[W]=0,I[W]=0,V[W]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:O,enabledAttributes:I,attributeDivisors:V,object:D,attributes:{},index:null}}function v(D,O,I,V){const W=c.attributes,U=O.attributes;let X=0;const le=I.getAttributes();for(const j in le)if(le[j].location>=0){const ue=W[j];let Me=U[j];if(Me===void 0&&(j==="instanceMatrix"&&D.instanceMatrix&&(Me=D.instanceMatrix),j==="instanceColor"&&D.instanceColor&&(Me=D.instanceColor)),ue===void 0||ue.attribute!==Me||Me&&ue.data!==Me.data)return!0;X++}return c.attributesNum!==X||c.index!==V}function _(D,O,I,V){const W={},U=O.attributes;let X=0;const le=I.getAttributes();for(const j in le)if(le[j].location>=0){let ue=U[j];ue===void 0&&(j==="instanceMatrix"&&D.instanceMatrix&&(ue=D.instanceMatrix),j==="instanceColor"&&D.instanceColor&&(ue=D.instanceColor));const Me={};Me.attribute=ue,ue&&ue.data&&(Me.data=ue.data),W[j]=Me,X++}c.attributes=W,c.attributesNum=X,c.index=V}function b(){const D=c.newAttributes;for(let O=0,I=D.length;O<I;O++)D[O]=0}function x(D){S(D,0)}function S(D,O){const I=c.newAttributes,V=c.enabledAttributes,W=c.attributeDivisors;I[D]=1,V[D]===0&&(s.enableVertexAttribArray(D),V[D]=1),W[D]!==O&&((i.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](D,O),W[D]=O)}function E(){const D=c.newAttributes,O=c.enabledAttributes;for(let I=0,V=O.length;I<V;I++)O[I]!==D[I]&&(s.disableVertexAttribArray(I),O[I]=0)}function R(D,O,I,V,W,U){i.isWebGL2===!0&&(I===5124||I===5125)?s.vertexAttribIPointer(D,O,I,W,U):s.vertexAttribPointer(D,O,I,V,W,U)}function y(D,O,I,V){if(i.isWebGL2===!1&&(D.isInstancedMesh||V.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;b();const W=V.attributes,U=I.getAttributes(),X=O.defaultAttributeValues;for(const le in U){const j=U[le];if(j.location>=0){let ue=W[le];if(ue===void 0&&(le==="instanceMatrix"&&D.instanceMatrix&&(ue=D.instanceMatrix),le==="instanceColor"&&D.instanceColor&&(ue=D.instanceColor)),ue!==void 0){const Me=ue.normalized,ze=ue.itemSize,ee=t.get(ue);if(ee===void 0)continue;const Oe=ee.buffer,Ae=ee.type,Ce=ee.bytesPerElement;if(ue.isInterleavedBufferAttribute){const _e=ue.data,tt=_e.stride,L=ue.offset;if(_e.isInstancedInterleavedBuffer){for(let P=0;P<j.locationSize;P++)S(j.location+P,_e.meshPerAttribute);D.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=_e.meshPerAttribute*_e.count)}else for(let P=0;P<j.locationSize;P++)x(j.location+P);s.bindBuffer(34962,Oe);for(let P=0;P<j.locationSize;P++)R(j.location+P,ze/j.locationSize,Ae,Me,tt*Ce,(L+ze/j.locationSize*P)*Ce)}else{if(ue.isInstancedBufferAttribute){for(let _e=0;_e<j.locationSize;_e++)S(j.location+_e,ue.meshPerAttribute);D.isInstancedMesh!==!0&&V._maxInstanceCount===void 0&&(V._maxInstanceCount=ue.meshPerAttribute*ue.count)}else for(let _e=0;_e<j.locationSize;_e++)x(j.location+_e);s.bindBuffer(34962,Oe);for(let _e=0;_e<j.locationSize;_e++)R(j.location+_e,ze/j.locationSize,Ae,Me,ze*Ce,ze/j.locationSize*_e*Ce)}}else if(X!==void 0){const Me=X[le];if(Me!==void 0)switch(Me.length){case 2:s.vertexAttrib2fv(j.location,Me);break;case 3:s.vertexAttrib3fv(j.location,Me);break;case 4:s.vertexAttrib4fv(j.location,Me);break;default:s.vertexAttrib1fv(j.location,Me)}}}}E()}function A(){G();for(const D in a){const O=a[D];for(const I in O){const V=O[I];for(const W in V)g(V[W].object),delete V[W];delete O[I]}delete a[D]}}function F(D){if(a[D.id]===void 0)return;const O=a[D.id];for(const I in O){const V=O[I];for(const W in V)g(V[W].object),delete V[W];delete O[I]}delete a[D.id]}function z(D){for(const O in a){const I=a[O];if(I[D.id]===void 0)continue;const V=I[D.id];for(const W in V)g(V[W].object),delete V[W];delete I[D.id]}}function G(){N(),u=!0,c!==l&&(c=l,m(c.object))}function N(){l.geometry=null,l.program=null,l.wireframe=!1}return{setup:d,reset:G,resetDefaultState:N,dispose:A,releaseStatesOfGeometry:F,releaseStatesOfProgram:z,initAttributes:b,enableAttribute:x,disableUnusedAttributes:E}}function sg(s,e,t,i){const r=i.isWebGL2;let n;function o(c){n=c}function a(c,u){s.drawArrays(n,c,u),t.update(u,n,1)}function l(c,u,d){if(d===0)return;let h,m;if(r)h=s,m="drawArraysInstanced";else if(h=e.get("ANGLE_instanced_arrays"),m="drawArraysInstancedANGLE",h===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}h[m](n,c,u,d),t.update(u,n,d)}this.setMode=o,this.render=a,this.renderInstances=l}function ng(s,e,t){let i;function r(){if(i!==void 0)return i;if(e.has("EXT_texture_filter_anisotropic")===!0){const R=e.get("EXT_texture_filter_anisotropic");i=s.getParameter(R.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function n(R){if(R==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";R="mediump"}return R==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&s instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&s instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const l=n(a);l!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",l,"instead."),a=l);const c=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,d=s.getParameter(34930),h=s.getParameter(35660),m=s.getParameter(3379),g=s.getParameter(34076),f=s.getParameter(34921),p=s.getParameter(36347),v=s.getParameter(36348),_=s.getParameter(36349),b=h>0,x=o||e.has("OES_texture_float"),S=b&&x,E=o?s.getParameter(36183):0;return{isWebGL2:o,drawBuffers:c,getMaxAnisotropy:r,getMaxPrecision:n,precision:a,logarithmicDepthBuffer:u,maxTextures:d,maxVertexTextures:h,maxTextureSize:m,maxCubemapSize:g,maxAttributes:f,maxVertexUniforms:p,maxVaryings:v,maxFragmentUniforms:_,vertexTextures:b,floatFragmentTextures:x,floatVertexTextures:S,maxSamples:E}}function ag(s){const e=this;let t=null,i=0,r=!1,n=!1;const o=new fr,a=new Jt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(d,h,m){const g=d.length!==0||h||i!==0||r;return r=h,t=u(d,m,0),i=d.length,g},this.beginShadows=function(){n=!0,u(null)},this.endShadows=function(){n=!1,c()},this.setState=function(d,h,m){const g=d.clippingPlanes,f=d.clipIntersection,p=d.clipShadows,v=s.get(d);if(!r||g===null||g.length===0||n&&!p)n?u(null):c();else{const _=n?0:i,b=_*4;let x=v.clippingState||null;l.value=x,x=u(g,h,b,m);for(let S=0;S!==b;++S)x[S]=t[S];v.clippingState=x,this.numIntersection=f?this.numPlanes:0,this.numPlanes+=_}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(d,h,m,g){const f=d!==null?d.length:0;let p=null;if(f!==0){if(p=l.value,g!==!0||p===null){const v=m+f*4,_=h.matrixWorldInverse;a.getNormalMatrix(_),(p===null||p.length<v)&&(p=new Float32Array(v));for(let b=0,x=m;b!==f;++b,x+=4)o.copy(d[b]).applyMatrix4(_,a),o.normal.toArray(p,x),p[x+3]=o.constant}l.value=p,l.needsUpdate=!0}return e.numPlanes=f,e.numIntersection=0,p}}function og(s){let e=new WeakMap;function t(o,a){return a===303?o.mapping=301:a===304&&(o.mapping=302),o}function i(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===303||a===304)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Mp(l.height/2);return c.fromEquirectangularTexture(s,o),e.set(o,c),o.addEventListener("dispose",r),t(c.texture,o.mapping)}else return null}}return o}function r(o){const a=o.target;a.removeEventListener("dispose",r);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function n(){e=new WeakMap}return{get:i,dispose:n}}class lg extends Du{constructor(e=-1,t=1,i=1,r=-1,n=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=n,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,r,n,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=r,this.view.width=n,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let n=i-e,o=i+e,a=r+t,l=r-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;n+=c*this.view.offsetX,o=n+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(n,o,a,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Zr=4,Tl=[.125,.215,.35,.446,.526,.582],mr=20,Ia=new lg,Al=new Ue;let za=null;const pr=(1+Math.sqrt(5))/2,qr=1/pr,Cl=[new H(1,1,1),new H(-1,1,1),new H(1,1,-1),new H(-1,1,-1),new H(0,pr,qr),new H(0,pr,-qr),new H(qr,0,pr),new H(-qr,0,pr),new H(pr,qr,0),new H(-pr,qr,0)];class Ll{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,r=100){za=this._renderer.getRenderTarget(),this._setSize(256);const n=this._allocateTargets();return n.depthBuffer=!0,this._sceneToCubeUV(e,i,r,n),t>0&&this._blur(n,0,0,t),this._applyPMREM(n),this._cleanup(n),n}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Dl(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Pl(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(za),e.scissorTest=!1,mn(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===301||e.mapping===302?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),za=this._renderer.getRenderTarget();const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:1006,minFilter:1006,generateMipmaps:!1,type:1016,format:1023,encoding:3e3,depthBuffer:!1},r=Rl(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Rl(e,t,i);const{_lodMax:n}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=cg(n)),this._blurMaterial=ug(n,e,t)}return r}_compileMaterial(e){const t=new vi(this._lodPlanes[0],e);this._renderer.compile(t,Ia)}_sceneToCubeUV(e,t,i,r){const n=new Vt(90,1,t,i),o=[1,-1,1,1,1,1],a=[1,1,1,-1,-1,-1],l=this._renderer,c=l.autoClear,u=l.toneMapping;l.getClearColor(Al),l.toneMapping=0,l.autoClear=!1;const d=new Lu({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),h=new vi(new Vs,d);let m=!1;const g=e.background;g?g.isColor&&(d.color.copy(g),e.background=null,m=!0):(d.color.copy(Al),m=!0);for(let f=0;f<6;f++){const p=f%3;p===0?(n.up.set(0,o[f],0),n.lookAt(a[f],0,0)):p===1?(n.up.set(0,0,o[f]),n.lookAt(0,a[f],0)):(n.up.set(0,o[f],0),n.lookAt(0,0,a[f]));const v=this._cubeSize;mn(r,p*v,f>2?v:0,v,v),l.setRenderTarget(r),m&&l.render(h,n),l.render(e,n)}h.geometry.dispose(),h.material.dispose(),l.toneMapping=u,l.autoClear=c,e.background=g}_textureToCubeUV(e,t){const i=this._renderer,r=e.mapping===301||e.mapping===302;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=Dl()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Pl());const n=r?this._cubemapMaterial:this._equirectMaterial,o=new vi(this._lodPlanes[0],n),a=n.uniforms;a.envMap.value=e;const l=this._cubeSize;mn(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,Ia)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const n=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=Cl[(r-1)%Cl.length];this._blur(e,r-1,r,n,o)}t.autoClear=i}_blur(e,t,i,r,n){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,r,"latitudinal",n),this._halfBlur(o,e,i,i,r,"longitudinal",n)}_halfBlur(e,t,i,r,n,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,d=new vi(this._lodPlanes[r],c),h=c.uniforms,m=this._sizeLods[i]-1,g=isFinite(n)?Math.PI/(2*m):2*Math.PI/(2*mr-1),f=n/g,p=isFinite(n)?1+Math.floor(u*f):mr;p>mr&&console.warn(`sigmaRadians, ${n}, is too large and will clip, as it requested ${p} samples when the maximum is set to ${mr}`);const v=[];let _=0;for(let R=0;R<mr;++R){const y=R/f,A=Math.exp(-y*y/2);v.push(A),R===0?_+=A:R<p&&(_+=2*A)}for(let R=0;R<v.length;R++)v[R]=v[R]/_;h.envMap.value=e.texture,h.samples.value=p,h.weights.value=v,h.latitudinal.value=o==="latitudinal",a&&(h.poleAxis.value=a);const{_lodMax:b}=this;h.dTheta.value=g,h.mipInt.value=b-i;const x=this._sizeLods[r],S=3*x*(r>b-Zr?r-b+Zr:0),E=4*(this._cubeSize-x);mn(t,S,E,3*x,2*x),l.setRenderTarget(t),l.render(d,Ia)}}function cg(s){const e=[],t=[],i=[];let r=s;const n=s-Zr+1+Tl.length;for(let o=0;o<n;o++){const a=Math.pow(2,r);t.push(a);let l=1/a;o>s-Zr?l=Tl[o-s+Zr-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),u=-c,d=1+c,h=[u,u,d,u,d,d,u,u,d,d,u,d],m=6,g=6,f=3,p=2,v=1,_=new Float32Array(f*g*m),b=new Float32Array(p*g*m),x=new Float32Array(v*g*m);for(let E=0;E<m;E++){const R=E%3*2/3-1,y=E>2?0:-1,A=[R,y,0,R+2/3,y,0,R+2/3,y+1,0,R,y,0,R+2/3,y+1,0,R,y+1,0];_.set(A,f*g*E),b.set(h,p*g*E);const F=[E,E,E,E,E,E];x.set(F,v*g*E)}const S=new bi;S.setAttribute("position",new xi(_,f)),S.setAttribute("uv",new xi(b,p)),S.setAttribute("faceIndex",new xi(x,v)),e.push(S),r>Zr&&r--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function Rl(s,e,t){const i=new Er(s,e,t);return i.texture.mapping=306,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function mn(s,e,t,i,r){s.viewport.set(e,t,i,r),s.scissor.set(e,t,i,r)}function ug(s,e,t){const i=new Float32Array(mr),r=new H(0,1,0);return new Tr({name:"SphericalGaussianBlur",defines:{n:mr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Po(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function Pl(){return new Tr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Po(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function Dl(){return new Tr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Po(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:0,depthTest:!1,depthWrite:!1})}function Po(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function hg(s){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===303||l===304,u=l===301||l===302;if(c||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let d=e.get(a);return t===null&&(t=new Ll(s)),d=c?t.fromEquirectangular(a,d):t.fromCubemap(a,d),e.set(a,d),d.texture}else{if(e.has(a))return e.get(a).texture;{const d=a.image;if(c&&d&&d.height>0||u&&d&&r(d)){t===null&&(t=new Ll(s));const h=c?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,h),a.addEventListener("dispose",n),h.texture}else return null}}}return a}function r(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function n(a){const l=a.target;l.removeEventListener("dispose",n);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function dg(s){const e={};function t(i){if(e[i]!==void 0)return e[i];let r;switch(i){case"WEBGL_depth_texture":r=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=s.getExtension(i)}return e[i]=r,r}return{has:function(i){return t(i)!==null},init:function(i){i.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(i){const r=t(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function fg(s,e,t,i){const r={},n=new WeakMap;function o(d){const h=d.target;h.index!==null&&e.remove(h.index);for(const g in h.attributes)e.remove(h.attributes[g]);h.removeEventListener("dispose",o),delete r[h.id];const m=n.get(h);m&&(e.remove(m),n.delete(h)),i.releaseStatesOfGeometry(h),h.isInstancedBufferGeometry===!0&&delete h._maxInstanceCount,t.memory.geometries--}function a(d,h){return r[h.id]===!0||(h.addEventListener("dispose",o),r[h.id]=!0,t.memory.geometries++),h}function l(d){const h=d.attributes;for(const g in h)e.update(h[g],34962);const m=d.morphAttributes;for(const g in m){const f=m[g];for(let p=0,v=f.length;p<v;p++)e.update(f[p],34962)}}function c(d){const h=[],m=d.index,g=d.attributes.position;let f=0;if(m!==null){const _=m.array;f=m.version;for(let b=0,x=_.length;b<x;b+=3){const S=_[b+0],E=_[b+1],R=_[b+2];h.push(S,E,E,R,R,S)}}else{const _=g.array;f=g.version;for(let b=0,x=_.length/3-1;b<x;b+=3){const S=b+0,E=b+1,R=b+2;h.push(S,E,E,R,R,S)}}const p=new(Mu(h)?Pu:Ru)(h,1);p.version=f;const v=n.get(d);v&&e.remove(v),n.set(d,p)}function u(d){const h=n.get(d);if(h){const m=d.index;m!==null&&h.version<m.version&&c(d)}else c(d);return n.get(d)}return{get:a,update:l,getWireframeAttribute:u}}function pg(s,e,t,i){const r=i.isWebGL2;let n;function o(h){n=h}let a,l;function c(h){a=h.type,l=h.bytesPerElement}function u(h,m){s.drawElements(n,m,a,h*l),t.update(m,n,1)}function d(h,m,g){if(g===0)return;let f,p;if(r)f=s,p="drawElementsInstanced";else if(f=e.get("ANGLE_instanced_arrays"),p="drawElementsInstancedANGLE",f===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f[p](n,m,a,h*l,g),t.update(m,n,g)}this.setMode=o,this.setIndex=c,this.render=u,this.renderInstances=d}function mg(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(n,o,a){switch(t.calls++,o){case 4:t.triangles+=a*(n/3);break;case 1:t.lines+=a*(n/2);break;case 3:t.lines+=a*(n-1);break;case 2:t.lines+=a*n;break;case 0:t.points+=a*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:r,update:i}}function gg(s,e){return s[0]-e[0]}function vg(s,e){return Math.abs(e[1])-Math.abs(s[1])}function Na(s,e){let t=1;const i=e.isInterleavedBufferAttribute?e.data.array:e.array;i instanceof Int8Array?t=127:i instanceof Uint8Array?t=255:i instanceof Uint16Array?t=65535:i instanceof Int16Array?t=32767:i instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",i),s.divideScalar(t)}function _g(s,e,t){const i={},r=new Float32Array(8),n=new WeakMap,o=new ft,a=[];for(let c=0;c<8;c++)a[c]=[c,0];function l(c,u,d,h){const m=c.morphTargetInfluences;if(e.isWebGL2===!0){const g=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,f=g!==void 0?g.length:0;let p=n.get(u);if(p===void 0||p.count!==f){let b=function(){D.dispose(),n.delete(u),u.removeEventListener("dispose",b)};p!==void 0&&p.texture.dispose();const x=u.morphAttributes.position!==void 0,S=u.morphAttributes.normal!==void 0,E=u.morphAttributes.color!==void 0,R=u.morphAttributes.position||[],y=u.morphAttributes.normal||[],A=u.morphAttributes.color||[];let F=0;x===!0&&(F=1),S===!0&&(F=2),E===!0&&(F=3);let z=u.attributes.position.count*F,G=1;z>e.maxTextureSize&&(G=Math.ceil(z/e.maxTextureSize),z=e.maxTextureSize);const N=new Float32Array(z*G*4*f),D=new Au(N,z,G,f);D.type=1015,D.needsUpdate=!0;const O=F*4;for(let I=0;I<f;I++){const V=R[I],W=y[I],U=A[I],X=z*G*4*I;for(let le=0;le<V.count;le++){const j=le*O;x===!0&&(o.fromBufferAttribute(V,le),V.normalized===!0&&Na(o,V),N[X+j+0]=o.x,N[X+j+1]=o.y,N[X+j+2]=o.z,N[X+j+3]=0),S===!0&&(o.fromBufferAttribute(W,le),W.normalized===!0&&Na(o,W),N[X+j+4]=o.x,N[X+j+5]=o.y,N[X+j+6]=o.z,N[X+j+7]=0),E===!0&&(o.fromBufferAttribute(U,le),U.normalized===!0&&Na(o,U),N[X+j+8]=o.x,N[X+j+9]=o.y,N[X+j+10]=o.z,N[X+j+11]=U.itemSize===4?o.w:1)}}p={count:f,texture:D,size:new Ge(z,G)},n.set(u,p),u.addEventListener("dispose",b)}let v=0;for(let b=0;b<m.length;b++)v+=m[b];const _=u.morphTargetsRelative?1:1-v;h.getUniforms().setValue(s,"morphTargetBaseInfluence",_),h.getUniforms().setValue(s,"morphTargetInfluences",m),h.getUniforms().setValue(s,"morphTargetsTexture",p.texture,t),h.getUniforms().setValue(s,"morphTargetsTextureSize",p.size)}else{const g=m===void 0?0:m.length;let f=i[u.id];if(f===void 0||f.length!==g){f=[];for(let x=0;x<g;x++)f[x]=[x,0];i[u.id]=f}for(let x=0;x<g;x++){const S=f[x];S[0]=x,S[1]=m[x]}f.sort(vg);for(let x=0;x<8;x++)x<g&&f[x][1]?(a[x][0]=f[x][0],a[x][1]=f[x][1]):(a[x][0]=Number.MAX_SAFE_INTEGER,a[x][1]=0);a.sort(gg);const p=u.morphAttributes.position,v=u.morphAttributes.normal;let _=0;for(let x=0;x<8;x++){const S=a[x],E=S[0],R=S[1];E!==Number.MAX_SAFE_INTEGER&&R?(p&&u.getAttribute("morphTarget"+x)!==p[E]&&u.setAttribute("morphTarget"+x,p[E]),v&&u.getAttribute("morphNormal"+x)!==v[E]&&u.setAttribute("morphNormal"+x,v[E]),r[x]=R,_+=R):(p&&u.hasAttribute("morphTarget"+x)===!0&&u.deleteAttribute("morphTarget"+x),v&&u.hasAttribute("morphNormal"+x)===!0&&u.deleteAttribute("morphNormal"+x),r[x]=0)}const b=u.morphTargetsRelative?1:1-_;h.getUniforms().setValue(s,"morphTargetBaseInfluence",b),h.getUniforms().setValue(s,"morphTargetInfluences",r)}}return{update:l}}function xg(s,e,t,i){let r=new WeakMap;function n(l){const c=i.render.frame,u=l.geometry,d=e.get(l,u);return r.get(d)!==c&&(e.update(d),r.set(d,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),d}function o(){r=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:n,dispose:o}}const zu=new jt,Nu=new Au,Ou=new ap,Bu=new Fu,Fl=[],Il=[],zl=new Float32Array(16),Nl=new Float32Array(9),Ol=new Float32Array(4);function as(s,e,t){const i=s[0];if(i<=0||i>0)return s;const r=e*t;let n=Fl[r];if(n===void 0&&(n=new Float32Array(r),Fl[r]=n),e!==0){i.toArray(n,0);for(let o=1,a=0;o!==e;++o)a+=t,s[o].toArray(n,a)}return n}function Pt(s,e){if(s.length!==e.length)return!1;for(let t=0,i=s.length;t<i;t++)if(s[t]!==e[t])return!1;return!0}function Dt(s,e){for(let t=0,i=e.length;t<i;t++)s[t]=e[t]}function Xn(s,e){let t=Il[e];t===void 0&&(t=new Int32Array(e),Il[e]=t);for(let i=0;i!==e;++i)t[i]=s.allocateTextureUnit();return t}function yg(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function bg(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Pt(t,e))return;s.uniform2fv(this.addr,e),Dt(t,e)}}function wg(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Pt(t,e))return;s.uniform3fv(this.addr,e),Dt(t,e)}}function Mg(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Pt(t,e))return;s.uniform4fv(this.addr,e),Dt(t,e)}}function Sg(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(Pt(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),Dt(t,e)}else{if(Pt(t,i))return;Ol.set(i),s.uniformMatrix2fv(this.addr,!1,Ol),Dt(t,i)}}function Eg(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(Pt(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),Dt(t,e)}else{if(Pt(t,i))return;Nl.set(i),s.uniformMatrix3fv(this.addr,!1,Nl),Dt(t,i)}}function Tg(s,e){const t=this.cache,i=e.elements;if(i===void 0){if(Pt(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),Dt(t,e)}else{if(Pt(t,i))return;zl.set(i),s.uniformMatrix4fv(this.addr,!1,zl),Dt(t,i)}}function Ag(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function Cg(s,e){const t=this.cache;Pt(t,e)||(s.uniform2iv(this.addr,e),Dt(t,e))}function Lg(s,e){const t=this.cache;Pt(t,e)||(s.uniform3iv(this.addr,e),Dt(t,e))}function Rg(s,e){const t=this.cache;Pt(t,e)||(s.uniform4iv(this.addr,e),Dt(t,e))}function Pg(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function Dg(s,e){const t=this.cache;Pt(t,e)||(s.uniform2uiv(this.addr,e),Dt(t,e))}function Fg(s,e){const t=this.cache;Pt(t,e)||(s.uniform3uiv(this.addr,e),Dt(t,e))}function Ig(s,e){const t=this.cache;Pt(t,e)||(s.uniform4uiv(this.addr,e),Dt(t,e))}function zg(s,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(s.uniform1i(this.addr,r),i[0]=r),t.setTexture2D(e||zu,r)}function Ng(s,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(s.uniform1i(this.addr,r),i[0]=r),t.setTexture3D(e||Ou,r)}function Og(s,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(s.uniform1i(this.addr,r),i[0]=r),t.setTextureCube(e||Bu,r)}function Bg(s,e,t){const i=this.cache,r=t.allocateTextureUnit();i[0]!==r&&(s.uniform1i(this.addr,r),i[0]=r),t.setTexture2DArray(e||Nu,r)}function kg(s){switch(s){case 5126:return yg;case 35664:return bg;case 35665:return wg;case 35666:return Mg;case 35674:return Sg;case 35675:return Eg;case 35676:return Tg;case 5124:case 35670:return Ag;case 35667:case 35671:return Cg;case 35668:case 35672:return Lg;case 35669:case 35673:return Rg;case 5125:return Pg;case 36294:return Dg;case 36295:return Fg;case 36296:return Ig;case 35678:case 36198:case 36298:case 36306:case 35682:return zg;case 35679:case 36299:case 36307:return Ng;case 35680:case 36300:case 36308:case 36293:return Og;case 36289:case 36303:case 36311:case 36292:return Bg}}function Ug(s,e){s.uniform1fv(this.addr,e)}function Gg(s,e){const t=as(e,this.size,2);s.uniform2fv(this.addr,t)}function Hg(s,e){const t=as(e,this.size,3);s.uniform3fv(this.addr,t)}function Vg(s,e){const t=as(e,this.size,4);s.uniform4fv(this.addr,t)}function Wg(s,e){const t=as(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function jg(s,e){const t=as(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function qg(s,e){const t=as(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function Yg(s,e){s.uniform1iv(this.addr,e)}function Xg(s,e){s.uniform2iv(this.addr,e)}function $g(s,e){s.uniform3iv(this.addr,e)}function Zg(s,e){s.uniform4iv(this.addr,e)}function Kg(s,e){s.uniform1uiv(this.addr,e)}function Jg(s,e){s.uniform2uiv(this.addr,e)}function Qg(s,e){s.uniform3uiv(this.addr,e)}function e2(s,e){s.uniform4uiv(this.addr,e)}function t2(s,e,t){const i=e.length,r=Xn(t,i);s.uniform1iv(this.addr,r);for(let n=0;n!==i;++n)t.setTexture2D(e[n]||zu,r[n])}function i2(s,e,t){const i=e.length,r=Xn(t,i);s.uniform1iv(this.addr,r);for(let n=0;n!==i;++n)t.setTexture3D(e[n]||Ou,r[n])}function r2(s,e,t){const i=e.length,r=Xn(t,i);s.uniform1iv(this.addr,r);for(let n=0;n!==i;++n)t.setTextureCube(e[n]||Bu,r[n])}function s2(s,e,t){const i=e.length,r=Xn(t,i);s.uniform1iv(this.addr,r);for(let n=0;n!==i;++n)t.setTexture2DArray(e[n]||Nu,r[n])}function n2(s){switch(s){case 5126:return Ug;case 35664:return Gg;case 35665:return Hg;case 35666:return Vg;case 35674:return Wg;case 35675:return jg;case 35676:return qg;case 5124:case 35670:return Yg;case 35667:case 35671:return Xg;case 35668:case 35672:return $g;case 35669:case 35673:return Zg;case 5125:return Kg;case 36294:return Jg;case 36295:return Qg;case 36296:return e2;case 35678:case 36198:case 36298:case 36306:case 35682:return t2;case 35679:case 36299:case 36307:return i2;case 35680:case 36300:case 36308:case 36293:return r2;case 36289:case 36303:case 36311:case 36292:return s2}}class a2{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.setValue=kg(t.type)}}class o2{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.size=t.size,this.setValue=n2(t.type)}}class l2{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const r=this.seq;for(let n=0,o=r.length;n!==o;++n){const a=r[n];a.setValue(e,t[a.id],i)}}}const Oa=/(\w+)(\])?(\[|\.)?/g;function Bl(s,e){s.seq.push(e),s.map[e.id]=e}function c2(s,e,t){const i=s.name,r=i.length;for(Oa.lastIndex=0;;){const n=Oa.exec(i),o=Oa.lastIndex;let a=n[1];const l=n[2]==="]",c=n[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===r){Bl(t,c===void 0?new a2(a,s,e):new o2(a,s,e));break}else{let u=t.map[a];u===void 0&&(u=new l2(a),Bl(t,u)),t=u}}}class An{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,35718);for(let r=0;r<i;++r){const n=e.getActiveUniform(t,r),o=e.getUniformLocation(t,n.name);c2(n,o,this)}}setValue(e,t,i,r){const n=this.map[t];n!==void 0&&n.setValue(e,i,r)}setOptional(e,t,i){const r=t[i];r!==void 0&&this.setValue(e,i,r)}static upload(e,t,i,r){for(let n=0,o=t.length;n!==o;++n){const a=t[n],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,r)}}static seqWithValue(e,t){const i=[];for(let r=0,n=e.length;r!==n;++r){const o=e[r];o.id in t&&i.push(o)}return i}}function kl(s,e,t){const i=s.createShader(e);return s.shaderSource(i,t),s.compileShader(i),i}let u2=0;function h2(s,e){const t=s.split(`
`),i=[],r=Math.max(e-6,0),n=Math.min(e+6,t.length);for(let o=r;o<n;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}function d2(s){switch(s){case 3e3:return["Linear","( value )"];case 3001:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}function Ul(s,e,t){const i=s.getShaderParameter(e,35713),r=s.getShaderInfoLog(e).trim();if(i&&r==="")return"";const n=/ERROR: 0:(\d+)/.exec(r);if(n){const o=parseInt(n[1]);return t.toUpperCase()+`

`+r+`

`+h2(s.getShaderSource(e),o)}else return r}function f2(s,e){const t=d2(e);return"vec4 "+s+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function p2(s,e){let t;switch(e){case 1:t="Linear";break;case 2:t="Reinhard";break;case 3:t="OptimizedCineon";break;case 4:t="ACESFilmic";break;case 5:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function m2(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(bs).join(`
`)}function g2(s){const e=[];for(const t in s){const i=s[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function v2(s,e){const t={},i=s.getProgramParameter(e,35721);for(let r=0;r<i;r++){const n=s.getActiveAttrib(e,r),o=n.name;let a=1;n.type===35674&&(a=2),n.type===35675&&(a=3),n.type===35676&&(a=4),t[o]={type:n.type,location:s.getAttribLocation(e,o),locationSize:a}}return t}function bs(s){return s!==""}function Gl(s,e){return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function Hl(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const _2=/^[ \t]*#include +<([\w\d./]+)>/gm;function lo(s){return s.replace(_2,x2)}function x2(s,e){const t=Ne[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return lo(t)}const y2=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,b2=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Vl(s){return s.replace(b2,ku).replace(y2,w2)}function w2(s,e,t,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),ku(s,e,t,i)}function ku(s,e,t,i){let r="";for(let n=parseInt(e);n<parseInt(t);n++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+n+" ]").replace(/UNROLLED_LOOP_INDEX/g,n);return r}function Wl(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function M2(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===1?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===2?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===3&&(e="SHADOWMAP_TYPE_VSM"),e}function S2(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:e="ENVMAP_TYPE_CUBE_UV";break}return e}function E2(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case 302:e="ENVMAP_MODE_REFRACTION";break}return e}function T2(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD";break}return e}function A2(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:i,maxMip:t}}function C2(s,e,t,i){const r=s.getContext(),n=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=M2(t),c=S2(t),u=E2(t),d=T2(t),h=A2(t),m=t.isWebGL2?"":m2(t),g=g2(n),f=r.createProgram();let p,v,_=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(p=[g].filter(bs).join(`
`),p.length>0&&(p+=`
`),v=[m,g].filter(bs).join(`
`),v.length>0&&(v+=`
`)):(p=[Wl(t),"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(bs).join(`
`),v=[m,Wl(t),"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+d:"",h?"#define CUBEUV_TEXEL_WIDTH "+h.texelWidth:"",h?"#define CUBEUV_TEXEL_HEIGHT "+h.texelHeight:"",h?"#define CUBEUV_MAX_MIP "+h.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==0?"#define TONE_MAPPING":"",t.toneMapping!==0?Ne.tonemapping_pars_fragment:"",t.toneMapping!==0?p2("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ne.encodings_pars_fragment,f2("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(bs).join(`
`)),o=lo(o),o=Gl(o,t),o=Hl(o,t),a=lo(a),a=Gl(a,t),a=Hl(a,t),o=Vl(o),a=Vl(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(_=`#version 300 es
`,p=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+p,v=["#define varying in",t.glslVersion===fl?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===fl?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const b=_+p+o,x=_+v+a,S=kl(r,35633,b),E=kl(r,35632,x);if(r.attachShader(f,S),r.attachShader(f,E),t.index0AttributeName!==void 0?r.bindAttribLocation(f,0,t.index0AttributeName):t.morphTargets===!0&&r.bindAttribLocation(f,0,"position"),r.linkProgram(f),s.debug.checkShaderErrors){const A=r.getProgramInfoLog(f).trim(),F=r.getShaderInfoLog(S).trim(),z=r.getShaderInfoLog(E).trim();let G=!0,N=!0;if(r.getProgramParameter(f,35714)===!1){G=!1;const D=Ul(r,S,"vertex"),O=Ul(r,E,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(f,35715)+`

Program Info Log: `+A+`
`+D+`
`+O)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(F===""||z==="")&&(N=!1);N&&(this.diagnostics={runnable:G,programLog:A,vertexShader:{log:F,prefix:p},fragmentShader:{log:z,prefix:v}})}r.deleteShader(S),r.deleteShader(E);let R;this.getUniforms=function(){return R===void 0&&(R=new An(r,f)),R};let y;return this.getAttributes=function(){return y===void 0&&(y=v2(r,f)),y},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(f),this.program=void 0},this.name=t.shaderName,this.id=u2++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=S,this.fragmentShader=E,this}let L2=0;class R2{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,r=this._getShaderStage(t),n=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(n)===!1&&(o.add(n),n.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const i=new P2(e);t.set(e,i)}return t.get(e)}}class P2{constructor(e){this.id=L2++,this.code=e,this.usedTimes=0}}function D2(s,e,t,i,r,n,o){const a=new Cu,l=new R2,c=[],u=r.isWebGL2,d=r.logarithmicDepthBuffer,h=r.vertexTextures;let m=r.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function f(y,A,F,z,G){const N=z.fog,D=G.geometry,O=y.isMeshStandardMaterial?z.environment:null,I=(y.isMeshStandardMaterial?t:e).get(y.envMap||O),V=I&&I.mapping===306?I.image.height:null,W=g[y.type];y.precision!==null&&(m=r.getMaxPrecision(y.precision),m!==y.precision&&console.warn("THREE.WebGLProgram.getParameters:",y.precision,"not supported, using",m,"instead."));const U=D.morphAttributes.position||D.morphAttributes.normal||D.morphAttributes.color,X=U!==void 0?U.length:0;let le=0;D.morphAttributes.position!==void 0&&(le=1),D.morphAttributes.normal!==void 0&&(le=2),D.morphAttributes.color!==void 0&&(le=3);let j,ue,Me,ze;if(W){const _e=mi[W];j=_e.vertexShader,ue=_e.fragmentShader}else j=y.vertexShader,ue=y.fragmentShader,l.update(y),Me=l.getVertexShaderID(y),ze=l.getFragmentShaderID(y);const ee=s.getRenderTarget(),Oe=y.alphaTest>0,Ae=y.clearcoat>0,Ce=y.iridescence>0;return{isWebGL2:u,shaderID:W,shaderName:y.type,vertexShader:j,fragmentShader:ue,defines:y.defines,customVertexShaderID:Me,customFragmentShaderID:ze,isRawShaderMaterial:y.isRawShaderMaterial===!0,glslVersion:y.glslVersion,precision:m,instancing:G.isInstancedMesh===!0,instancingColor:G.isInstancedMesh===!0&&G.instanceColor!==null,supportsVertexTextures:h,outputEncoding:ee===null?s.outputEncoding:ee.isXRRenderTarget===!0?ee.texture.encoding:3e3,map:!!y.map,matcap:!!y.matcap,envMap:!!I,envMapMode:I&&I.mapping,envMapCubeUVHeight:V,lightMap:!!y.lightMap,aoMap:!!y.aoMap,emissiveMap:!!y.emissiveMap,bumpMap:!!y.bumpMap,normalMap:!!y.normalMap,objectSpaceNormalMap:y.normalMapType===1,tangentSpaceNormalMap:y.normalMapType===0,decodeVideoTexture:!!y.map&&y.map.isVideoTexture===!0&&y.map.encoding===3001,clearcoat:Ae,clearcoatMap:Ae&&!!y.clearcoatMap,clearcoatRoughnessMap:Ae&&!!y.clearcoatRoughnessMap,clearcoatNormalMap:Ae&&!!y.clearcoatNormalMap,iridescence:Ce,iridescenceMap:Ce&&!!y.iridescenceMap,iridescenceThicknessMap:Ce&&!!y.iridescenceThicknessMap,displacementMap:!!y.displacementMap,roughnessMap:!!y.roughnessMap,metalnessMap:!!y.metalnessMap,specularMap:!!y.specularMap,specularIntensityMap:!!y.specularIntensityMap,specularColorMap:!!y.specularColorMap,opaque:y.transparent===!1&&y.blending===1,alphaMap:!!y.alphaMap,alphaTest:Oe,gradientMap:!!y.gradientMap,sheen:y.sheen>0,sheenColorMap:!!y.sheenColorMap,sheenRoughnessMap:!!y.sheenRoughnessMap,transmission:y.transmission>0,transmissionMap:!!y.transmissionMap,thicknessMap:!!y.thicknessMap,combine:y.combine,vertexTangents:!!y.normalMap&&!!D.attributes.tangent,vertexColors:y.vertexColors,vertexAlphas:y.vertexColors===!0&&!!D.attributes.color&&D.attributes.color.itemSize===4,vertexUvs:!!y.map||!!y.bumpMap||!!y.normalMap||!!y.specularMap||!!y.alphaMap||!!y.emissiveMap||!!y.roughnessMap||!!y.metalnessMap||!!y.clearcoatMap||!!y.clearcoatRoughnessMap||!!y.clearcoatNormalMap||!!y.iridescenceMap||!!y.iridescenceThicknessMap||!!y.displacementMap||!!y.transmissionMap||!!y.thicknessMap||!!y.specularIntensityMap||!!y.specularColorMap||!!y.sheenColorMap||!!y.sheenRoughnessMap,uvsVertexOnly:!(y.map||y.bumpMap||y.normalMap||y.specularMap||y.alphaMap||y.emissiveMap||y.roughnessMap||y.metalnessMap||y.clearcoatNormalMap||y.iridescenceMap||y.iridescenceThicknessMap||y.transmission>0||y.transmissionMap||y.thicknessMap||y.specularIntensityMap||y.specularColorMap||y.sheen>0||y.sheenColorMap||y.sheenRoughnessMap)&&!!y.displacementMap,fog:!!N,useFog:y.fog===!0,fogExp2:N&&N.isFogExp2,flatShading:!!y.flatShading,sizeAttenuation:y.sizeAttenuation,logarithmicDepthBuffer:d,skinning:G.isSkinnedMesh===!0,morphTargets:D.morphAttributes.position!==void 0,morphNormals:D.morphAttributes.normal!==void 0,morphColors:D.morphAttributes.color!==void 0,morphTargetsCount:X,morphTextureStride:le,numDirLights:A.directional.length,numPointLights:A.point.length,numSpotLights:A.spot.length,numRectAreaLights:A.rectArea.length,numHemiLights:A.hemi.length,numDirLightShadows:A.directionalShadowMap.length,numPointLightShadows:A.pointShadowMap.length,numSpotLightShadows:A.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:y.dithering,shadowMapEnabled:s.shadowMap.enabled&&F.length>0,shadowMapType:s.shadowMap.type,toneMapping:y.toneMapped?s.toneMapping:0,physicallyCorrectLights:s.physicallyCorrectLights,premultipliedAlpha:y.premultipliedAlpha,doubleSided:y.side===2,flipSided:y.side===1,useDepthPacking:!!y.depthPacking,depthPacking:y.depthPacking||0,index0AttributeName:y.index0AttributeName,extensionDerivatives:y.extensions&&y.extensions.derivatives,extensionFragDepth:y.extensions&&y.extensions.fragDepth,extensionDrawBuffers:y.extensions&&y.extensions.drawBuffers,extensionShaderTextureLOD:y.extensions&&y.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||i.has("EXT_shader_texture_lod"),customProgramCacheKey:y.customProgramCacheKey()}}function p(y){const A=[];if(y.shaderID?A.push(y.shaderID):(A.push(y.customVertexShaderID),A.push(y.customFragmentShaderID)),y.defines!==void 0)for(const F in y.defines)A.push(F),A.push(y.defines[F]);return y.isRawShaderMaterial===!1&&(v(A,y),_(A,y),A.push(s.outputEncoding)),A.push(y.customProgramCacheKey),A.join()}function v(y,A){y.push(A.precision),y.push(A.outputEncoding),y.push(A.envMapMode),y.push(A.envMapCubeUVHeight),y.push(A.combine),y.push(A.vertexUvs),y.push(A.fogExp2),y.push(A.sizeAttenuation),y.push(A.morphTargetsCount),y.push(A.morphAttributeCount),y.push(A.numDirLights),y.push(A.numPointLights),y.push(A.numSpotLights),y.push(A.numHemiLights),y.push(A.numRectAreaLights),y.push(A.numDirLightShadows),y.push(A.numPointLightShadows),y.push(A.numSpotLightShadows),y.push(A.shadowMapType),y.push(A.toneMapping),y.push(A.numClippingPlanes),y.push(A.numClipIntersection),y.push(A.depthPacking)}function _(y,A){a.disableAll(),A.isWebGL2&&a.enable(0),A.supportsVertexTextures&&a.enable(1),A.instancing&&a.enable(2),A.instancingColor&&a.enable(3),A.map&&a.enable(4),A.matcap&&a.enable(5),A.envMap&&a.enable(6),A.lightMap&&a.enable(7),A.aoMap&&a.enable(8),A.emissiveMap&&a.enable(9),A.bumpMap&&a.enable(10),A.normalMap&&a.enable(11),A.objectSpaceNormalMap&&a.enable(12),A.tangentSpaceNormalMap&&a.enable(13),A.clearcoat&&a.enable(14),A.clearcoatMap&&a.enable(15),A.clearcoatRoughnessMap&&a.enable(16),A.clearcoatNormalMap&&a.enable(17),A.iridescence&&a.enable(18),A.iridescenceMap&&a.enable(19),A.iridescenceThicknessMap&&a.enable(20),A.displacementMap&&a.enable(21),A.specularMap&&a.enable(22),A.roughnessMap&&a.enable(23),A.metalnessMap&&a.enable(24),A.gradientMap&&a.enable(25),A.alphaMap&&a.enable(26),A.alphaTest&&a.enable(27),A.vertexColors&&a.enable(28),A.vertexAlphas&&a.enable(29),A.vertexUvs&&a.enable(30),A.vertexTangents&&a.enable(31),A.uvsVertexOnly&&a.enable(32),A.fog&&a.enable(33),y.push(a.mask),a.disableAll(),A.useFog&&a.enable(0),A.flatShading&&a.enable(1),A.logarithmicDepthBuffer&&a.enable(2),A.skinning&&a.enable(3),A.morphTargets&&a.enable(4),A.morphNormals&&a.enable(5),A.morphColors&&a.enable(6),A.premultipliedAlpha&&a.enable(7),A.shadowMapEnabled&&a.enable(8),A.physicallyCorrectLights&&a.enable(9),A.doubleSided&&a.enable(10),A.flipSided&&a.enable(11),A.useDepthPacking&&a.enable(12),A.dithering&&a.enable(13),A.specularIntensityMap&&a.enable(14),A.specularColorMap&&a.enable(15),A.transmission&&a.enable(16),A.transmissionMap&&a.enable(17),A.thicknessMap&&a.enable(18),A.sheen&&a.enable(19),A.sheenColorMap&&a.enable(20),A.sheenRoughnessMap&&a.enable(21),A.decodeVideoTexture&&a.enable(22),A.opaque&&a.enable(23),y.push(a.mask)}function b(y){const A=g[y.type];let F;if(A){const z=mi[A];F=xp.clone(z.uniforms)}else F=y.uniforms;return F}function x(y,A){let F;for(let z=0,G=c.length;z<G;z++){const N=c[z];if(N.cacheKey===A){F=N,++F.usedTimes;break}}return F===void 0&&(F=new C2(s,A,y,n),c.push(F)),F}function S(y){if(--y.usedTimes===0){const A=c.indexOf(y);c[A]=c[c.length-1],c.pop(),y.destroy()}}function E(y){l.remove(y)}function R(){l.dispose()}return{getParameters:f,getProgramCacheKey:p,getUniforms:b,acquireProgram:x,releaseProgram:S,releaseShaderCache:E,programs:c,dispose:R}}function F2(){let s=new WeakMap;function e(n){let o=s.get(n);return o===void 0&&(o={},s.set(n,o)),o}function t(n){s.delete(n)}function i(n,o,a){s.get(n)[o]=a}function r(){s=new WeakMap}return{get:e,remove:t,update:i,dispose:r}}function I2(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function jl(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function ql(){const s=[];let e=0;const t=[],i=[],r=[];function n(){e=0,t.length=0,i.length=0,r.length=0}function o(d,h,m,g,f,p){let v=s[e];return v===void 0?(v={id:d.id,object:d,geometry:h,material:m,groupOrder:g,renderOrder:d.renderOrder,z:f,group:p},s[e]=v):(v.id=d.id,v.object=d,v.geometry=h,v.material=m,v.groupOrder=g,v.renderOrder=d.renderOrder,v.z=f,v.group=p),e++,v}function a(d,h,m,g,f,p){const v=o(d,h,m,g,f,p);m.transmission>0?i.push(v):m.transparent===!0?r.push(v):t.push(v)}function l(d,h,m,g,f,p){const v=o(d,h,m,g,f,p);m.transmission>0?i.unshift(v):m.transparent===!0?r.unshift(v):t.unshift(v)}function c(d,h){t.length>1&&t.sort(d||I2),i.length>1&&i.sort(h||jl),r.length>1&&r.sort(h||jl)}function u(){for(let d=e,h=s.length;d<h;d++){const m=s[d];if(m.id===null)break;m.id=null,m.object=null,m.geometry=null,m.material=null,m.group=null}}return{opaque:t,transmissive:i,transparent:r,init:n,push:a,unshift:l,finish:u,sort:c}}function z2(){let s=new WeakMap;function e(i,r){let n;return s.has(i)===!1?(n=new ql,s.set(i,[n])):r>=s.get(i).length?(n=new ql,s.get(i).push(n)):n=s.get(i)[r],n}function t(){s=new WeakMap}return{get:e,dispose:t}}function N2(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new H,color:new Ue};break;case"SpotLight":t={position:new H,direction:new H,color:new Ue,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new H,color:new Ue,distance:0,decay:0};break;case"HemisphereLight":t={direction:new H,skyColor:new Ue,groundColor:new Ue};break;case"RectAreaLight":t={color:new Ue,position:new H,halfWidth:new H,halfHeight:new H};break}return s[e.id]=t,t}}}function O2(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ge};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ge};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ge,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let B2=0;function k2(s,e){return(e.castShadow?1:0)-(s.castShadow?1:0)}function U2(s,e){const t=new N2,i=O2(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)r.probe.push(new H);const n=new H,o=new pt,a=new pt;function l(u,d){let h=0,m=0,g=0;for(let A=0;A<9;A++)r.probe[A].set(0,0,0);let f=0,p=0,v=0,_=0,b=0,x=0,S=0,E=0;u.sort(k2);const R=d!==!0?Math.PI:1;for(let A=0,F=u.length;A<F;A++){const z=u[A],G=z.color,N=z.intensity,D=z.distance,O=z.shadow&&z.shadow.map?z.shadow.map.texture:null;if(z.isAmbientLight)h+=G.r*N*R,m+=G.g*N*R,g+=G.b*N*R;else if(z.isLightProbe)for(let I=0;I<9;I++)r.probe[I].addScaledVector(z.sh.coefficients[I],N);else if(z.isDirectionalLight){const I=t.get(z);if(I.color.copy(z.color).multiplyScalar(z.intensity*R),z.castShadow){const V=z.shadow,W=i.get(z);W.shadowBias=V.bias,W.shadowNormalBias=V.normalBias,W.shadowRadius=V.radius,W.shadowMapSize=V.mapSize,r.directionalShadow[f]=W,r.directionalShadowMap[f]=O,r.directionalShadowMatrix[f]=z.shadow.matrix,x++}r.directional[f]=I,f++}else if(z.isSpotLight){const I=t.get(z);if(I.position.setFromMatrixPosition(z.matrixWorld),I.color.copy(G).multiplyScalar(N*R),I.distance=D,I.coneCos=Math.cos(z.angle),I.penumbraCos=Math.cos(z.angle*(1-z.penumbra)),I.decay=z.decay,z.castShadow){const V=z.shadow,W=i.get(z);W.shadowBias=V.bias,W.shadowNormalBias=V.normalBias,W.shadowRadius=V.radius,W.shadowMapSize=V.mapSize,r.spotShadow[v]=W,r.spotShadowMap[v]=O,r.spotShadowMatrix[v]=z.shadow.matrix,E++}r.spot[v]=I,v++}else if(z.isRectAreaLight){const I=t.get(z);I.color.copy(G).multiplyScalar(N),I.halfWidth.set(z.width*.5,0,0),I.halfHeight.set(0,z.height*.5,0),r.rectArea[_]=I,_++}else if(z.isPointLight){const I=t.get(z);if(I.color.copy(z.color).multiplyScalar(z.intensity*R),I.distance=z.distance,I.decay=z.decay,z.castShadow){const V=z.shadow,W=i.get(z);W.shadowBias=V.bias,W.shadowNormalBias=V.normalBias,W.shadowRadius=V.radius,W.shadowMapSize=V.mapSize,W.shadowCameraNear=V.camera.near,W.shadowCameraFar=V.camera.far,r.pointShadow[p]=W,r.pointShadowMap[p]=O,r.pointShadowMatrix[p]=z.shadow.matrix,S++}r.point[p]=I,p++}else if(z.isHemisphereLight){const I=t.get(z);I.skyColor.copy(z.color).multiplyScalar(N*R),I.groundColor.copy(z.groundColor).multiplyScalar(N*R),r.hemi[b]=I,b++}}_>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=me.LTC_FLOAT_1,r.rectAreaLTC2=me.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=me.LTC_HALF_1,r.rectAreaLTC2=me.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=h,r.ambient[1]=m,r.ambient[2]=g;const y=r.hash;(y.directionalLength!==f||y.pointLength!==p||y.spotLength!==v||y.rectAreaLength!==_||y.hemiLength!==b||y.numDirectionalShadows!==x||y.numPointShadows!==S||y.numSpotShadows!==E)&&(r.directional.length=f,r.spot.length=v,r.rectArea.length=_,r.point.length=p,r.hemi.length=b,r.directionalShadow.length=x,r.directionalShadowMap.length=x,r.pointShadow.length=S,r.pointShadowMap.length=S,r.spotShadow.length=E,r.spotShadowMap.length=E,r.directionalShadowMatrix.length=x,r.pointShadowMatrix.length=S,r.spotShadowMatrix.length=E,y.directionalLength=f,y.pointLength=p,y.spotLength=v,y.rectAreaLength=_,y.hemiLength=b,y.numDirectionalShadows=x,y.numPointShadows=S,y.numSpotShadows=E,r.version=B2++)}function c(u,d){let h=0,m=0,g=0,f=0,p=0;const v=d.matrixWorldInverse;for(let _=0,b=u.length;_<b;_++){const x=u[_];if(x.isDirectionalLight){const S=r.directional[h];S.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),S.direction.sub(n),S.direction.transformDirection(v),h++}else if(x.isSpotLight){const S=r.spot[g];S.position.setFromMatrixPosition(x.matrixWorld),S.position.applyMatrix4(v),S.direction.setFromMatrixPosition(x.matrixWorld),n.setFromMatrixPosition(x.target.matrixWorld),S.direction.sub(n),S.direction.transformDirection(v),g++}else if(x.isRectAreaLight){const S=r.rectArea[f];S.position.setFromMatrixPosition(x.matrixWorld),S.position.applyMatrix4(v),a.identity(),o.copy(x.matrixWorld),o.premultiply(v),a.extractRotation(o),S.halfWidth.set(x.width*.5,0,0),S.halfHeight.set(0,x.height*.5,0),S.halfWidth.applyMatrix4(a),S.halfHeight.applyMatrix4(a),f++}else if(x.isPointLight){const S=r.point[m];S.position.setFromMatrixPosition(x.matrixWorld),S.position.applyMatrix4(v),m++}else if(x.isHemisphereLight){const S=r.hemi[p];S.direction.setFromMatrixPosition(x.matrixWorld),S.direction.transformDirection(v),p++}}}return{setup:l,setupView:c,state:r}}function Yl(s,e){const t=new U2(s,e),i=[],r=[];function n(){i.length=0,r.length=0}function o(u){i.push(u)}function a(u){r.push(u)}function l(u){t.setup(i,u)}function c(u){t.setupView(i,u)}return{init:n,state:{lightsArray:i,shadowsArray:r,lights:t},setupLights:l,setupLightsView:c,pushLight:o,pushShadow:a}}function G2(s,e){let t=new WeakMap;function i(n,o=0){let a;return t.has(n)===!1?(a=new Yl(s,e),t.set(n,[a])):o>=t.get(n).length?(a=new Yl(s,e),t.get(n).push(a)):a=t.get(n)[o],a}function r(){t=new WeakMap}return{get:i,dispose:r}}class H2 extends Cr{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class V2 extends Cr{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new H,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const W2=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,j2=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function q2(s,e,t){let i=new Ro;const r=new Ge,n=new Ge,o=new ft,a=new H2({depthPacking:3201}),l=new V2,c={},u=t.maxTextureSize,d={0:1,1:0,2:2},h=new Tr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ge},radius:{value:4}},vertexShader:W2,fragmentShader:j2}),m=h.clone();m.defines.HORIZONTAL_PASS=1;const g=new bi;g.setAttribute("position",new xi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new vi(g,h),p=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(x,S,E){if(p.enabled===!1||p.autoUpdate===!1&&p.needsUpdate===!1||x.length===0)return;const R=s.getRenderTarget(),y=s.getActiveCubeFace(),A=s.getActiveMipmapLevel(),F=s.state;F.setBlending(0),F.buffers.color.setClear(1,1,1,1),F.buffers.depth.setTest(!0),F.setScissorTest(!1);for(let z=0,G=x.length;z<G;z++){const N=x[z],D=N.shadow;if(D===void 0){console.warn("THREE.WebGLShadowMap:",N,"has no shadow.");continue}if(D.autoUpdate===!1&&D.needsUpdate===!1)continue;r.copy(D.mapSize);const O=D.getFrameExtents();if(r.multiply(O),n.copy(D.mapSize),(r.x>u||r.y>u)&&(r.x>u&&(n.x=Math.floor(u/O.x),r.x=n.x*O.x,D.mapSize.x=n.x),r.y>u&&(n.y=Math.floor(u/O.y),r.y=n.y*O.y,D.mapSize.y=n.y)),D.map===null){const V=this.type!==3?{minFilter:1003,magFilter:1003}:{};D.map=new Er(r.x,r.y,V),D.map.texture.name=N.name+".shadowMap",D.camera.updateProjectionMatrix()}s.setRenderTarget(D.map),s.clear();const I=D.getViewportCount();for(let V=0;V<I;V++){const W=D.getViewport(V);o.set(n.x*W.x,n.y*W.y,n.x*W.z,n.y*W.w),F.viewport(o),D.updateMatrices(N,V),i=D.getFrustum(),b(S,E,D.camera,N,this.type)}D.isPointLightShadow!==!0&&this.type===3&&v(D,E),D.needsUpdate=!1}p.needsUpdate=!1,s.setRenderTarget(R,y,A)};function v(x,S){const E=e.update(f);h.defines.VSM_SAMPLES!==x.blurSamples&&(h.defines.VSM_SAMPLES=x.blurSamples,m.defines.VSM_SAMPLES=x.blurSamples,h.needsUpdate=!0,m.needsUpdate=!0),x.mapPass===null&&(x.mapPass=new Er(r.x,r.y)),h.uniforms.shadow_pass.value=x.map.texture,h.uniforms.resolution.value=x.mapSize,h.uniforms.radius.value=x.radius,s.setRenderTarget(x.mapPass),s.clear(),s.renderBufferDirect(S,null,E,h,f,null),m.uniforms.shadow_pass.value=x.mapPass.texture,m.uniforms.resolution.value=x.mapSize,m.uniforms.radius.value=x.radius,s.setRenderTarget(x.map),s.clear(),s.renderBufferDirect(S,null,E,m,f,null)}function _(x,S,E,R,y,A){let F=null;const z=E.isPointLight===!0?x.customDistanceMaterial:x.customDepthMaterial;if(z!==void 0?F=z:F=E.isPointLight===!0?l:a,s.localClippingEnabled&&S.clipShadows===!0&&Array.isArray(S.clippingPlanes)&&S.clippingPlanes.length!==0||S.displacementMap&&S.displacementScale!==0||S.alphaMap&&S.alphaTest>0){const G=F.uuid,N=S.uuid;let D=c[G];D===void 0&&(D={},c[G]=D);let O=D[N];O===void 0&&(O=F.clone(),D[N]=O),F=O}return F.visible=S.visible,F.wireframe=S.wireframe,A===3?F.side=S.shadowSide!==null?S.shadowSide:S.side:F.side=S.shadowSide!==null?S.shadowSide:d[S.side],F.alphaMap=S.alphaMap,F.alphaTest=S.alphaTest,F.clipShadows=S.clipShadows,F.clippingPlanes=S.clippingPlanes,F.clipIntersection=S.clipIntersection,F.displacementMap=S.displacementMap,F.displacementScale=S.displacementScale,F.displacementBias=S.displacementBias,F.wireframeLinewidth=S.wireframeLinewidth,F.linewidth=S.linewidth,E.isPointLight===!0&&F.isMeshDistanceMaterial===!0&&(F.referencePosition.setFromMatrixPosition(E.matrixWorld),F.nearDistance=R,F.farDistance=y),F}function b(x,S,E,R,y){if(x.visible===!1)return;if(x.layers.test(S.layers)&&(x.isMesh||x.isLine||x.isPoints)&&(x.castShadow||x.receiveShadow&&y===3)&&(!x.frustumCulled||i.intersectsObject(x))){x.modelViewMatrix.multiplyMatrices(E.matrixWorldInverse,x.matrixWorld);const F=e.update(x),z=x.material;if(Array.isArray(z)){const G=F.groups;for(let N=0,D=G.length;N<D;N++){const O=G[N],I=z[O.materialIndex];if(I&&I.visible){const V=_(x,I,R,E.near,E.far,y);s.renderBufferDirect(E,null,F,V,x,O)}}}else if(z.visible){const G=_(x,z,R,E.near,E.far,y);s.renderBufferDirect(E,null,F,G,x,null)}}const A=x.children;for(let F=0,z=A.length;F<z;F++)b(A[F],S,E,R,y)}}function Y2(s,e,t){const i=t.isWebGL2;function r(){let k=!1;const be=new ft;let Q=null;const Ee=new ft(0,0,0,0);return{setMask:function(fe){Q!==fe&&!k&&(s.colorMask(fe,fe,fe,fe),Q=fe)},setLocked:function(fe){k=fe},setClear:function(fe,Qe,mt,nt,Vi){Vi===!0&&(fe*=nt,Qe*=nt,mt*=nt),be.set(fe,Qe,mt,nt),Ee.equals(be)===!1&&(s.clearColor(fe,Qe,mt,nt),Ee.copy(be))},reset:function(){k=!1,Q=null,Ee.set(-1,0,0,0)}}}function n(){let k=!1,be=null,Q=null,Ee=null;return{setTest:function(fe){fe?Oe(2929):Ae(2929)},setMask:function(fe){be!==fe&&!k&&(s.depthMask(fe),be=fe)},setFunc:function(fe){if(Q!==fe){if(fe)switch(fe){case 0:s.depthFunc(512);break;case 1:s.depthFunc(519);break;case 2:s.depthFunc(513);break;case 3:s.depthFunc(515);break;case 4:s.depthFunc(514);break;case 5:s.depthFunc(518);break;case 6:s.depthFunc(516);break;case 7:s.depthFunc(517);break;default:s.depthFunc(515)}else s.depthFunc(515);Q=fe}},setLocked:function(fe){k=fe},setClear:function(fe){Ee!==fe&&(s.clearDepth(fe),Ee=fe)},reset:function(){k=!1,be=null,Q=null,Ee=null}}}function o(){let k=!1,be=null,Q=null,Ee=null,fe=null,Qe=null,mt=null,nt=null,Vi=null;return{setTest:function(rt){k||(rt?Oe(2960):Ae(2960))},setMask:function(rt){be!==rt&&!k&&(s.stencilMask(rt),be=rt)},setFunc:function(rt,wi,Yt){(Q!==rt||Ee!==wi||fe!==Yt)&&(s.stencilFunc(rt,wi,Yt),Q=rt,Ee=wi,fe=Yt)},setOp:function(rt,wi,Yt){(Qe!==rt||mt!==wi||nt!==Yt)&&(s.stencilOp(rt,wi,Yt),Qe=rt,mt=wi,nt=Yt)},setLocked:function(rt){k=rt},setClear:function(rt){Vi!==rt&&(s.clearStencil(rt),Vi=rt)},reset:function(){k=!1,be=null,Q=null,Ee=null,fe=null,Qe=null,mt=null,nt=null,Vi=null}}}const a=new r,l=new n,c=new o,u=new WeakMap,d=new WeakMap;let h={},m={},g=new WeakMap,f=[],p=null,v=!1,_=null,b=null,x=null,S=null,E=null,R=null,y=null,A=!1,F=null,z=null,G=null,N=null,D=null;const O=s.getParameter(35661);let I=!1,V=0;const W=s.getParameter(7938);W.indexOf("WebGL")!==-1?(V=parseFloat(/^WebGL (\d)/.exec(W)[1]),I=V>=1):W.indexOf("OpenGL ES")!==-1&&(V=parseFloat(/^OpenGL ES (\d)/.exec(W)[1]),I=V>=2);let U=null,X={};const le=s.getParameter(3088),j=s.getParameter(2978),ue=new ft().fromArray(le),Me=new ft().fromArray(j);function ze(k,be,Q){const Ee=new Uint8Array(4),fe=s.createTexture();s.bindTexture(k,fe),s.texParameteri(k,10241,9728),s.texParameteri(k,10240,9728);for(let Qe=0;Qe<Q;Qe++)s.texImage2D(be+Qe,0,6408,1,1,0,6408,5121,Ee);return fe}const ee={};ee[3553]=ze(3553,3553,1),ee[34067]=ze(34067,34069,6),a.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Oe(2929),l.setFunc(3),te(!1),ne(1),Oe(2884),Y(0);function Oe(k){h[k]!==!0&&(s.enable(k),h[k]=!0)}function Ae(k){h[k]!==!1&&(s.disable(k),h[k]=!1)}function Ce(k,be){return m[k]!==be?(s.bindFramebuffer(k,be),m[k]=be,i&&(k===36009&&(m[36160]=be),k===36160&&(m[36009]=be)),!0):!1}function _e(k,be){let Q=f,Ee=!1;if(k)if(Q=g.get(be),Q===void 0&&(Q=[],g.set(be,Q)),k.isWebGLMultipleRenderTargets){const fe=k.texture;if(Q.length!==fe.length||Q[0]!==36064){for(let Qe=0,mt=fe.length;Qe<mt;Qe++)Q[Qe]=36064+Qe;Q.length=fe.length,Ee=!0}}else Q[0]!==36064&&(Q[0]=36064,Ee=!0);else Q[0]!==1029&&(Q[0]=1029,Ee=!0);Ee&&(t.isWebGL2?s.drawBuffers(Q):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Q))}function tt(k){return p!==k?(s.useProgram(k),p=k,!0):!1}const L={100:32774,101:32778,102:32779};if(i)L[103]=32775,L[104]=32776;else{const k=e.get("EXT_blend_minmax");k!==null&&(L[103]=k.MIN_EXT,L[104]=k.MAX_EXT)}const P={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function Y(k,be,Q,Ee,fe,Qe,mt,nt){if(k===0){v===!0&&(Ae(3042),v=!1);return}if(v===!1&&(Oe(3042),v=!0),k!==5){if(k!==_||nt!==A){if((b!==100||E!==100)&&(s.blendEquation(32774),b=100,E=100),nt)switch(k){case 1:s.blendFuncSeparate(1,771,1,771);break;case 2:s.blendFunc(1,1);break;case 3:s.blendFuncSeparate(0,769,0,1);break;case 4:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}else switch(k){case 1:s.blendFuncSeparate(770,771,1,771);break;case 2:s.blendFunc(770,1);break;case 3:s.blendFuncSeparate(0,769,0,1);break;case 4:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}x=null,S=null,R=null,y=null,_=k,A=nt}return}fe=fe||be,Qe=Qe||Q,mt=mt||Ee,(be!==b||fe!==E)&&(s.blendEquationSeparate(L[be],L[fe]),b=be,E=fe),(Q!==x||Ee!==S||Qe!==R||mt!==y)&&(s.blendFuncSeparate(P[Q],P[Ee],P[Qe],P[mt]),x=Q,S=Ee,R=Qe,y=mt),_=k,A=null}function se(k,be){k.side===2?Ae(2884):Oe(2884);let Q=k.side===1;be&&(Q=!Q),te(Q),k.blending===1&&k.transparent===!1?Y(0):Y(k.blending,k.blendEquation,k.blendSrc,k.blendDst,k.blendEquationAlpha,k.blendSrcAlpha,k.blendDstAlpha,k.premultipliedAlpha),l.setFunc(k.depthFunc),l.setTest(k.depthTest),l.setMask(k.depthWrite),a.setMask(k.colorWrite);const Ee=k.stencilWrite;c.setTest(Ee),Ee&&(c.setMask(k.stencilWriteMask),c.setFunc(k.stencilFunc,k.stencilRef,k.stencilFuncMask),c.setOp(k.stencilFail,k.stencilZFail,k.stencilZPass)),ae(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits),k.alphaToCoverage===!0?Oe(32926):Ae(32926)}function te(k){F!==k&&(k?s.frontFace(2304):s.frontFace(2305),F=k)}function ne(k){k!==0?(Oe(2884),k!==z&&(k===1?s.cullFace(1029):k===2?s.cullFace(1028):s.cullFace(1032))):Ae(2884),z=k}function he(k){k!==G&&(I&&s.lineWidth(k),G=k)}function ae(k,be,Q){k?(Oe(32823),(N!==be||D!==Q)&&(s.polygonOffset(be,Q),N=be,D=Q)):Ae(32823)}function de(k){k?Oe(3089):Ae(3089)}function oe(k){k===void 0&&(k=33984+O-1),U!==k&&(s.activeTexture(k),U=k)}function T(k,be){U===null&&oe();let Q=X[U];Q===void 0&&(Q={type:void 0,texture:void 0},X[U]=Q),(Q.type!==k||Q.texture!==be)&&(s.bindTexture(k,be||ee[k]),Q.type=k,Q.texture=be)}function M(){const k=X[U];k!==void 0&&k.type!==void 0&&(s.bindTexture(k.type,null),k.type=void 0,k.texture=void 0)}function B(){try{s.compressedTexImage2D.apply(s,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function K(){try{s.texSubImage2D.apply(s,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ie(){try{s.texSubImage3D.apply(s,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ce(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ge(){try{s.texStorage2D.apply(s,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Z(){try{s.texStorage3D.apply(s,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ye(){try{s.texImage2D.apply(s,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function ve(){try{s.texImage3D.apply(s,arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Se(k){ue.equals(k)===!1&&(s.scissor(k.x,k.y,k.z,k.w),ue.copy(k))}function xe(k){Me.equals(k)===!1&&(s.viewport(k.x,k.y,k.z,k.w),Me.copy(k))}function Pe(k,be){let Q=d.get(be);Q===void 0&&(Q=new WeakMap,d.set(be,Q));let Ee=Q.get(k);Ee===void 0&&(Ee=s.getUniformBlockIndex(be,k.name),Q.set(k,Ee))}function Le(k,be){const Q=d.get(be).get(k);u.get(k)!==Q&&(s.uniformBlockBinding(be,Q,k.__bindingPointIndex),u.set(k,Q))}function Ve(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),i===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),h={},U=null,X={},m={},g=new WeakMap,f=[],p=null,v=!1,_=null,b=null,x=null,S=null,E=null,R=null,y=null,A=!1,F=null,z=null,G=null,N=null,D=null,ue.set(0,0,s.canvas.width,s.canvas.height),Me.set(0,0,s.canvas.width,s.canvas.height),a.reset(),l.reset(),c.reset()}return{buffers:{color:a,depth:l,stencil:c},enable:Oe,disable:Ae,bindFramebuffer:Ce,drawBuffers:_e,useProgram:tt,setBlending:Y,setMaterial:se,setFlipSided:te,setCullFace:ne,setLineWidth:he,setPolygonOffset:ae,setScissorTest:de,activeTexture:oe,bindTexture:T,unbindTexture:M,compressedTexImage2D:B,texImage2D:ye,texImage3D:ve,updateUBOMapping:Pe,uniformBlockBinding:Le,texStorage2D:ge,texStorage3D:Z,texSubImage2D:K,texSubImage3D:ie,compressedTexSubImage2D:ce,scissor:Se,viewport:xe,reset:Ve}}function X2(s,e,t,i,r,n,o){const a=r.isWebGL2,l=r.maxTextures,c=r.maxCubemapSize,u=r.maxTextureSize,d=r.maxSamples,h=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,m=/OculusBrowser/g.test(navigator.userAgent),g=new WeakMap;let f;const p=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(T,M){return v?new OffscreenCanvas(T,M):zn("canvas")}function b(T,M,B,K){let ie=1;if((T.width>K||T.height>K)&&(ie=K/Math.max(T.width,T.height)),ie<1||M===!0)if(typeof HTMLImageElement<"u"&&T instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&T instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&T instanceof ImageBitmap){const ce=M?oo:Math.floor,ge=ce(ie*T.width),Z=ce(ie*T.height);f===void 0&&(f=_(ge,Z));const ye=B?_(ge,Z):f;return ye.width=ge,ye.height=Z,ye.getContext("2d").drawImage(T,0,0,ge,Z),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+T.width+"x"+T.height+") to ("+ge+"x"+Z+")."),ye}else return"data"in T&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+T.width+"x"+T.height+")."),T;return T}function x(T){return pl(T.width)&&pl(T.height)}function S(T){return a?!1:T.wrapS!==1001||T.wrapT!==1001||T.minFilter!==1003&&T.minFilter!==1006}function E(T,M){return T.generateMipmaps&&M&&T.minFilter!==1003&&T.minFilter!==1006}function R(T){s.generateMipmap(T)}function y(T,M,B,K,ie=!1){if(a===!1)return M;if(T!==null){if(s[T]!==void 0)return s[T];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+T+"'")}let ce=M;return M===6403&&(B===5126&&(ce=33326),B===5131&&(ce=33325),B===5121&&(ce=33321)),M===33319&&(B===5126&&(ce=33328),B===5131&&(ce=33327),B===5121&&(ce=33323)),M===6408&&(B===5126&&(ce=34836),B===5131&&(ce=34842),B===5121&&(ce=K===3001&&ie===!1?35907:32856),B===32819&&(ce=32854),B===32820&&(ce=32855)),(ce===33325||ce===33326||ce===33327||ce===33328||ce===34842||ce===34836)&&e.get("EXT_color_buffer_float"),ce}function A(T,M,B){return E(T,B)===!0||T.isFramebufferTexture&&T.minFilter!==1003&&T.minFilter!==1006?Math.log2(Math.max(M.width,M.height))+1:T.mipmaps!==void 0&&T.mipmaps.length>0?T.mipmaps.length:T.isCompressedTexture&&Array.isArray(T.image)?M.mipmaps.length:1}function F(T){return T===1003||T===1004||T===1005?9728:9729}function z(T){const M=T.target;M.removeEventListener("dispose",z),N(M),M.isVideoTexture&&g.delete(M)}function G(T){const M=T.target;M.removeEventListener("dispose",G),O(M)}function N(T){const M=i.get(T);if(M.__webglInit===void 0)return;const B=T.source,K=p.get(B);if(K){const ie=K[M.__cacheKey];ie.usedTimes--,ie.usedTimes===0&&D(T),Object.keys(K).length===0&&p.delete(B)}i.remove(T)}function D(T){const M=i.get(T);s.deleteTexture(M.__webglTexture);const B=T.source,K=p.get(B);delete K[M.__cacheKey],o.memory.textures--}function O(T){const M=T.texture,B=i.get(T),K=i.get(M);if(K.__webglTexture!==void 0&&(s.deleteTexture(K.__webglTexture),o.memory.textures--),T.depthTexture&&T.depthTexture.dispose(),T.isWebGLCubeRenderTarget)for(let ie=0;ie<6;ie++)s.deleteFramebuffer(B.__webglFramebuffer[ie]),B.__webglDepthbuffer&&s.deleteRenderbuffer(B.__webglDepthbuffer[ie]);else{if(s.deleteFramebuffer(B.__webglFramebuffer),B.__webglDepthbuffer&&s.deleteRenderbuffer(B.__webglDepthbuffer),B.__webglMultisampledFramebuffer&&s.deleteFramebuffer(B.__webglMultisampledFramebuffer),B.__webglColorRenderbuffer)for(let ie=0;ie<B.__webglColorRenderbuffer.length;ie++)B.__webglColorRenderbuffer[ie]&&s.deleteRenderbuffer(B.__webglColorRenderbuffer[ie]);B.__webglDepthRenderbuffer&&s.deleteRenderbuffer(B.__webglDepthRenderbuffer)}if(T.isWebGLMultipleRenderTargets)for(let ie=0,ce=M.length;ie<ce;ie++){const ge=i.get(M[ie]);ge.__webglTexture&&(s.deleteTexture(ge.__webglTexture),o.memory.textures--),i.remove(M[ie])}i.remove(M),i.remove(T)}let I=0;function V(){I=0}function W(){const T=I;return T>=l&&console.warn("THREE.WebGLTextures: Trying to use "+T+" texture units while this GPU supports only "+l),I+=1,T}function U(T){const M=[];return M.push(T.wrapS),M.push(T.wrapT),M.push(T.magFilter),M.push(T.minFilter),M.push(T.anisotropy),M.push(T.internalFormat),M.push(T.format),M.push(T.type),M.push(T.generateMipmaps),M.push(T.premultiplyAlpha),M.push(T.flipY),M.push(T.unpackAlignment),M.push(T.encoding),M.join()}function X(T,M){const B=i.get(T);if(T.isVideoTexture&&de(T),T.isRenderTargetTexture===!1&&T.version>0&&B.__version!==T.version){const K=T.image;if(K===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(K.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ae(B,T,M);return}}t.activeTexture(33984+M),t.bindTexture(3553,B.__webglTexture)}function le(T,M){const B=i.get(T);if(T.version>0&&B.__version!==T.version){Ae(B,T,M);return}t.activeTexture(33984+M),t.bindTexture(35866,B.__webglTexture)}function j(T,M){const B=i.get(T);if(T.version>0&&B.__version!==T.version){Ae(B,T,M);return}t.activeTexture(33984+M),t.bindTexture(32879,B.__webglTexture)}function ue(T,M){const B=i.get(T);if(T.version>0&&B.__version!==T.version){Ce(B,T,M);return}t.activeTexture(33984+M),t.bindTexture(34067,B.__webglTexture)}const Me={1e3:10497,1001:33071,1002:33648},ze={1003:9728,1004:9984,1005:9986,1006:9729,1007:9985,1008:9987};function ee(T,M,B){if(B?(s.texParameteri(T,10242,Me[M.wrapS]),s.texParameteri(T,10243,Me[M.wrapT]),(T===32879||T===35866)&&s.texParameteri(T,32882,Me[M.wrapR]),s.texParameteri(T,10240,ze[M.magFilter]),s.texParameteri(T,10241,ze[M.minFilter])):(s.texParameteri(T,10242,33071),s.texParameteri(T,10243,33071),(T===32879||T===35866)&&s.texParameteri(T,32882,33071),(M.wrapS!==1001||M.wrapT!==1001)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(T,10240,F(M.magFilter)),s.texParameteri(T,10241,F(M.minFilter)),M.minFilter!==1003&&M.minFilter!==1006&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const K=e.get("EXT_texture_filter_anisotropic");if(M.type===1015&&e.has("OES_texture_float_linear")===!1||a===!1&&M.type===1016&&e.has("OES_texture_half_float_linear")===!1)return;(M.anisotropy>1||i.get(M).__currentAnisotropy)&&(s.texParameterf(T,K.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(M.anisotropy,r.getMaxAnisotropy())),i.get(M).__currentAnisotropy=M.anisotropy)}}function Oe(T,M){let B=!1;T.__webglInit===void 0&&(T.__webglInit=!0,M.addEventListener("dispose",z));const K=M.source;let ie=p.get(K);ie===void 0&&(ie={},p.set(K,ie));const ce=U(M);if(ce!==T.__cacheKey){ie[ce]===void 0&&(ie[ce]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,B=!0),ie[ce].usedTimes++;const ge=ie[T.__cacheKey];ge!==void 0&&(ie[T.__cacheKey].usedTimes--,ge.usedTimes===0&&D(M)),T.__cacheKey=ce,T.__webglTexture=ie[ce].texture}return B}function Ae(T,M,B){let K=3553;M.isDataArrayTexture&&(K=35866),M.isData3DTexture&&(K=32879);const ie=Oe(T,M),ce=M.source;if(t.activeTexture(33984+B),t.bindTexture(K,T.__webglTexture),ce.version!==ce.__currentVersion||ie===!0){s.pixelStorei(37440,M.flipY),s.pixelStorei(37441,M.premultiplyAlpha),s.pixelStorei(3317,M.unpackAlignment),s.pixelStorei(37443,0);const ge=S(M)&&x(M.image)===!1;let Z=b(M.image,ge,!1,u);Z=oe(M,Z);const ye=x(Z)||a,ve=n.convert(M.format,M.encoding);let Se=n.convert(M.type),xe=y(M.internalFormat,ve,Se,M.encoding,M.isVideoTexture);ee(K,M,ye);let Pe;const Le=M.mipmaps,Ve=a&&M.isVideoTexture!==!0,k=ce.__currentVersion===void 0||ie===!0,be=A(M,Z,ye);if(M.isDepthTexture)xe=6402,a?M.type===1015?xe=36012:M.type===1014?xe=33190:M.type===1020?xe=35056:xe=33189:M.type===1015&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),M.format===1026&&xe===6402&&M.type!==1012&&M.type!==1014&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),M.type=1014,Se=n.convert(M.type)),M.format===1027&&xe===6402&&(xe=34041,M.type!==1020&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),M.type=1020,Se=n.convert(M.type))),k&&(Ve?t.texStorage2D(3553,1,xe,Z.width,Z.height):t.texImage2D(3553,0,xe,Z.width,Z.height,0,ve,Se,null));else if(M.isDataTexture)if(Le.length>0&&ye){Ve&&k&&t.texStorage2D(3553,be,xe,Le[0].width,Le[0].height);for(let Q=0,Ee=Le.length;Q<Ee;Q++)Pe=Le[Q],Ve?t.texSubImage2D(3553,Q,0,0,Pe.width,Pe.height,ve,Se,Pe.data):t.texImage2D(3553,Q,xe,Pe.width,Pe.height,0,ve,Se,Pe.data);M.generateMipmaps=!1}else Ve?(k&&t.texStorage2D(3553,be,xe,Z.width,Z.height),t.texSubImage2D(3553,0,0,0,Z.width,Z.height,ve,Se,Z.data)):t.texImage2D(3553,0,xe,Z.width,Z.height,0,ve,Se,Z.data);else if(M.isCompressedTexture){Ve&&k&&t.texStorage2D(3553,be,xe,Le[0].width,Le[0].height);for(let Q=0,Ee=Le.length;Q<Ee;Q++)Pe=Le[Q],M.format!==1023?ve!==null?Ve?t.compressedTexSubImage2D(3553,Q,0,0,Pe.width,Pe.height,ve,Pe.data):t.compressedTexImage2D(3553,Q,xe,Pe.width,Pe.height,0,Pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ve?t.texSubImage2D(3553,Q,0,0,Pe.width,Pe.height,ve,Se,Pe.data):t.texImage2D(3553,Q,xe,Pe.width,Pe.height,0,ve,Se,Pe.data)}else if(M.isDataArrayTexture)Ve?(k&&t.texStorage3D(35866,be,xe,Z.width,Z.height,Z.depth),t.texSubImage3D(35866,0,0,0,0,Z.width,Z.height,Z.depth,ve,Se,Z.data)):t.texImage3D(35866,0,xe,Z.width,Z.height,Z.depth,0,ve,Se,Z.data);else if(M.isData3DTexture)Ve?(k&&t.texStorage3D(32879,be,xe,Z.width,Z.height,Z.depth),t.texSubImage3D(32879,0,0,0,0,Z.width,Z.height,Z.depth,ve,Se,Z.data)):t.texImage3D(32879,0,xe,Z.width,Z.height,Z.depth,0,ve,Se,Z.data);else if(M.isFramebufferTexture){if(k)if(Ve)t.texStorage2D(3553,be,xe,Z.width,Z.height);else{let Q=Z.width,Ee=Z.height;for(let fe=0;fe<be;fe++)t.texImage2D(3553,fe,xe,Q,Ee,0,ve,Se,null),Q>>=1,Ee>>=1}}else if(Le.length>0&&ye){Ve&&k&&t.texStorage2D(3553,be,xe,Le[0].width,Le[0].height);for(let Q=0,Ee=Le.length;Q<Ee;Q++)Pe=Le[Q],Ve?t.texSubImage2D(3553,Q,0,0,ve,Se,Pe):t.texImage2D(3553,Q,xe,ve,Se,Pe);M.generateMipmaps=!1}else Ve?(k&&t.texStorage2D(3553,be,xe,Z.width,Z.height),t.texSubImage2D(3553,0,0,0,ve,Se,Z)):t.texImage2D(3553,0,xe,ve,Se,Z);E(M,ye)&&R(K),ce.__currentVersion=ce.version,M.onUpdate&&M.onUpdate(M)}T.__version=M.version}function Ce(T,M,B){if(M.image.length!==6)return;const K=Oe(T,M),ie=M.source;if(t.activeTexture(33984+B),t.bindTexture(34067,T.__webglTexture),ie.version!==ie.__currentVersion||K===!0){s.pixelStorei(37440,M.flipY),s.pixelStorei(37441,M.premultiplyAlpha),s.pixelStorei(3317,M.unpackAlignment),s.pixelStorei(37443,0);const ce=M.isCompressedTexture||M.image[0].isCompressedTexture,ge=M.image[0]&&M.image[0].isDataTexture,Z=[];for(let Q=0;Q<6;Q++)!ce&&!ge?Z[Q]=b(M.image[Q],!1,!0,c):Z[Q]=ge?M.image[Q].image:M.image[Q],Z[Q]=oe(M,Z[Q]);const ye=Z[0],ve=x(ye)||a,Se=n.convert(M.format,M.encoding),xe=n.convert(M.type),Pe=y(M.internalFormat,Se,xe,M.encoding),Le=a&&M.isVideoTexture!==!0,Ve=ie.__currentVersion===void 0||K===!0;let k=A(M,ye,ve);ee(34067,M,ve);let be;if(ce){Le&&Ve&&t.texStorage2D(34067,k,Pe,ye.width,ye.height);for(let Q=0;Q<6;Q++){be=Z[Q].mipmaps;for(let Ee=0;Ee<be.length;Ee++){const fe=be[Ee];M.format!==1023?Se!==null?Le?t.compressedTexSubImage2D(34069+Q,Ee,0,0,fe.width,fe.height,Se,fe.data):t.compressedTexImage2D(34069+Q,Ee,Pe,fe.width,fe.height,0,fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Le?t.texSubImage2D(34069+Q,Ee,0,0,fe.width,fe.height,Se,xe,fe.data):t.texImage2D(34069+Q,Ee,Pe,fe.width,fe.height,0,Se,xe,fe.data)}}}else{be=M.mipmaps,Le&&Ve&&(be.length>0&&k++,t.texStorage2D(34067,k,Pe,Z[0].width,Z[0].height));for(let Q=0;Q<6;Q++)if(ge){Le?t.texSubImage2D(34069+Q,0,0,0,Z[Q].width,Z[Q].height,Se,xe,Z[Q].data):t.texImage2D(34069+Q,0,Pe,Z[Q].width,Z[Q].height,0,Se,xe,Z[Q].data);for(let Ee=0;Ee<be.length;Ee++){const fe=be[Ee].image[Q].image;Le?t.texSubImage2D(34069+Q,Ee+1,0,0,fe.width,fe.height,Se,xe,fe.data):t.texImage2D(34069+Q,Ee+1,Pe,fe.width,fe.height,0,Se,xe,fe.data)}}else{Le?t.texSubImage2D(34069+Q,0,0,0,Se,xe,Z[Q]):t.texImage2D(34069+Q,0,Pe,Se,xe,Z[Q]);for(let Ee=0;Ee<be.length;Ee++){const fe=be[Ee];Le?t.texSubImage2D(34069+Q,Ee+1,0,0,Se,xe,fe.image[Q]):t.texImage2D(34069+Q,Ee+1,Pe,Se,xe,fe.image[Q])}}}E(M,ve)&&R(34067),ie.__currentVersion=ie.version,M.onUpdate&&M.onUpdate(M)}T.__version=M.version}function _e(T,M,B,K,ie){const ce=n.convert(B.format,B.encoding),ge=n.convert(B.type),Z=y(B.internalFormat,ce,ge,B.encoding);i.get(M).__hasExternalTextures||(ie===32879||ie===35866?t.texImage3D(ie,0,Z,M.width,M.height,M.depth,0,ce,ge,null):t.texImage2D(ie,0,Z,M.width,M.height,0,ce,ge,null)),t.bindFramebuffer(36160,T),ae(M)?h.framebufferTexture2DMultisampleEXT(36160,K,ie,i.get(B).__webglTexture,0,he(M)):s.framebufferTexture2D(36160,K,ie,i.get(B).__webglTexture,0),t.bindFramebuffer(36160,null)}function tt(T,M,B){if(s.bindRenderbuffer(36161,T),M.depthBuffer&&!M.stencilBuffer){let K=33189;if(B||ae(M)){const ie=M.depthTexture;ie&&ie.isDepthTexture&&(ie.type===1015?K=36012:ie.type===1014&&(K=33190));const ce=he(M);ae(M)?h.renderbufferStorageMultisampleEXT(36161,ce,K,M.width,M.height):s.renderbufferStorageMultisample(36161,ce,K,M.width,M.height)}else s.renderbufferStorage(36161,K,M.width,M.height);s.framebufferRenderbuffer(36160,36096,36161,T)}else if(M.depthBuffer&&M.stencilBuffer){const K=he(M);B&&ae(M)===!1?s.renderbufferStorageMultisample(36161,K,35056,M.width,M.height):ae(M)?h.renderbufferStorageMultisampleEXT(36161,K,35056,M.width,M.height):s.renderbufferStorage(36161,34041,M.width,M.height),s.framebufferRenderbuffer(36160,33306,36161,T)}else{const K=M.isWebGLMultipleRenderTargets===!0?M.texture:[M.texture];for(let ie=0;ie<K.length;ie++){const ce=K[ie],ge=n.convert(ce.format,ce.encoding),Z=n.convert(ce.type),ye=y(ce.internalFormat,ge,Z,ce.encoding),ve=he(M);B&&ae(M)===!1?s.renderbufferStorageMultisample(36161,ve,ye,M.width,M.height):ae(M)?h.renderbufferStorageMultisampleEXT(36161,ve,ye,M.width,M.height):s.renderbufferStorage(36161,ye,M.width,M.height)}}s.bindRenderbuffer(36161,null)}function L(T,M){if(M&&M.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,T),!(M.depthTexture&&M.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(M.depthTexture).__webglTexture||M.depthTexture.image.width!==M.width||M.depthTexture.image.height!==M.height)&&(M.depthTexture.image.width=M.width,M.depthTexture.image.height=M.height,M.depthTexture.needsUpdate=!0),X(M.depthTexture,0);const B=i.get(M.depthTexture).__webglTexture,K=he(M);if(M.depthTexture.format===1026)ae(M)?h.framebufferTexture2DMultisampleEXT(36160,36096,3553,B,0,K):s.framebufferTexture2D(36160,36096,3553,B,0);else if(M.depthTexture.format===1027)ae(M)?h.framebufferTexture2DMultisampleEXT(36160,33306,3553,B,0,K):s.framebufferTexture2D(36160,33306,3553,B,0);else throw new Error("Unknown depthTexture format")}function P(T){const M=i.get(T),B=T.isWebGLCubeRenderTarget===!0;if(T.depthTexture&&!M.__autoAllocateDepthBuffer){if(B)throw new Error("target.depthTexture not supported in Cube render targets");L(M.__webglFramebuffer,T)}else if(B){M.__webglDepthbuffer=[];for(let K=0;K<6;K++)t.bindFramebuffer(36160,M.__webglFramebuffer[K]),M.__webglDepthbuffer[K]=s.createRenderbuffer(),tt(M.__webglDepthbuffer[K],T,!1)}else t.bindFramebuffer(36160,M.__webglFramebuffer),M.__webglDepthbuffer=s.createRenderbuffer(),tt(M.__webglDepthbuffer,T,!1);t.bindFramebuffer(36160,null)}function Y(T,M,B){const K=i.get(T);M!==void 0&&_e(K.__webglFramebuffer,T,T.texture,36064,3553),B!==void 0&&P(T)}function se(T){const M=T.texture,B=i.get(T),K=i.get(M);T.addEventListener("dispose",G),T.isWebGLMultipleRenderTargets!==!0&&(K.__webglTexture===void 0&&(K.__webglTexture=s.createTexture()),K.__version=M.version,o.memory.textures++);const ie=T.isWebGLCubeRenderTarget===!0,ce=T.isWebGLMultipleRenderTargets===!0,ge=x(T)||a;if(ie){B.__webglFramebuffer=[];for(let Z=0;Z<6;Z++)B.__webglFramebuffer[Z]=s.createFramebuffer()}else{if(B.__webglFramebuffer=s.createFramebuffer(),ce)if(r.drawBuffers){const Z=T.texture;for(let ye=0,ve=Z.length;ye<ve;ye++){const Se=i.get(Z[ye]);Se.__webglTexture===void 0&&(Se.__webglTexture=s.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(a&&T.samples>0&&ae(T)===!1){const Z=ce?M:[M];B.__webglMultisampledFramebuffer=s.createFramebuffer(),B.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,B.__webglMultisampledFramebuffer);for(let ye=0;ye<Z.length;ye++){const ve=Z[ye];B.__webglColorRenderbuffer[ye]=s.createRenderbuffer(),s.bindRenderbuffer(36161,B.__webglColorRenderbuffer[ye]);const Se=n.convert(ve.format,ve.encoding),xe=n.convert(ve.type),Pe=y(ve.internalFormat,Se,xe,ve.encoding),Le=he(T);s.renderbufferStorageMultisample(36161,Le,Pe,T.width,T.height),s.framebufferRenderbuffer(36160,36064+ye,36161,B.__webglColorRenderbuffer[ye])}s.bindRenderbuffer(36161,null),T.depthBuffer&&(B.__webglDepthRenderbuffer=s.createRenderbuffer(),tt(B.__webglDepthRenderbuffer,T,!0)),t.bindFramebuffer(36160,null)}}if(ie){t.bindTexture(34067,K.__webglTexture),ee(34067,M,ge);for(let Z=0;Z<6;Z++)_e(B.__webglFramebuffer[Z],T,M,36064,34069+Z);E(M,ge)&&R(34067),t.unbindTexture()}else if(ce){const Z=T.texture;for(let ye=0,ve=Z.length;ye<ve;ye++){const Se=Z[ye],xe=i.get(Se);t.bindTexture(3553,xe.__webglTexture),ee(3553,Se,ge),_e(B.__webglFramebuffer,T,Se,36064+ye,3553),E(Se,ge)&&R(3553)}t.unbindTexture()}else{let Z=3553;(T.isWebGL3DRenderTarget||T.isWebGLArrayRenderTarget)&&(a?Z=T.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Z,K.__webglTexture),ee(Z,M,ge),_e(B.__webglFramebuffer,T,M,36064,Z),E(M,ge)&&R(Z),t.unbindTexture()}T.depthBuffer&&P(T)}function te(T){const M=x(T)||a,B=T.isWebGLMultipleRenderTargets===!0?T.texture:[T.texture];for(let K=0,ie=B.length;K<ie;K++){const ce=B[K];if(E(ce,M)){const ge=T.isWebGLCubeRenderTarget?34067:3553,Z=i.get(ce).__webglTexture;t.bindTexture(ge,Z),R(ge),t.unbindTexture()}}}function ne(T){if(a&&T.samples>0&&ae(T)===!1){const M=T.isWebGLMultipleRenderTargets?T.texture:[T.texture],B=T.width,K=T.height;let ie=16384;const ce=[],ge=T.stencilBuffer?33306:36096,Z=i.get(T),ye=T.isWebGLMultipleRenderTargets===!0;if(ye)for(let ve=0;ve<M.length;ve++)t.bindFramebuffer(36160,Z.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+ve,36161,null),t.bindFramebuffer(36160,Z.__webglFramebuffer),s.framebufferTexture2D(36009,36064+ve,3553,null,0);t.bindFramebuffer(36008,Z.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Z.__webglFramebuffer);for(let ve=0;ve<M.length;ve++){ce.push(36064+ve),T.depthBuffer&&ce.push(ge);const Se=Z.__ignoreDepthValues!==void 0?Z.__ignoreDepthValues:!1;if(Se===!1&&(T.depthBuffer&&(ie|=256),T.stencilBuffer&&(ie|=1024)),ye&&s.framebufferRenderbuffer(36008,36064,36161,Z.__webglColorRenderbuffer[ve]),Se===!0&&(s.invalidateFramebuffer(36008,[ge]),s.invalidateFramebuffer(36009,[ge])),ye){const xe=i.get(M[ve]).__webglTexture;s.framebufferTexture2D(36009,36064,3553,xe,0)}s.blitFramebuffer(0,0,B,K,0,0,B,K,ie,9728),m&&s.invalidateFramebuffer(36008,ce)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),ye)for(let ve=0;ve<M.length;ve++){t.bindFramebuffer(36160,Z.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+ve,36161,Z.__webglColorRenderbuffer[ve]);const Se=i.get(M[ve]).__webglTexture;t.bindFramebuffer(36160,Z.__webglFramebuffer),s.framebufferTexture2D(36009,36064+ve,3553,Se,0)}t.bindFramebuffer(36009,Z.__webglMultisampledFramebuffer)}}function he(T){return Math.min(d,T.samples)}function ae(T){const M=i.get(T);return a&&T.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&M.__useRenderToTexture!==!1}function de(T){const M=o.render.frame;g.get(T)!==M&&(g.set(T,M),T.update())}function oe(T,M){const B=T.encoding,K=T.format,ie=T.type;return T.isCompressedTexture===!0||T.isVideoTexture===!0||T.format===1035||B!==3e3&&(B===3001?a===!1?e.has("EXT_sRGB")===!0&&K===1023?(T.format=1035,T.minFilter=1006,T.generateMipmaps=!1):M=Eu.sRGBToLinear(M):(K!==1023||ie!==1009)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",B)),M}this.allocateTextureUnit=W,this.resetTextureUnits=V,this.setTexture2D=X,this.setTexture2DArray=le,this.setTexture3D=j,this.setTextureCube=ue,this.rebindTextures=Y,this.setupRenderTarget=se,this.updateRenderTargetMipmap=te,this.updateMultisampleRenderTarget=ne,this.setupDepthRenderbuffer=P,this.setupFrameBufferTexture=_e,this.useMultisampledRTT=ae}function $2(s,e,t){const i=t.isWebGL2;function r(n,o=null){let a;if(n===1009)return 5121;if(n===1017)return 32819;if(n===1018)return 32820;if(n===1010)return 5120;if(n===1011)return 5122;if(n===1012)return 5123;if(n===1013)return 5124;if(n===1014)return 5125;if(n===1015)return 5126;if(n===1016)return i?5131:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(n===1021)return 6406;if(n===1023)return 6408;if(n===1024)return 6409;if(n===1025)return 6410;if(n===1026)return 6402;if(n===1027)return 34041;if(n===1028)return 6403;if(n===1022)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(n===1035)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(n===1029)return 36244;if(n===1030)return 33319;if(n===1031)return 33320;if(n===1033)return 36249;if(n===33776||n===33777||n===33778||n===33779)if(o===3001)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(n===33776)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===33777)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===33778)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===33779)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(n===33776)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===33777)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===33778)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===33779)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===35840||n===35841||n===35842||n===35843)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(n===35840)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===35841)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===35842)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===35843)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===36196)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(n===37492||n===37496)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(n===37492)return o===3001?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(n===37496)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===37808||n===37809||n===37810||n===37811||n===37812||n===37813||n===37814||n===37815||n===37816||n===37817||n===37818||n===37819||n===37820||n===37821)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(n===37808)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===37809)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===37810)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===37811)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===37812)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===37813)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===37814)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===37815)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===37816)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===37817)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===37818)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===37819)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===37820)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===37821)return o===3001?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===36492)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(n===36492)return o===3001?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return n===1020?i?34042:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null):s[n]!==void 0?s[n]:null}return{convert:r}}class Z2 extends Vt{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class gn extends Rt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const K2={type:"move"};class Ba{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new gn,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new gn,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new H,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new H),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new gn,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new H,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new H),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let r=null,n=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const f of e.hand.values()){const p=t.getJointPose(f,i);if(c.joints[f.jointName]===void 0){const _=new gn;_.matrixAutoUpdate=!1,_.visible=!1,c.joints[f.jointName]=_,c.add(_)}const v=c.joints[f.jointName];p!==null&&(v.matrix.fromArray(p.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.jointRadius=p.radius),v.visible=p!==null}const u=c.joints["index-finger-tip"],d=c.joints["thumb-tip"],h=u.position.distanceTo(d.position),m=.02,g=.005;c.inputState.pinching&&h>m+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&h<=m-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(n=t.getPose(e.gripSpace,i),n!==null&&(l.matrix.fromArray(n.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),n.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(n.linearVelocity)):l.hasLinearVelocity=!1,n.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(n.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(r=t.getPose(e.targetRaySpace,i),r===null&&n!==null&&(r=n),r!==null&&(a.matrix.fromArray(r.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),r.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(r.linearVelocity)):a.hasLinearVelocity=!1,r.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(r.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(K2)))}return a!==null&&(a.visible=r!==null),l!==null&&(l.visible=n!==null),c!==null&&(c.visible=o!==null),this}}class J2 extends jt{constructor(e,t,i,r,n,o,a,l,c,u){if(u=u!==void 0?u:1026,u!==1026&&u!==1027)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&u===1026&&(i=1014),i===void 0&&u===1027&&(i=1020),super(null,r,n,o,a,l,u,i,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=a!==void 0?a:1003,this.minFilter=l!==void 0?l:1003,this.flipY=!1,this.generateMipmaps=!1}}class Q2 extends ns{constructor(e,t){super();const i=this;let r=null,n=1,o=null,a="local-floor",l=null,c=null,u=null,d=null,h=null,m=null;const g=t.getContextAttributes();let f=null,p=null;const v=[],_=[],b=new Vt;b.layers.enable(1),b.viewport=new ft;const x=new Vt;x.layers.enable(2),x.viewport=new ft;const S=[b,x],E=new Z2;E.layers.enable(1),E.layers.enable(2);let R=null,y=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(U){let X=v[U];return X===void 0&&(X=new Ba,v[U]=X),X.getTargetRaySpace()},this.getControllerGrip=function(U){let X=v[U];return X===void 0&&(X=new Ba,v[U]=X),X.getGripSpace()},this.getHand=function(U){let X=v[U];return X===void 0&&(X=new Ba,v[U]=X),X.getHandSpace()};function A(U){const X=_.indexOf(U.inputSource);if(X===-1)return;const le=v[X];le!==void 0&&le.dispatchEvent({type:U.type,data:U.inputSource})}function F(){r.removeEventListener("select",A),r.removeEventListener("selectstart",A),r.removeEventListener("selectend",A),r.removeEventListener("squeeze",A),r.removeEventListener("squeezestart",A),r.removeEventListener("squeezeend",A),r.removeEventListener("end",F),r.removeEventListener("inputsourceschange",z);for(let U=0;U<v.length;U++){const X=_[U];X!==null&&(_[U]=null,v[U].disconnect(X))}R=null,y=null,e.setRenderTarget(f),h=null,d=null,u=null,r=null,p=null,W.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(U){n=U,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(U){a=U,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(U){l=U},this.getBaseLayer=function(){return d!==null?d:h},this.getBinding=function(){return u},this.getFrame=function(){return m},this.getSession=function(){return r},this.setSession=async function(U){if(r=U,r!==null){if(f=e.getRenderTarget(),r.addEventListener("select",A),r.addEventListener("selectstart",A),r.addEventListener("selectend",A),r.addEventListener("squeeze",A),r.addEventListener("squeezestart",A),r.addEventListener("squeezeend",A),r.addEventListener("end",F),r.addEventListener("inputsourceschange",z),g.xrCompatible!==!0&&await t.makeXRCompatible(),r.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const X={antialias:r.renderState.layers===void 0?g.antialias:!0,alpha:g.alpha,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:n};h=new XRWebGLLayer(r,t,X),r.updateRenderState({baseLayer:h}),p=new Er(h.framebufferWidth,h.framebufferHeight,{format:1023,type:1009,encoding:e.outputEncoding})}else{let X=null,le=null,j=null;g.depth&&(j=g.stencil?35056:33190,X=g.stencil?1027:1026,le=g.stencil?1020:1014);const ue={colorFormat:32856,depthFormat:j,scaleFactor:n};u=new XRWebGLBinding(r,t),d=u.createProjectionLayer(ue),r.updateRenderState({layers:[d]}),p=new Er(d.textureWidth,d.textureHeight,{format:1023,type:1009,depthTexture:new J2(d.textureWidth,d.textureHeight,le,void 0,void 0,void 0,void 0,void 0,void 0,X),stencilBuffer:g.stencil,encoding:e.outputEncoding,samples:g.antialias?4:0});const Me=e.properties.get(p);Me.__ignoreDepthValues=d.ignoreDepthValues}p.isXRRenderTarget=!0,this.setFoveation(1),l=null,o=await r.requestReferenceSpace(a),W.setContext(r),W.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}};function z(U){for(let X=0;X<U.removed.length;X++){const le=U.removed[X],j=_.indexOf(le);j>=0&&(_[j]=null,v[j].dispatchEvent({type:"disconnected",data:le}))}for(let X=0;X<U.added.length;X++){const le=U.added[X];let j=_.indexOf(le);if(j===-1){for(let Me=0;Me<v.length;Me++)if(Me>=_.length){_.push(le),j=Me;break}else if(_[Me]===null){_[Me]=le,j=Me;break}if(j===-1)break}const ue=v[j];ue&&ue.dispatchEvent({type:"connected",data:le})}}const G=new H,N=new H;function D(U,X,le){G.setFromMatrixPosition(X.matrixWorld),N.setFromMatrixPosition(le.matrixWorld);const j=G.distanceTo(N),ue=X.projectionMatrix.elements,Me=le.projectionMatrix.elements,ze=ue[14]/(ue[10]-1),ee=ue[14]/(ue[10]+1),Oe=(ue[9]+1)/ue[5],Ae=(ue[9]-1)/ue[5],Ce=(ue[8]-1)/ue[0],_e=(Me[8]+1)/Me[0],tt=ze*Ce,L=ze*_e,P=j/(-Ce+_e),Y=P*-Ce;X.matrixWorld.decompose(U.position,U.quaternion,U.scale),U.translateX(Y),U.translateZ(P),U.matrixWorld.compose(U.position,U.quaternion,U.scale),U.matrixWorldInverse.copy(U.matrixWorld).invert();const se=ze+P,te=ee+P,ne=tt-Y,he=L+(j-Y),ae=Oe*ee/te*se,de=Ae*ee/te*se;U.projectionMatrix.makePerspective(ne,he,ae,de,se,te)}function O(U,X){X===null?U.matrixWorld.copy(U.matrix):U.matrixWorld.multiplyMatrices(X.matrixWorld,U.matrix),U.matrixWorldInverse.copy(U.matrixWorld).invert()}this.updateCamera=function(U){if(r===null)return;E.near=x.near=b.near=U.near,E.far=x.far=b.far=U.far,(R!==E.near||y!==E.far)&&(r.updateRenderState({depthNear:E.near,depthFar:E.far}),R=E.near,y=E.far);const X=U.parent,le=E.cameras;O(E,X);for(let ue=0;ue<le.length;ue++)O(le[ue],X);E.matrixWorld.decompose(E.position,E.quaternion,E.scale),U.position.copy(E.position),U.quaternion.copy(E.quaternion),U.scale.copy(E.scale),U.matrix.copy(E.matrix),U.matrixWorld.copy(E.matrixWorld);const j=U.children;for(let ue=0,Me=j.length;ue<Me;ue++)j[ue].updateMatrixWorld(!0);le.length===2?D(E,b,x):E.projectionMatrix.copy(b.projectionMatrix)},this.getCamera=function(){return E},this.getFoveation=function(){if(d!==null)return d.fixedFoveation;if(h!==null)return h.fixedFoveation},this.setFoveation=function(U){d!==null&&(d.fixedFoveation=U),h!==null&&h.fixedFoveation!==void 0&&(h.fixedFoveation=U)};let I=null;function V(U,X){if(c=X.getViewerPose(l||o),m=X,c!==null){const le=c.views;h!==null&&(e.setRenderTargetFramebuffer(p,h.framebuffer),e.setRenderTarget(p));let j=!1;le.length!==E.cameras.length&&(E.cameras.length=0,j=!0);for(let ue=0;ue<le.length;ue++){const Me=le[ue];let ze=null;if(h!==null)ze=h.getViewport(Me);else{const Oe=u.getViewSubImage(d,Me);ze=Oe.viewport,ue===0&&(e.setRenderTargetTextures(p,Oe.colorTexture,d.ignoreDepthValues?void 0:Oe.depthStencilTexture),e.setRenderTarget(p))}let ee=S[ue];ee===void 0&&(ee=new Vt,ee.layers.enable(ue),ee.viewport=new ft,S[ue]=ee),ee.matrix.fromArray(Me.transform.matrix),ee.projectionMatrix.fromArray(Me.projectionMatrix),ee.viewport.set(ze.x,ze.y,ze.width,ze.height),ue===0&&E.matrix.copy(ee.matrix),j===!0&&E.cameras.push(ee)}}for(let le=0;le<v.length;le++){const j=_[le],ue=v[le];j!==null&&ue!==void 0&&ue.update(j,X,l||o)}I&&I(U,X),m=null}const W=new Iu;W.setAnimationLoop(V),this.setAnimationLoop=function(U){I=U},this.dispose=function(){}}}function e1(s,e){function t(f,p){f.fogColor.value.copy(p.color),p.isFog?(f.fogNear.value=p.near,f.fogFar.value=p.far):p.isFogExp2&&(f.fogDensity.value=p.density)}function i(f,p,v,_,b){p.isMeshBasicMaterial||p.isMeshLambertMaterial?r(f,p):p.isMeshToonMaterial?(r(f,p),u(f,p)):p.isMeshPhongMaterial?(r(f,p),c(f,p)):p.isMeshStandardMaterial?(r(f,p),d(f,p),p.isMeshPhysicalMaterial&&h(f,p,b)):p.isMeshMatcapMaterial?(r(f,p),m(f,p)):p.isMeshDepthMaterial?r(f,p):p.isMeshDistanceMaterial?(r(f,p),g(f,p)):p.isMeshNormalMaterial?r(f,p):p.isLineBasicMaterial?(n(f,p),p.isLineDashedMaterial&&o(f,p)):p.isPointsMaterial?a(f,p,v,_):p.isSpriteMaterial?l(f,p):p.isShadowMaterial?(f.color.value.copy(p.color),f.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function r(f,p){f.opacity.value=p.opacity,p.color&&f.diffuse.value.copy(p.color),p.emissive&&f.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(f.map.value=p.map),p.alphaMap&&(f.alphaMap.value=p.alphaMap),p.bumpMap&&(f.bumpMap.value=p.bumpMap,f.bumpScale.value=p.bumpScale,p.side===1&&(f.bumpScale.value*=-1)),p.displacementMap&&(f.displacementMap.value=p.displacementMap,f.displacementScale.value=p.displacementScale,f.displacementBias.value=p.displacementBias),p.emissiveMap&&(f.emissiveMap.value=p.emissiveMap),p.normalMap&&(f.normalMap.value=p.normalMap,f.normalScale.value.copy(p.normalScale),p.side===1&&f.normalScale.value.negate()),p.specularMap&&(f.specularMap.value=p.specularMap),p.alphaTest>0&&(f.alphaTest.value=p.alphaTest);const v=e.get(p).envMap;if(v&&(f.envMap.value=v,f.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,f.reflectivity.value=p.reflectivity,f.ior.value=p.ior,f.refractionRatio.value=p.refractionRatio),p.lightMap){f.lightMap.value=p.lightMap;const x=s.physicallyCorrectLights!==!0?Math.PI:1;f.lightMapIntensity.value=p.lightMapIntensity*x}p.aoMap&&(f.aoMap.value=p.aoMap,f.aoMapIntensity.value=p.aoMapIntensity);let _;p.map?_=p.map:p.specularMap?_=p.specularMap:p.displacementMap?_=p.displacementMap:p.normalMap?_=p.normalMap:p.bumpMap?_=p.bumpMap:p.roughnessMap?_=p.roughnessMap:p.metalnessMap?_=p.metalnessMap:p.alphaMap?_=p.alphaMap:p.emissiveMap?_=p.emissiveMap:p.clearcoatMap?_=p.clearcoatMap:p.clearcoatNormalMap?_=p.clearcoatNormalMap:p.clearcoatRoughnessMap?_=p.clearcoatRoughnessMap:p.iridescenceMap?_=p.iridescenceMap:p.iridescenceThicknessMap?_=p.iridescenceThicknessMap:p.specularIntensityMap?_=p.specularIntensityMap:p.specularColorMap?_=p.specularColorMap:p.transmissionMap?_=p.transmissionMap:p.thicknessMap?_=p.thicknessMap:p.sheenColorMap?_=p.sheenColorMap:p.sheenRoughnessMap&&(_=p.sheenRoughnessMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),f.uvTransform.value.copy(_.matrix));let b;p.aoMap?b=p.aoMap:p.lightMap&&(b=p.lightMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),f.uv2Transform.value.copy(b.matrix))}function n(f,p){f.diffuse.value.copy(p.color),f.opacity.value=p.opacity}function o(f,p){f.dashSize.value=p.dashSize,f.totalSize.value=p.dashSize+p.gapSize,f.scale.value=p.scale}function a(f,p,v,_){f.diffuse.value.copy(p.color),f.opacity.value=p.opacity,f.size.value=p.size*v,f.scale.value=_*.5,p.map&&(f.map.value=p.map),p.alphaMap&&(f.alphaMap.value=p.alphaMap),p.alphaTest>0&&(f.alphaTest.value=p.alphaTest);let b;p.map?b=p.map:p.alphaMap&&(b=p.alphaMap),b!==void 0&&(b.matrixAutoUpdate===!0&&b.updateMatrix(),f.uvTransform.value.copy(b.matrix))}function l(f,p){f.diffuse.value.copy(p.color),f.opacity.value=p.opacity,f.rotation.value=p.rotation,p.map&&(f.map.value=p.map),p.alphaMap&&(f.alphaMap.value=p.alphaMap),p.alphaTest>0&&(f.alphaTest.value=p.alphaTest);let v;p.map?v=p.map:p.alphaMap&&(v=p.alphaMap),v!==void 0&&(v.matrixAutoUpdate===!0&&v.updateMatrix(),f.uvTransform.value.copy(v.matrix))}function c(f,p){f.specular.value.copy(p.specular),f.shininess.value=Math.max(p.shininess,1e-4)}function u(f,p){p.gradientMap&&(f.gradientMap.value=p.gradientMap)}function d(f,p){f.roughness.value=p.roughness,f.metalness.value=p.metalness,p.roughnessMap&&(f.roughnessMap.value=p.roughnessMap),p.metalnessMap&&(f.metalnessMap.value=p.metalnessMap),e.get(p).envMap&&(f.envMapIntensity.value=p.envMapIntensity)}function h(f,p,v){f.ior.value=p.ior,p.sheen>0&&(f.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),f.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(f.sheenColorMap.value=p.sheenColorMap),p.sheenRoughnessMap&&(f.sheenRoughnessMap.value=p.sheenRoughnessMap)),p.clearcoat>0&&(f.clearcoat.value=p.clearcoat,f.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(f.clearcoatMap.value=p.clearcoatMap),p.clearcoatRoughnessMap&&(f.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap),p.clearcoatNormalMap&&(f.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),f.clearcoatNormalMap.value=p.clearcoatNormalMap,p.side===1&&f.clearcoatNormalScale.value.negate())),p.iridescence>0&&(f.iridescence.value=p.iridescence,f.iridescenceIOR.value=p.iridescenceIOR,f.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],f.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(f.iridescenceMap.value=p.iridescenceMap),p.iridescenceThicknessMap&&(f.iridescenceThicknessMap.value=p.iridescenceThicknessMap)),p.transmission>0&&(f.transmission.value=p.transmission,f.transmissionSamplerMap.value=v.texture,f.transmissionSamplerSize.value.set(v.width,v.height),p.transmissionMap&&(f.transmissionMap.value=p.transmissionMap),f.thickness.value=p.thickness,p.thicknessMap&&(f.thicknessMap.value=p.thicknessMap),f.attenuationDistance.value=p.attenuationDistance,f.attenuationColor.value.copy(p.attenuationColor)),f.specularIntensity.value=p.specularIntensity,f.specularColor.value.copy(p.specularColor),p.specularIntensityMap&&(f.specularIntensityMap.value=p.specularIntensityMap),p.specularColorMap&&(f.specularColorMap.value=p.specularColorMap)}function m(f,p){p.matcap&&(f.matcap.value=p.matcap)}function g(f,p){f.referencePosition.value.copy(p.referencePosition),f.nearDistance.value=p.nearDistance,f.farDistance.value=p.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:i}}function t1(s,e,t,i){let r={},n={},o=[];const a=t.isWebGL2?s.getParameter(35375):0;function l(_,b){const x=b.program;i.uniformBlockBinding(_,x)}function c(_,b){let x=r[_.id];x===void 0&&(g(_),x=u(_),r[_.id]=x,_.addEventListener("dispose",p));const S=b.program;i.updateUBOMapping(_,S);const E=e.render.frame;n[_.id]!==E&&(h(_),n[_.id]=E)}function u(_){const b=d();_.__bindingPointIndex=b;const x=s.createBuffer(),S=_.__size,E=_.usage;return s.bindBuffer(35345,x),s.bufferData(35345,S,E),s.bindBuffer(35345,null),s.bindBufferBase(35345,b,x),x}function d(){for(let _=0;_<a;_++)if(o.indexOf(_)===-1)return o.push(_),_;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function h(_){const b=r[_.id],x=_.uniforms,S=_.__cache;s.bindBuffer(35345,b);for(let E=0,R=x.length;E<R;E++){const y=x[E];if(m(y,E,S)===!0){const A=y.value,F=y.__offset;typeof A=="number"?(y.__data[0]=A,s.bufferSubData(35345,F,y.__data)):(y.value.isMatrix3?(y.__data[0]=y.value.elements[0],y.__data[1]=y.value.elements[1],y.__data[2]=y.value.elements[2],y.__data[3]=y.value.elements[0],y.__data[4]=y.value.elements[3],y.__data[5]=y.value.elements[4],y.__data[6]=y.value.elements[5],y.__data[7]=y.value.elements[0],y.__data[8]=y.value.elements[6],y.__data[9]=y.value.elements[7],y.__data[10]=y.value.elements[8],y.__data[11]=y.value.elements[0]):A.toArray(y.__data),s.bufferSubData(35345,F,y.__data))}}s.bindBuffer(35345,null)}function m(_,b,x){const S=_.value;if(x[b]===void 0)return typeof S=="number"?x[b]=S:x[b]=S.clone(),!0;if(typeof S=="number"){if(x[b]!==S)return x[b]=S,!0}else{const E=x[b];if(E.equals(S)===!1)return E.copy(S),!0}return!1}function g(_){const b=_.uniforms;let x=0;const S=16;let E=0;for(let R=0,y=b.length;R<y;R++){const A=b[R],F=f(A);if(A.__data=new Float32Array(F.storage/Float32Array.BYTES_PER_ELEMENT),A.__offset=x,R>0){E=x%S;const z=S-E;E!==0&&z-F.boundary<0&&(x+=S-E,A.__offset=x)}x+=F.storage}return E=x%S,E>0&&(x+=S-E),_.__size=x,_.__cache={},this}function f(_){const b=_.value,x={boundary:0,storage:0};return typeof b=="number"?(x.boundary=4,x.storage=4):b.isVector2?(x.boundary=8,x.storage=8):b.isVector3||b.isColor?(x.boundary=16,x.storage=12):b.isVector4?(x.boundary=16,x.storage=16):b.isMatrix3?(x.boundary=48,x.storage=48):b.isMatrix4?(x.boundary=64,x.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),x}function p(_){const b=_.target;b.removeEventListener("dispose",p);const x=o.indexOf(b.__bindingPointIndex);o.splice(x,1),s.deleteBuffer(r[b.id]),delete r[b.id],delete n[b.id]}function v(){for(const _ in r)s.deleteBuffer(r[_]);o=[],r={},n={}}return{bind:l,update:c,dispose:v}}function i1(){const s=zn("canvas");return s.style.display="block",s}function Uu(s={}){this.isWebGLRenderer=!0;const e=s.canvas!==void 0?s.canvas:i1(),t=s.context!==void 0?s.context:null,i=s.depth!==void 0?s.depth:!0,r=s.stencil!==void 0?s.stencil:!0,n=s.antialias!==void 0?s.antialias:!1,o=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,a=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,l=s.powerPreference!==void 0?s.powerPreference:"default",c=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let u;t!==null?u=t.getContextAttributes().alpha:u=s.alpha!==void 0?s.alpha:!1;let d=null,h=null;const m=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=3e3,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const f=this;let p=!1,v=0,_=0,b=null,x=-1,S=null;const E=new ft,R=new ft;let y=null,A=e.width,F=e.height,z=1,G=null,N=null;const D=new ft(0,0,A,F),O=new ft(0,0,A,F);let I=!1;const V=new Ro;let W=!1,U=!1,X=null;const le=new pt,j=new Ge,ue=new H,Me={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ze(){return b===null?z:1}let ee=t;function Oe(C,q){for(let J=0;J<C.length;J++){const $=C[J],re=e.getContext($,q);if(re!==null)return re}return null}try{const C={alpha:!0,depth:i,stencil:r,antialias:n,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Lo}`),e.addEventListener("webglcontextlost",Pe,!1),e.addEventListener("webglcontextrestored",Le,!1),e.addEventListener("webglcontextcreationerror",Ve,!1),ee===null){const q=["webgl2","webgl","experimental-webgl"];if(f.isWebGL1Renderer===!0&&q.shift(),ee=Oe(q,C),ee===null)throw Oe(q)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}ee.getShaderPrecisionFormat===void 0&&(ee.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let Ae,Ce,_e,tt,L,P,Y,se,te,ne,he,ae,de,oe,T,M,B,K,ie,ce,ge,Z,ye,ve;function Se(){Ae=new dg(ee),Ce=new ng(ee,Ae,s),Ae.init(Ce),Z=new $2(ee,Ae,Ce),_e=new Y2(ee,Ae,Ce),tt=new mg,L=new F2,P=new X2(ee,Ae,_e,L,Ce,Z,tt),Y=new og(f),se=new hg(f),te=new Tp(ee,Ce),ye=new rg(ee,Ae,te,Ce),ne=new fg(ee,te,tt,ye),he=new xg(ee,ne,te,tt),ie=new _g(ee,Ce,P),M=new ag(L),ae=new D2(f,Y,se,Ae,Ce,ye,M),de=new e1(f,L),oe=new z2,T=new G2(Ae,Ce),K=new ig(f,Y,_e,he,u,o),B=new q2(f,he,Ce),ve=new t1(ee,tt,Ce,_e),ce=new sg(ee,Ae,tt,Ce),ge=new pg(ee,Ae,tt,Ce),tt.programs=ae.programs,f.capabilities=Ce,f.extensions=Ae,f.properties=L,f.renderLists=oe,f.shadowMap=B,f.state=_e,f.info=tt}Se();const xe=new Q2(f,ee);this.xr=xe,this.getContext=function(){return ee},this.getContextAttributes=function(){return ee.getContextAttributes()},this.forceContextLoss=function(){const C=Ae.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=Ae.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return z},this.setPixelRatio=function(C){C!==void 0&&(z=C,this.setSize(A,F,!1))},this.getSize=function(C){return C.set(A,F)},this.setSize=function(C,q,J){if(xe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}A=C,F=q,e.width=Math.floor(C*z),e.height=Math.floor(q*z),J!==!1&&(e.style.width=C+"px",e.style.height=q+"px"),this.setViewport(0,0,C,q)},this.getDrawingBufferSize=function(C){return C.set(A*z,F*z).floor()},this.setDrawingBufferSize=function(C,q,J){A=C,F=q,z=J,e.width=Math.floor(C*J),e.height=Math.floor(q*J),this.setViewport(0,0,C,q)},this.getCurrentViewport=function(C){return C.copy(E)},this.getViewport=function(C){return C.copy(D)},this.setViewport=function(C,q,J,$){C.isVector4?D.set(C.x,C.y,C.z,C.w):D.set(C,q,J,$),_e.viewport(E.copy(D).multiplyScalar(z).floor())},this.getScissor=function(C){return C.copy(O)},this.setScissor=function(C,q,J,$){C.isVector4?O.set(C.x,C.y,C.z,C.w):O.set(C,q,J,$),_e.scissor(R.copy(O).multiplyScalar(z).floor())},this.getScissorTest=function(){return I},this.setScissorTest=function(C){_e.setScissorTest(I=C)},this.setOpaqueSort=function(C){G=C},this.setTransparentSort=function(C){N=C},this.getClearColor=function(C){return C.copy(K.getClearColor())},this.setClearColor=function(){K.setClearColor.apply(K,arguments)},this.getClearAlpha=function(){return K.getClearAlpha()},this.setClearAlpha=function(){K.setClearAlpha.apply(K,arguments)},this.clear=function(C=!0,q=!0,J=!0){let $=0;C&&($|=16384),q&&($|=256),J&&($|=1024),ee.clear($)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Pe,!1),e.removeEventListener("webglcontextrestored",Le,!1),e.removeEventListener("webglcontextcreationerror",Ve,!1),oe.dispose(),T.dispose(),L.dispose(),Y.dispose(),se.dispose(),he.dispose(),ye.dispose(),ve.dispose(),ae.dispose(),xe.dispose(),xe.removeEventListener("sessionstart",Qe),xe.removeEventListener("sessionend",mt),X&&(X.dispose(),X=null),nt.stop()};function Pe(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function Le(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;const C=tt.autoReset,q=B.enabled,J=B.autoUpdate,$=B.needsUpdate,re=B.type;Se(),tt.autoReset=C,B.enabled=q,B.autoUpdate=J,B.needsUpdate=$,B.type=re}function Ve(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function k(C){const q=C.target;q.removeEventListener("dispose",k),be(q)}function be(C){Q(C),L.remove(C)}function Q(C){const q=L.get(C).programs;q!==void 0&&(q.forEach(function(J){ae.releaseProgram(J)}),C.isShaderMaterial&&ae.releaseShaderCache(C))}this.renderBufferDirect=function(C,q,J,$,re,Te){q===null&&(q=Me);const De=re.isMesh&&re.matrixWorld.determinant()<0,Fe=Qu(C,q,J,$,re);_e.setMaterial($,De);let Be=J.index;const st=J.attributes.position;if(Be===null){if(st===void 0||st.count===0)return}else if(Be.count===0)return;let ke=1;$.wireframe===!0&&(Be=ne.getWireframeAttribute(J),ke=2),ye.setup(re,$,Fe,J,Be);let He,gt=ce;Be!==null&&(He=te.get(Be),gt=ge,gt.setIndex(He));const nr=Be!==null?Be.count:st.count,Lr=J.drawRange.start*ke,Rr=J.drawRange.count*ke,li=Te!==null?Te.start*ke:0,qe=Te!==null?Te.count*ke:1/0,Pr=Math.max(Lr,li),os=Math.min(nr,Lr+Rr,li+qe)-1,Xt=Math.max(0,os-Pr+1);if(Xt!==0){if(re.isMesh)$.wireframe===!0?(_e.setLineWidth($.wireframeLinewidth*ze()),gt.setMode(1)):gt.setMode(4);else if(re.isLine){let Wi=$.linewidth;Wi===void 0&&(Wi=1),_e.setLineWidth(Wi*ze()),re.isLineSegments?gt.setMode(1):re.isLineLoop?gt.setMode(2):gt.setMode(3)}else re.isPoints?gt.setMode(0):re.isSprite&&gt.setMode(4);if(re.isInstancedMesh)gt.renderInstances(Pr,Xt,re.count);else if(J.isInstancedBufferGeometry){const Wi=Math.min(J.instanceCount,J._maxInstanceCount);gt.renderInstances(Pr,Xt,Wi)}else gt.render(Pr,Xt)}},this.compile=function(C,q){h=T.get(C),h.init(),g.push(h),C.traverseVisible(function(J){J.isLight&&J.layers.test(q.layers)&&(h.pushLight(J),J.castShadow&&h.pushShadow(J))}),h.setupLights(f.physicallyCorrectLights),C.traverse(function(J){const $=J.material;if($)if(Array.isArray($))for(let re=0;re<$.length;re++){const Te=$[re];$n(Te,C,J)}else $n($,C,J)}),g.pop(),h=null};let Ee=null;function fe(C){Ee&&Ee(C)}function Qe(){nt.stop()}function mt(){nt.start()}const nt=new Iu;nt.setAnimationLoop(fe),typeof self<"u"&&nt.setContext(self),this.setAnimationLoop=function(C){Ee=C,xe.setAnimationLoop(C),C===null?nt.stop():nt.start()},xe.addEventListener("sessionstart",Qe),xe.addEventListener("sessionend",mt),this.render=function(C,q){if(q!==void 0&&q.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(p===!0)return;C.autoUpdate===!0&&C.updateMatrixWorld(),q.parent===null&&q.updateMatrixWorld(),xe.enabled===!0&&xe.isPresenting===!0&&(xe.cameraAutoUpdate===!0&&xe.updateCamera(q),q=xe.getCamera()),C.isScene===!0&&C.onBeforeRender(f,C,q,b),h=T.get(C,g.length),h.init(),g.push(h),le.multiplyMatrices(q.projectionMatrix,q.matrixWorldInverse),V.setFromProjectionMatrix(le),U=this.localClippingEnabled,W=M.init(this.clippingPlanes,U,q),d=oe.get(C,m.length),d.init(),m.push(d),Vi(C,q,0,f.sortObjects),d.finish(),f.sortObjects===!0&&d.sort(G,N),W===!0&&M.beginShadows();const J=h.state.shadowsArray;if(B.render(J,C,q),W===!0&&M.endShadows(),this.info.autoReset===!0&&this.info.reset(),K.render(d,C),h.setupLights(f.physicallyCorrectLights),q.isArrayCamera){const $=q.cameras;for(let re=0,Te=$.length;re<Te;re++){const De=$[re];rt(d,C,De,De.viewport)}}else rt(d,C,q);b!==null&&(P.updateMultisampleRenderTarget(b),P.updateRenderTargetMipmap(b)),C.isScene===!0&&C.onAfterRender(f,C,q),ye.resetDefaultState(),x=-1,S=null,g.pop(),g.length>0?h=g[g.length-1]:h=null,m.pop(),m.length>0?d=m[m.length-1]:d=null};function Vi(C,q,J,$){if(C.visible===!1)return;if(C.layers.test(q.layers)){if(C.isGroup)J=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(q);else if(C.isLight)h.pushLight(C),C.castShadow&&h.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||V.intersectsSprite(C)){$&&ue.setFromMatrixPosition(C.matrixWorld).applyMatrix4(le);const Te=he.update(C),De=C.material;De.visible&&d.push(C,Te,De,J,ue.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.frame!==tt.render.frame&&(C.skeleton.update(),C.skeleton.frame=tt.render.frame),!C.frustumCulled||V.intersectsObject(C))){$&&ue.setFromMatrixPosition(C.matrixWorld).applyMatrix4(le);const Te=he.update(C),De=C.material;if(Array.isArray(De)){const Fe=Te.groups;for(let Be=0,st=Fe.length;Be<st;Be++){const ke=Fe[Be],He=De[ke.materialIndex];He&&He.visible&&d.push(C,Te,He,J,ue.z,ke)}}else De.visible&&d.push(C,Te,De,J,ue.z,null)}}const re=C.children;for(let Te=0,De=re.length;Te<De;Te++)Vi(re[Te],q,J,$)}function rt(C,q,J,$){const re=C.opaque,Te=C.transmissive,De=C.transparent;h.setupLightsView(J),Te.length>0&&wi(re,q,J),$&&_e.viewport(E.copy($)),re.length>0&&Yt(re,q,J),Te.length>0&&Yt(Te,q,J),De.length>0&&Yt(De,q,J),_e.buffers.depth.setTest(!0),_e.buffers.depth.setMask(!0),_e.buffers.color.setMask(!0),_e.setPolygonOffset(!1)}function wi(C,q,J){const $=Ce.isWebGL2;X===null&&(X=new Er(1,1,{generateMipmaps:!0,type:Ae.has("EXT_color_buffer_half_float")?1016:1009,minFilter:1008,samples:$&&n===!0?4:0})),f.getDrawingBufferSize(j),$?X.setSize(j.x,j.y):X.setSize(oo(j.x),oo(j.y));const re=f.getRenderTarget();f.setRenderTarget(X),f.clear();const Te=f.toneMapping;f.toneMapping=0,Yt(C,q,J),f.toneMapping=Te,P.updateMultisampleRenderTarget(X),P.updateRenderTargetMipmap(X),f.setRenderTarget(re)}function Yt(C,q,J){const $=q.isScene===!0?q.overrideMaterial:null;for(let re=0,Te=C.length;re<Te;re++){const De=C[re],Fe=De.object,Be=De.geometry,st=$===null?De.material:$,ke=De.group;Fe.layers.test(J.layers)&&Ju(Fe,q,J,Be,st,ke)}}function Ju(C,q,J,$,re,Te){C.onBeforeRender(f,q,J,$,re,Te),C.modelViewMatrix.multiplyMatrices(J.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),re.onBeforeRender(f,q,J,$,C,Te),re.transparent===!0&&re.side===2?(re.side=1,re.needsUpdate=!0,f.renderBufferDirect(J,q,$,re,C,Te),re.side=0,re.needsUpdate=!0,f.renderBufferDirect(J,q,$,re,C,Te),re.side=2):f.renderBufferDirect(J,q,$,re,C,Te),C.onAfterRender(f,q,J,$,re,Te)}function $n(C,q,J){q.isScene!==!0&&(q=Me);const $=L.get(C),re=h.state.lights,Te=h.state.shadowsArray,De=re.state.version,Fe=ae.getParameters(C,re.state,Te,q,J),Be=ae.getProgramCacheKey(Fe);let st=$.programs;$.environment=C.isMeshStandardMaterial?q.environment:null,$.fog=q.fog,$.envMap=(C.isMeshStandardMaterial?se:Y).get(C.envMap||$.environment),st===void 0&&(C.addEventListener("dispose",k),st=new Map,$.programs=st);let ke=st.get(Be);if(ke!==void 0){if($.currentProgram===ke&&$.lightsStateVersion===De)return Oo(C,Fe),ke}else Fe.uniforms=ae.getUniforms(C),C.onBuild(J,Fe,f),C.onBeforeCompile(Fe,f),ke=ae.acquireProgram(Fe,Be),st.set(Be,ke),$.uniforms=Fe.uniforms;const He=$.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(He.clippingPlanes=M.uniform),Oo(C,Fe),$.needsLights=th(C),$.lightsStateVersion=De,$.needsLights&&(He.ambientLightColor.value=re.state.ambient,He.lightProbe.value=re.state.probe,He.directionalLights.value=re.state.directional,He.directionalLightShadows.value=re.state.directionalShadow,He.spotLights.value=re.state.spot,He.spotLightShadows.value=re.state.spotShadow,He.rectAreaLights.value=re.state.rectArea,He.ltc_1.value=re.state.rectAreaLTC1,He.ltc_2.value=re.state.rectAreaLTC2,He.pointLights.value=re.state.point,He.pointLightShadows.value=re.state.pointShadow,He.hemisphereLights.value=re.state.hemi,He.directionalShadowMap.value=re.state.directionalShadowMap,He.directionalShadowMatrix.value=re.state.directionalShadowMatrix,He.spotShadowMap.value=re.state.spotShadowMap,He.spotShadowMatrix.value=re.state.spotShadowMatrix,He.pointShadowMap.value=re.state.pointShadowMap,He.pointShadowMatrix.value=re.state.pointShadowMatrix);const gt=ke.getUniforms(),nr=An.seqWithValue(gt.seq,He);return $.currentProgram=ke,$.uniformsList=nr,ke}function Oo(C,q){const J=L.get(C);J.outputEncoding=q.outputEncoding,J.instancing=q.instancing,J.skinning=q.skinning,J.morphTargets=q.morphTargets,J.morphNormals=q.morphNormals,J.morphColors=q.morphColors,J.morphTargetsCount=q.morphTargetsCount,J.numClippingPlanes=q.numClippingPlanes,J.numIntersection=q.numClipIntersection,J.vertexAlphas=q.vertexAlphas,J.vertexTangents=q.vertexTangents,J.toneMapping=q.toneMapping}function Qu(C,q,J,$,re){q.isScene!==!0&&(q=Me),P.resetTextureUnits();const Te=q.fog,De=$.isMeshStandardMaterial?q.environment:null,Fe=b===null?f.outputEncoding:b.isXRRenderTarget===!0?b.texture.encoding:3e3,Be=($.isMeshStandardMaterial?se:Y).get($.envMap||De),st=$.vertexColors===!0&&!!J.attributes.color&&J.attributes.color.itemSize===4,ke=!!$.normalMap&&!!J.attributes.tangent,He=!!J.morphAttributes.position,gt=!!J.morphAttributes.normal,nr=!!J.morphAttributes.color,Lr=$.toneMapped?f.toneMapping:0,Rr=J.morphAttributes.position||J.morphAttributes.normal||J.morphAttributes.color,li=Rr!==void 0?Rr.length:0,qe=L.get($),Pr=h.state.lights;if(W===!0&&(U===!0||C!==S)){const Ot=C===S&&$.id===x;M.setState($,C,Ot)}let os=!1;$.version===qe.__version?(qe.needsLights&&qe.lightsStateVersion!==Pr.state.version||qe.outputEncoding!==Fe||re.isInstancedMesh&&qe.instancing===!1||!re.isInstancedMesh&&qe.instancing===!0||re.isSkinnedMesh&&qe.skinning===!1||!re.isSkinnedMesh&&qe.skinning===!0||qe.envMap!==Be||$.fog===!0&&qe.fog!==Te||qe.numClippingPlanes!==void 0&&(qe.numClippingPlanes!==M.numPlanes||qe.numIntersection!==M.numIntersection)||qe.vertexAlphas!==st||qe.vertexTangents!==ke||qe.morphTargets!==He||qe.morphNormals!==gt||qe.morphColors!==nr||qe.toneMapping!==Lr||Ce.isWebGL2===!0&&qe.morphTargetsCount!==li)&&(os=!0):(os=!0,qe.__version=$.version);let Xt=qe.currentProgram;os===!0&&(Xt=$n($,q,re));let Wi=!1,ls=!1,Zn=!1;const Tt=Xt.getUniforms(),cs=qe.uniforms;if(_e.useProgram(Xt.program)&&(Wi=!0,ls=!0,Zn=!0),$.id!==x&&(x=$.id,ls=!0),Wi||S!==C){if(Tt.setValue(ee,"projectionMatrix",C.projectionMatrix),Ce.logarithmicDepthBuffer&&Tt.setValue(ee,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),S!==C&&(S=C,ls=!0,Zn=!0),$.isShaderMaterial||$.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshStandardMaterial||$.envMap){const Ot=Tt.map.cameraPosition;Ot!==void 0&&Ot.setValue(ee,ue.setFromMatrixPosition(C.matrixWorld))}($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial)&&Tt.setValue(ee,"isOrthographic",C.isOrthographicCamera===!0),($.isMeshPhongMaterial||$.isMeshToonMaterial||$.isMeshLambertMaterial||$.isMeshBasicMaterial||$.isMeshStandardMaterial||$.isShaderMaterial||$.isShadowMaterial||re.isSkinnedMesh)&&Tt.setValue(ee,"viewMatrix",C.matrixWorldInverse)}if(re.isSkinnedMesh){Tt.setOptional(ee,re,"bindMatrix"),Tt.setOptional(ee,re,"bindMatrixInverse");const Ot=re.skeleton;Ot&&(Ce.floatVertexTextures?(Ot.boneTexture===null&&Ot.computeBoneTexture(),Tt.setValue(ee,"boneTexture",Ot.boneTexture,P),Tt.setValue(ee,"boneTextureSize",Ot.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Kn=J.morphAttributes;if((Kn.position!==void 0||Kn.normal!==void 0||Kn.color!==void 0&&Ce.isWebGL2===!0)&&ie.update(re,J,$,Xt),(ls||qe.receiveShadow!==re.receiveShadow)&&(qe.receiveShadow=re.receiveShadow,Tt.setValue(ee,"receiveShadow",re.receiveShadow)),ls&&(Tt.setValue(ee,"toneMappingExposure",f.toneMappingExposure),qe.needsLights&&eh(cs,Zn),Te&&$.fog===!0&&de.refreshFogUniforms(cs,Te),de.refreshMaterialUniforms(cs,$,z,F,X),An.upload(ee,qe.uniformsList,cs,P)),$.isShaderMaterial&&$.uniformsNeedUpdate===!0&&(An.upload(ee,qe.uniformsList,cs,P),$.uniformsNeedUpdate=!1),$.isSpriteMaterial&&Tt.setValue(ee,"center",re.center),Tt.setValue(ee,"modelViewMatrix",re.modelViewMatrix),Tt.setValue(ee,"normalMatrix",re.normalMatrix),Tt.setValue(ee,"modelMatrix",re.matrixWorld),$.isShaderMaterial||$.isRawShaderMaterial){const Ot=$.uniformsGroups;for(let Jn=0,ih=Ot.length;Jn<ih;Jn++)if(Ce.isWebGL2){const Bo=Ot[Jn];ve.update(Bo,Xt),ve.bind(Bo,Xt)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Xt}function eh(C,q){C.ambientLightColor.needsUpdate=q,C.lightProbe.needsUpdate=q,C.directionalLights.needsUpdate=q,C.directionalLightShadows.needsUpdate=q,C.pointLights.needsUpdate=q,C.pointLightShadows.needsUpdate=q,C.spotLights.needsUpdate=q,C.spotLightShadows.needsUpdate=q,C.rectAreaLights.needsUpdate=q,C.hemisphereLights.needsUpdate=q}function th(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return b},this.setRenderTargetTextures=function(C,q,J){L.get(C.texture).__webglTexture=q,L.get(C.depthTexture).__webglTexture=J;const $=L.get(C);$.__hasExternalTextures=!0,$.__hasExternalTextures&&($.__autoAllocateDepthBuffer=J===void 0,$.__autoAllocateDepthBuffer||Ae.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),$.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(C,q){const J=L.get(C);J.__webglFramebuffer=q,J.__useDefaultFramebuffer=q===void 0},this.setRenderTarget=function(C,q=0,J=0){b=C,v=q,_=J;let $=!0;if(C){const Fe=L.get(C);Fe.__useDefaultFramebuffer!==void 0?(_e.bindFramebuffer(36160,null),$=!1):Fe.__webglFramebuffer===void 0?P.setupRenderTarget(C):Fe.__hasExternalTextures&&P.rebindTextures(C,L.get(C.texture).__webglTexture,L.get(C.depthTexture).__webglTexture)}let re=null,Te=!1,De=!1;if(C){const Fe=C.texture;(Fe.isData3DTexture||Fe.isDataArrayTexture)&&(De=!0);const Be=L.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(re=Be[q],Te=!0):Ce.isWebGL2&&C.samples>0&&P.useMultisampledRTT(C)===!1?re=L.get(C).__webglMultisampledFramebuffer:re=Be,E.copy(C.viewport),R.copy(C.scissor),y=C.scissorTest}else E.copy(D).multiplyScalar(z).floor(),R.copy(O).multiplyScalar(z).floor(),y=I;if(_e.bindFramebuffer(36160,re)&&Ce.drawBuffers&&$&&_e.drawBuffers(C,re),_e.viewport(E),_e.scissor(R),_e.setScissorTest(y),Te){const Fe=L.get(C.texture);ee.framebufferTexture2D(36160,36064,34069+q,Fe.__webglTexture,J)}else if(De){const Fe=L.get(C.texture),Be=q||0;ee.framebufferTextureLayer(36160,36064,Fe.__webglTexture,J||0,Be)}x=-1},this.readRenderTargetPixels=function(C,q,J,$,re,Te,De){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Fe=L.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&De!==void 0&&(Fe=Fe[De]),Fe){_e.bindFramebuffer(36160,Fe);try{const Be=C.texture,st=Be.format,ke=Be.type;if(st!==1023&&Z.convert(st)!==ee.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const He=ke===1016&&(Ae.has("EXT_color_buffer_half_float")||Ce.isWebGL2&&Ae.has("EXT_color_buffer_float"));if(ke!==1009&&Z.convert(ke)!==ee.getParameter(35738)&&!(ke===1015&&(Ce.isWebGL2||Ae.has("OES_texture_float")||Ae.has("WEBGL_color_buffer_float")))&&!He){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}q>=0&&q<=C.width-$&&J>=0&&J<=C.height-re&&ee.readPixels(q,J,$,re,Z.convert(st),Z.convert(ke),Te)}finally{const Be=b!==null?L.get(b).__webglFramebuffer:null;_e.bindFramebuffer(36160,Be)}}},this.copyFramebufferToTexture=function(C,q,J=0){const $=Math.pow(2,-J),re=Math.floor(q.image.width*$),Te=Math.floor(q.image.height*$);P.setTexture2D(q,0),ee.copyTexSubImage2D(3553,J,0,0,C.x,C.y,re,Te),_e.unbindTexture()},this.copyTextureToTexture=function(C,q,J,$=0){const re=q.image.width,Te=q.image.height,De=Z.convert(J.format),Fe=Z.convert(J.type);P.setTexture2D(J,0),ee.pixelStorei(37440,J.flipY),ee.pixelStorei(37441,J.premultiplyAlpha),ee.pixelStorei(3317,J.unpackAlignment),q.isDataTexture?ee.texSubImage2D(3553,$,C.x,C.y,re,Te,De,Fe,q.image.data):q.isCompressedTexture?ee.compressedTexSubImage2D(3553,$,C.x,C.y,q.mipmaps[0].width,q.mipmaps[0].height,De,q.mipmaps[0].data):ee.texSubImage2D(3553,$,C.x,C.y,De,Fe,q.image),$===0&&J.generateMipmaps&&ee.generateMipmap(3553),_e.unbindTexture()},this.copyTextureToTexture3D=function(C,q,J,$,re=0){if(f.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Te=C.max.x-C.min.x+1,De=C.max.y-C.min.y+1,Fe=C.max.z-C.min.z+1,Be=Z.convert($.format),st=Z.convert($.type);let ke;if($.isData3DTexture)P.setTexture3D($,0),ke=32879;else if($.isDataArrayTexture)P.setTexture2DArray($,0),ke=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}ee.pixelStorei(37440,$.flipY),ee.pixelStorei(37441,$.premultiplyAlpha),ee.pixelStorei(3317,$.unpackAlignment);const He=ee.getParameter(3314),gt=ee.getParameter(32878),nr=ee.getParameter(3316),Lr=ee.getParameter(3315),Rr=ee.getParameter(32877),li=J.isCompressedTexture?J.mipmaps[0]:J.image;ee.pixelStorei(3314,li.width),ee.pixelStorei(32878,li.height),ee.pixelStorei(3316,C.min.x),ee.pixelStorei(3315,C.min.y),ee.pixelStorei(32877,C.min.z),J.isDataTexture||J.isData3DTexture?ee.texSubImage3D(ke,re,q.x,q.y,q.z,Te,De,Fe,Be,st,li.data):J.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),ee.compressedTexSubImage3D(ke,re,q.x,q.y,q.z,Te,De,Fe,Be,li.data)):ee.texSubImage3D(ke,re,q.x,q.y,q.z,Te,De,Fe,Be,st,li),ee.pixelStorei(3314,He),ee.pixelStorei(32878,gt),ee.pixelStorei(3316,nr),ee.pixelStorei(3315,Lr),ee.pixelStorei(32877,Rr),re===0&&$.generateMipmaps&&ee.generateMipmap(ke),_e.unbindTexture()},this.initTexture=function(C){C.isCubeTexture?P.setTextureCube(C,0):C.isData3DTexture?P.setTexture3D(C,0):C.isDataArrayTexture?P.setTexture2DArray(C,0):P.setTexture2D(C,0),_e.unbindTexture()},this.resetState=function(){v=0,_=0,b=null,_e.reset(),ye.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class r1 extends Uu{}r1.prototype.isWebGL1Renderer=!0;class s1 extends Rt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}class Xl extends jt{constructor(e,t,i,r,n,o,a,l,c){super(e,t,i,r,n,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Do extends bi{constructor(e=1,t=1,i=1,r=8,n=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:n,openEnded:o,thetaStart:a,thetaLength:l};const c=this;r=Math.floor(r),n=Math.floor(n);const u=[],d=[],h=[],m=[];let g=0;const f=[],p=i/2;let v=0;_(),o===!1&&(e>0&&b(!0),t>0&&b(!1)),this.setIndex(u),this.setAttribute("position",new Mt(d,3)),this.setAttribute("normal",new Mt(h,3)),this.setAttribute("uv",new Mt(m,2));function _(){const x=new H,S=new H;let E=0;const R=(t-e)/i;for(let y=0;y<=n;y++){const A=[],F=y/n,z=F*(t-e)+e;for(let G=0;G<=r;G++){const N=G/r,D=N*l+a,O=Math.sin(D),I=Math.cos(D);S.x=z*O,S.y=-F*i+p,S.z=z*I,d.push(S.x,S.y,S.z),x.set(O,R,I).normalize(),h.push(x.x,x.y,x.z),m.push(N,1-F),A.push(g++)}f.push(A)}for(let y=0;y<r;y++)for(let A=0;A<n;A++){const F=f[A][y],z=f[A+1][y],G=f[A+1][y+1],N=f[A][y+1];u.push(F,z,N),u.push(z,G,N),E+=6}c.addGroup(v,E,0),v+=E}function b(x){const S=g,E=new Ge,R=new H;let y=0;const A=x===!0?e:t,F=x===!0?1:-1;for(let G=1;G<=r;G++)d.push(0,p*F,0),h.push(0,F,0),m.push(.5,.5),g++;const z=g;for(let G=0;G<=r;G++){const N=G/r*l+a,D=Math.cos(N),O=Math.sin(N);R.x=A*O,R.y=p*F,R.z=A*D,d.push(R.x,R.y,R.z),h.push(0,F,0),E.x=D*.5+.5,E.y=O*.5*F+.5,m.push(E.x,E.y),g++}for(let G=0;G<r;G++){const N=S+G,D=z+G;x===!0?u.push(D,D+1,N):u.push(D+1,D,N),y+=3}c.addGroup(v,y,x===!0?1:2),v+=y}}static fromJSON(e){return new Do(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class n1 extends Cr{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Ue(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class a1 extends Cr{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ue(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class o1 extends Cr{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ue(16777215),this.specular=new Ue(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ue(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ge(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Gu extends Rt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Ue(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class l1 extends Gu{constructor(e,t,i){super(e,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Rt.DefaultUp),this.updateMatrix(),this.groundColor=new Ue(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const $l=new pt,Zl=new H,Kl=new H;class c1{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Ge(512,512),this.map=null,this.mapPass=null,this.matrix=new pt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ro,this._frameExtents=new Ge(1,1),this._viewportCount=1,this._viewports=[new ft(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;Zl.setFromMatrixPosition(e.matrixWorld),t.position.copy(Zl),Kl.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Kl),t.updateMatrixWorld(),$l.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix($l),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(t.projectionMatrix),i.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class u1 extends c1{constructor(){super(new Vt(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,i=ao*2*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,n=e.distance||t.far;(i!==t.fov||r!==t.aspect||n!==t.far)&&(t.fov=i,t.aspect=r,t.far=n,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class h1 extends Gu{constructor(e,t,i=0,r=Math.PI/3,n=0,o=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Rt.DefaultUp),this.updateMatrix(),this.target=new Rt,this.distance=i,this.angle=r,this.penumbra=n,this.decay=o,this.shadow=new u1}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Lo}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Lo);class ai{constructor(e){e===void 0&&(e=[0,0,0,0,0,0,0,0,0]),this.elements=e}identity(){const e=this.elements;e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1}setZero(){const e=this.elements;e[0]=0,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=0,e[6]=0,e[7]=0,e[8]=0}setTrace(e){const t=this.elements;t[0]=e.x,t[4]=e.y,t[8]=e.z}getTrace(e){e===void 0&&(e=new w);const t=this.elements;return e.x=t[0],e.y=t[4],e.z=t[8],e}vmult(e,t){t===void 0&&(t=new w);const i=this.elements,r=e.x,n=e.y,o=e.z;return t.x=i[0]*r+i[1]*n+i[2]*o,t.y=i[3]*r+i[4]*n+i[5]*o,t.z=i[6]*r+i[7]*n+i[8]*o,t}smult(e){for(let t=0;t<this.elements.length;t++)this.elements[t]*=e}mmult(e,t){t===void 0&&(t=new ai);const i=this.elements,r=e.elements,n=t.elements,o=i[0],a=i[1],l=i[2],c=i[3],u=i[4],d=i[5],h=i[6],m=i[7],g=i[8],f=r[0],p=r[1],v=r[2],_=r[3],b=r[4],x=r[5],S=r[6],E=r[7],R=r[8];return n[0]=o*f+a*_+l*S,n[1]=o*p+a*b+l*E,n[2]=o*v+a*x+l*R,n[3]=c*f+u*_+d*S,n[4]=c*p+u*b+d*E,n[5]=c*v+u*x+d*R,n[6]=h*f+m*_+g*S,n[7]=h*p+m*b+g*E,n[8]=h*v+m*x+g*R,t}scale(e,t){t===void 0&&(t=new ai);const i=this.elements,r=t.elements;for(let n=0;n!==3;n++)r[3*n+0]=e.x*i[3*n+0],r[3*n+1]=e.y*i[3*n+1],r[3*n+2]=e.z*i[3*n+2];return t}solve(e,t){t===void 0&&(t=new w);const i=3,r=4,n=[];let o,a;for(o=0;o<i*r;o++)n.push(0);for(o=0;o<3;o++)for(a=0;a<3;a++)n[o+r*a]=this.elements[o+3*a];n[3+4*0]=e.x,n[3+4*1]=e.y,n[3+4*2]=e.z;let l=3;const c=l;let u;const d=4;let h;do{if(o=c-l,n[o+r*o]===0){for(a=o+1;a<c;a++)if(n[o+r*a]!==0){u=d;do h=d-u,n[h+r*o]+=n[h+r*a];while(--u);break}}if(n[o+r*o]!==0)for(a=o+1;a<c;a++){const m=n[o+r*a]/n[o+r*o];u=d;do h=d-u,n[h+r*a]=h<=o?0:n[h+r*a]-n[h+r*o]*m;while(--u)}}while(--l);if(t.z=n[2*r+3]/n[2*r+2],t.y=(n[1*r+3]-n[1*r+2]*t.z)/n[1*r+1],t.x=(n[0*r+3]-n[0*r+2]*t.z-n[0*r+1]*t.y)/n[0*r+0],isNaN(t.x)||isNaN(t.y)||isNaN(t.z)||t.x===1/0||t.y===1/0||t.z===1/0)throw`Could not solve equation! Got x=[${t.toString()}], b=[${e.toString()}], A=[${this.toString()}]`;return t}e(e,t,i){if(i===void 0)return this.elements[t+3*e];this.elements[t+3*e]=i}copy(e){for(let t=0;t<e.elements.length;t++)this.elements[t]=e.elements[t];return this}toString(){let e="";const t=",";for(let i=0;i<9;i++)e+=this.elements[i]+t;return e}reverse(e){e===void 0&&(e=new ai);const t=3,i=6,r=d1;let n,o;for(n=0;n<3;n++)for(o=0;o<3;o++)r[n+i*o]=this.elements[n+3*o];r[3+6*0]=1,r[3+6*1]=0,r[3+6*2]=0,r[4+6*0]=0,r[4+6*1]=1,r[4+6*2]=0,r[5+6*0]=0,r[5+6*1]=0,r[5+6*2]=1;let a=3;const l=a;let c;const u=i;let d;do{if(n=l-a,r[n+i*n]===0){for(o=n+1;o<l;o++)if(r[n+i*o]!==0){c=u;do d=u-c,r[d+i*n]+=r[d+i*o];while(--c);break}}if(r[n+i*n]!==0)for(o=n+1;o<l;o++){const h=r[n+i*o]/r[n+i*n];c=u;do d=u-c,r[d+i*o]=d<=n?0:r[d+i*o]-r[d+i*n]*h;while(--c)}}while(--a);n=2;do{o=n-1;do{const h=r[n+i*o]/r[n+i*n];c=i;do d=i-c,r[d+i*o]=r[d+i*o]-r[d+i*n]*h;while(--c)}while(o--)}while(--n);n=2;do{const h=1/r[n+i*n];c=i;do d=i-c,r[d+i*n]=r[d+i*n]*h;while(--c)}while(n--);n=2;do{o=2;do{if(d=r[t+o+i*n],isNaN(d)||d===1/0)throw`Could not reverse! A=[${this.toString()}]`;e.e(n,o,d)}while(o--)}while(n--);return e}setRotationFromQuaternion(e){const t=e.x,i=e.y,r=e.z,n=e.w,o=t+t,a=i+i,l=r+r,c=t*o,u=t*a,d=t*l,h=i*a,m=i*l,g=r*l,f=n*o,p=n*a,v=n*l,_=this.elements;return _[3*0+0]=1-(h+g),_[3*0+1]=u-v,_[3*0+2]=d+p,_[3*1+0]=u+v,_[3*1+1]=1-(c+g),_[3*1+2]=m-f,_[3*2+0]=d-p,_[3*2+1]=m+f,_[3*2+2]=1-(c+h),this}transpose(e){e===void 0&&(e=new ai);const t=this.elements,i=e.elements;let r;return i[0]=t[0],i[4]=t[4],i[8]=t[8],r=t[1],i[1]=t[3],i[3]=r,r=t[2],i[2]=t[6],i[6]=r,r=t[5],i[5]=t[7],i[7]=r,e}}const d1=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];class w{constructor(e,t,i){e===void 0&&(e=0),t===void 0&&(t=0),i===void 0&&(i=0),this.x=e,this.y=t,this.z=i}cross(e,t){t===void 0&&(t=new w);const i=e.x,r=e.y,n=e.z,o=this.x,a=this.y,l=this.z;return t.x=a*n-l*r,t.y=l*i-o*n,t.z=o*r-a*i,t}set(e,t,i){return this.x=e,this.y=t,this.z=i,this}setZero(){this.x=this.y=this.z=0}vadd(e,t){if(t)t.x=e.x+this.x,t.y=e.y+this.y,t.z=e.z+this.z;else return new w(this.x+e.x,this.y+e.y,this.z+e.z)}vsub(e,t){if(t)t.x=this.x-e.x,t.y=this.y-e.y,t.z=this.z-e.z;else return new w(this.x-e.x,this.y-e.y,this.z-e.z)}crossmat(){return new ai([0,-this.z,this.y,this.z,0,-this.x,-this.y,this.x,0])}normalize(){const e=this.x,t=this.y,i=this.z,r=Math.sqrt(e*e+t*t+i*i);if(r>0){const n=1/r;this.x*=n,this.y*=n,this.z*=n}else this.x=0,this.y=0,this.z=0;return r}unit(e){e===void 0&&(e=new w);const t=this.x,i=this.y,r=this.z;let n=Math.sqrt(t*t+i*i+r*r);return n>0?(n=1/n,e.x=t*n,e.y=i*n,e.z=r*n):(e.x=1,e.y=0,e.z=0),e}length(){const e=this.x,t=this.y,i=this.z;return Math.sqrt(e*e+t*t+i*i)}lengthSquared(){return this.dot(this)}distanceTo(e){const t=this.x,i=this.y,r=this.z,n=e.x,o=e.y,a=e.z;return Math.sqrt((n-t)*(n-t)+(o-i)*(o-i)+(a-r)*(a-r))}distanceSquared(e){const t=this.x,i=this.y,r=this.z,n=e.x,o=e.y,a=e.z;return(n-t)*(n-t)+(o-i)*(o-i)+(a-r)*(a-r)}scale(e,t){t===void 0&&(t=new w);const i=this.x,r=this.y,n=this.z;return t.x=e*i,t.y=e*r,t.z=e*n,t}vmul(e,t){return t===void 0&&(t=new w),t.x=e.x*this.x,t.y=e.y*this.y,t.z=e.z*this.z,t}addScaledVector(e,t,i){return i===void 0&&(i=new w),i.x=this.x+e*t.x,i.y=this.y+e*t.y,i.z=this.z+e*t.z,i}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}isZero(){return this.x===0&&this.y===0&&this.z===0}negate(e){return e===void 0&&(e=new w),e.x=-this.x,e.y=-this.y,e.z=-this.z,e}tangents(e,t){const i=this.length();if(i>0){const r=f1,n=1/i;r.set(this.x*n,this.y*n,this.z*n);const o=p1;Math.abs(r.x)<.9?(o.set(1,0,0),r.cross(o,e)):(o.set(0,1,0),r.cross(o,e)),r.cross(e,t)}else e.set(1,0,0),t.set(0,1,0)}toString(){return`${this.x},${this.y},${this.z}`}toArray(){return[this.x,this.y,this.z]}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}lerp(e,t,i){const r=this.x,n=this.y,o=this.z;i.x=r+(e.x-r)*t,i.y=n+(e.y-n)*t,i.z=o+(e.z-o)*t}almostEquals(e,t){return t===void 0&&(t=1e-6),!(Math.abs(this.x-e.x)>t||Math.abs(this.y-e.y)>t||Math.abs(this.z-e.z)>t)}almostZero(e){return e===void 0&&(e=1e-6),!(Math.abs(this.x)>e||Math.abs(this.y)>e||Math.abs(this.z)>e)}isAntiparallelTo(e,t){return this.negate(Jl),Jl.almostEquals(e,t)}clone(){return new w(this.x,this.y,this.z)}}w.ZERO=new w(0,0,0);w.UNIT_X=new w(1,0,0);w.UNIT_Y=new w(0,1,0);w.UNIT_Z=new w(0,0,1);const f1=new w,p1=new w,Jl=new w;class qt{constructor(e){e===void 0&&(e={}),this.lowerBound=new w,this.upperBound=new w,e.lowerBound&&this.lowerBound.copy(e.lowerBound),e.upperBound&&this.upperBound.copy(e.upperBound)}setFromPoints(e,t,i,r){const n=this.lowerBound,o=this.upperBound,a=i;n.copy(e[0]),a&&a.vmult(n,n),o.copy(n);for(let l=1;l<e.length;l++){let c=e[l];a&&(a.vmult(c,Ql),c=Ql),c.x>o.x&&(o.x=c.x),c.x<n.x&&(n.x=c.x),c.y>o.y&&(o.y=c.y),c.y<n.y&&(n.y=c.y),c.z>o.z&&(o.z=c.z),c.z<n.z&&(n.z=c.z)}return t&&(t.vadd(n,n),t.vadd(o,o)),r&&(n.x-=r,n.y-=r,n.z-=r,o.x+=r,o.y+=r,o.z+=r),this}copy(e){return this.lowerBound.copy(e.lowerBound),this.upperBound.copy(e.upperBound),this}clone(){return new qt().copy(this)}extend(e){this.lowerBound.x=Math.min(this.lowerBound.x,e.lowerBound.x),this.upperBound.x=Math.max(this.upperBound.x,e.upperBound.x),this.lowerBound.y=Math.min(this.lowerBound.y,e.lowerBound.y),this.upperBound.y=Math.max(this.upperBound.y,e.upperBound.y),this.lowerBound.z=Math.min(this.lowerBound.z,e.lowerBound.z),this.upperBound.z=Math.max(this.upperBound.z,e.upperBound.z)}overlaps(e){const t=this.lowerBound,i=this.upperBound,r=e.lowerBound,n=e.upperBound,o=r.x<=i.x&&i.x<=n.x||t.x<=n.x&&n.x<=i.x,a=r.y<=i.y&&i.y<=n.y||t.y<=n.y&&n.y<=i.y,l=r.z<=i.z&&i.z<=n.z||t.z<=n.z&&n.z<=i.z;return o&&a&&l}volume(){const e=this.lowerBound,t=this.upperBound;return(t.x-e.x)*(t.y-e.y)*(t.z-e.z)}contains(e){const t=this.lowerBound,i=this.upperBound,r=e.lowerBound,n=e.upperBound;return t.x<=r.x&&i.x>=n.x&&t.y<=r.y&&i.y>=n.y&&t.z<=r.z&&i.z>=n.z}getCorners(e,t,i,r,n,o,a,l){const c=this.lowerBound,u=this.upperBound;e.copy(c),t.set(u.x,c.y,c.z),i.set(u.x,u.y,c.z),r.set(c.x,u.y,u.z),n.set(u.x,c.y,u.z),o.set(c.x,u.y,c.z),a.set(c.x,c.y,u.z),l.copy(u)}toLocalFrame(e,t){const i=ec,r=i[0],n=i[1],o=i[2],a=i[3],l=i[4],c=i[5],u=i[6],d=i[7];this.getCorners(r,n,o,a,l,c,u,d);for(let h=0;h!==8;h++){const m=i[h];e.pointToLocal(m,m)}return t.setFromPoints(i)}toWorldFrame(e,t){const i=ec,r=i[0],n=i[1],o=i[2],a=i[3],l=i[4],c=i[5],u=i[6],d=i[7];this.getCorners(r,n,o,a,l,c,u,d);for(let h=0;h!==8;h++){const m=i[h];e.pointToWorld(m,m)}return t.setFromPoints(i)}overlapsRay(e){const{direction:t,from:i}=e,r=1/t.x,n=1/t.y,o=1/t.z,a=(this.lowerBound.x-i.x)*r,l=(this.upperBound.x-i.x)*r,c=(this.lowerBound.y-i.y)*n,u=(this.upperBound.y-i.y)*n,d=(this.lowerBound.z-i.z)*o,h=(this.upperBound.z-i.z)*o,m=Math.max(Math.max(Math.min(a,l),Math.min(c,u)),Math.min(d,h)),g=Math.min(Math.min(Math.max(a,l),Math.max(c,u)),Math.max(d,h));return!(g<0||m>g)}}const Ql=new w,ec=[new w,new w,new w,new w,new w,new w,new w,new w];class tc{constructor(){this.matrix=[]}get(e,t){let{index:i}=e,{index:r}=t;if(r>i){const n=r;r=i,i=n}return this.matrix[(i*(i+1)>>1)+r-1]}set(e,t,i){let{index:r}=e,{index:n}=t;if(n>r){const o=n;n=r,r=o}this.matrix[(r*(r+1)>>1)+n-1]=i?1:0}reset(){for(let e=0,t=this.matrix.length;e!==t;e++)this.matrix[e]=0}setNumObjects(e){this.matrix.length=e*(e-1)>>1}}class Hu{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;return i[e]===void 0&&(i[e]=[]),i[e].includes(t)||i[e].push(t),this}hasEventListener(e,t){if(this._listeners===void 0)return!1;const i=this._listeners;return!!(i[e]!==void 0&&i[e].includes(t))}hasAnyEventListener(e){return this._listeners===void 0?!1:this._listeners[e]!==void 0}removeEventListener(e,t){if(this._listeners===void 0)return this;const i=this._listeners;if(i[e]===void 0)return this;const r=i[e].indexOf(t);return r!==-1&&i[e].splice(r,1),this}dispatchEvent(e){if(this._listeners===void 0)return this;const t=this._listeners[e.type];if(t!==void 0){e.target=this;for(let i=0,r=t.length;i<r;i++)t[i].call(this,e)}return this}}class ct{constructor(e,t,i,r){e===void 0&&(e=0),t===void 0&&(t=0),i===void 0&&(i=0),r===void 0&&(r=1),this.x=e,this.y=t,this.z=i,this.w=r}set(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this}toString(){return`${this.x},${this.y},${this.z},${this.w}`}toArray(){return[this.x,this.y,this.z,this.w]}setFromAxisAngle(e,t){const i=Math.sin(t*.5);return this.x=e.x*i,this.y=e.y*i,this.z=e.z*i,this.w=Math.cos(t*.5),this}toAxisAngle(e){e===void 0&&(e=new w),this.normalize();const t=2*Math.acos(this.w),i=Math.sqrt(1-this.w*this.w);return i<.001?(e.x=this.x,e.y=this.y,e.z=this.z):(e.x=this.x/i,e.y=this.y/i,e.z=this.z/i),[e,t]}setFromVectors(e,t){if(e.isAntiparallelTo(t)){const i=m1,r=g1;e.tangents(i,r),this.setFromAxisAngle(i,Math.PI)}else{const i=e.cross(t);this.x=i.x,this.y=i.y,this.z=i.z,this.w=Math.sqrt(e.length()**2*t.length()**2)+e.dot(t),this.normalize()}return this}mult(e,t){t===void 0&&(t=new ct);const i=this.x,r=this.y,n=this.z,o=this.w,a=e.x,l=e.y,c=e.z,u=e.w;return t.x=i*u+o*a+r*c-n*l,t.y=r*u+o*l+n*a-i*c,t.z=n*u+o*c+i*l-r*a,t.w=o*u-i*a-r*l-n*c,t}inverse(e){e===void 0&&(e=new ct);const t=this.x,i=this.y,r=this.z,n=this.w;this.conjugate(e);const o=1/(t*t+i*i+r*r+n*n);return e.x*=o,e.y*=o,e.z*=o,e.w*=o,e}conjugate(e){return e===void 0&&(e=new ct),e.x=-this.x,e.y=-this.y,e.z=-this.z,e.w=this.w,e}normalize(){let e=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);return e===0?(this.x=0,this.y=0,this.z=0,this.w=0):(e=1/e,this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}normalizeFast(){const e=(3-(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w))/2;return e===0?(this.x=0,this.y=0,this.z=0,this.w=0):(this.x*=e,this.y*=e,this.z*=e,this.w*=e),this}vmult(e,t){t===void 0&&(t=new w);const i=e.x,r=e.y,n=e.z,o=this.x,a=this.y,l=this.z,c=this.w,u=c*i+a*n-l*r,d=c*r+l*i-o*n,h=c*n+o*r-a*i,m=-o*i-a*r-l*n;return t.x=u*c+m*-o+d*-l-h*-a,t.y=d*c+m*-a+h*-o-u*-l,t.z=h*c+m*-l+u*-a-d*-o,t}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this}toEuler(e,t){t===void 0&&(t="YZX");let i,r,n;const o=this.x,a=this.y,l=this.z,c=this.w;switch(t){case"YZX":const u=o*a+l*c;if(u>.499&&(i=2*Math.atan2(o,c),r=Math.PI/2,n=0),u<-.499&&(i=-2*Math.atan2(o,c),r=-Math.PI/2,n=0),i===void 0){const d=o*o,h=a*a,m=l*l;i=Math.atan2(2*a*c-2*o*l,1-2*h-2*m),r=Math.asin(2*u),n=Math.atan2(2*o*c-2*a*l,1-2*d-2*m)}break;default:throw new Error(`Euler order ${t} not supported yet.`)}e.y=i,e.z=r,e.x=n}setFromEuler(e,t,i,r){r===void 0&&(r="XYZ");const n=Math.cos(e/2),o=Math.cos(t/2),a=Math.cos(i/2),l=Math.sin(e/2),c=Math.sin(t/2),u=Math.sin(i/2);return r==="XYZ"?(this.x=l*o*a+n*c*u,this.y=n*c*a-l*o*u,this.z=n*o*u+l*c*a,this.w=n*o*a-l*c*u):r==="YXZ"?(this.x=l*o*a+n*c*u,this.y=n*c*a-l*o*u,this.z=n*o*u-l*c*a,this.w=n*o*a+l*c*u):r==="ZXY"?(this.x=l*o*a-n*c*u,this.y=n*c*a+l*o*u,this.z=n*o*u+l*c*a,this.w=n*o*a-l*c*u):r==="ZYX"?(this.x=l*o*a-n*c*u,this.y=n*c*a+l*o*u,this.z=n*o*u-l*c*a,this.w=n*o*a+l*c*u):r==="YZX"?(this.x=l*o*a+n*c*u,this.y=n*c*a+l*o*u,this.z=n*o*u-l*c*a,this.w=n*o*a-l*c*u):r==="XZY"&&(this.x=l*o*a-n*c*u,this.y=n*c*a-l*o*u,this.z=n*o*u+l*c*a,this.w=n*o*a+l*c*u),this}clone(){return new ct(this.x,this.y,this.z,this.w)}slerp(e,t,i){i===void 0&&(i=new ct);const r=this.x,n=this.y,o=this.z,a=this.w;let l=e.x,c=e.y,u=e.z,d=e.w,h,m,g,f,p;return m=r*l+n*c+o*u+a*d,m<0&&(m=-m,l=-l,c=-c,u=-u,d=-d),1-m>1e-6?(h=Math.acos(m),g=Math.sin(h),f=Math.sin((1-t)*h)/g,p=Math.sin(t*h)/g):(f=1-t,p=t),i.x=f*r+p*l,i.y=f*n+p*c,i.z=f*o+p*u,i.w=f*a+p*d,i}integrate(e,t,i,r){r===void 0&&(r=new ct);const n=e.x*i.x,o=e.y*i.y,a=e.z*i.z,l=this.x,c=this.y,u=this.z,d=this.w,h=t*.5;return r.x+=h*(n*d+o*u-a*c),r.y+=h*(o*d+a*l-n*u),r.z+=h*(a*d+n*c-o*l),r.w+=h*(-n*l-o*c-a*u),r}}const m1=new w,g1=new w,v1={SPHERE:1,PLANE:2,BOX:4,COMPOUND:8,CONVEXPOLYHEDRON:16,HEIGHTFIELD:32,PARTICLE:64,CYLINDER:128,TRIMESH:256};class we{constructor(e){e===void 0&&(e={}),this.id=we.idCounter++,this.type=e.type||0,this.boundingSphereRadius=0,this.collisionResponse=e.collisionResponse?e.collisionResponse:!0,this.collisionFilterGroup=e.collisionFilterGroup!==void 0?e.collisionFilterGroup:1,this.collisionFilterMask=e.collisionFilterMask!==void 0?e.collisionFilterMask:-1,this.material=e.material?e.material:null,this.body=null}updateBoundingSphereRadius(){throw`computeBoundingSphereRadius() not implemented for shape type ${this.type}`}volume(){throw`volume() not implemented for shape type ${this.type}`}calculateLocalInertia(e,t){throw`calculateLocalInertia() not implemented for shape type ${this.type}`}calculateWorldAABB(e,t,i,r){throw`calculateWorldAABB() not implemented for shape type ${this.type}`}}we.idCounter=0;we.types=v1;class je{constructor(e){e===void 0&&(e={}),this.position=new w,this.quaternion=new ct,e.position&&this.position.copy(e.position),e.quaternion&&this.quaternion.copy(e.quaternion)}pointToLocal(e,t){return je.pointToLocalFrame(this.position,this.quaternion,e,t)}pointToWorld(e,t){return je.pointToWorldFrame(this.position,this.quaternion,e,t)}vectorToWorldFrame(e,t){return t===void 0&&(t=new w),this.quaternion.vmult(e,t),t}static pointToLocalFrame(e,t,i,r){return r===void 0&&(r=new w),i.vsub(e,r),t.conjugate(ic),ic.vmult(r,r),r}static pointToWorldFrame(e,t,i,r){return r===void 0&&(r=new w),t.vmult(i,r),r.vadd(e,r),r}static vectorToWorldFrame(e,t,i){return i===void 0&&(i=new w),e.vmult(t,i),i}static vectorToLocalFrame(e,t,i,r){return r===void 0&&(r=new w),t.w*=-1,t.vmult(i,r),t.w*=-1,r}}const ic=new ct;class wr extends we{constructor(e){e===void 0&&(e={});const{vertices:t=[],faces:i=[],normals:r=[],axes:n,boundingSphereRadius:o}=e;super({type:we.types.CONVEXPOLYHEDRON}),this.vertices=t,this.faces=i,this.faceNormals=r,this.faceNormals.length===0&&this.computeNormals(),o?this.boundingSphereRadius=o:this.updateBoundingSphereRadius(),this.worldVertices=[],this.worldVerticesNeedsUpdate=!0,this.worldFaceNormals=[],this.worldFaceNormalsNeedsUpdate=!0,this.uniqueAxes=n?n.slice():null,this.uniqueEdges=[],this.computeEdges()}computeEdges(){const e=this.faces,t=this.vertices,i=this.uniqueEdges;i.length=0;const r=new w;for(let n=0;n!==e.length;n++){const o=e[n],a=o.length;for(let l=0;l!==a;l++){const c=(l+1)%a;t[o[l]].vsub(t[o[c]],r),r.normalize();let u=!1;for(let d=0;d!==i.length;d++)if(i[d].almostEquals(r)||i[d].almostEquals(r)){u=!0;break}u||i.push(r.clone())}}}computeNormals(){this.faceNormals.length=this.faces.length;for(let e=0;e<this.faces.length;e++){for(let r=0;r<this.faces[e].length;r++)if(!this.vertices[this.faces[e][r]])throw new Error(`Vertex ${this.faces[e][r]} not found!`);const t=this.faceNormals[e]||new w;this.getFaceNormal(e,t),t.negate(t),this.faceNormals[e]=t;const i=this.vertices[this.faces[e][0]];if(t.dot(i)<0){console.error(`.faceNormals[${e}] = Vec3(${t.toString()}) looks like it points into the shape? The vertices follow. Make sure they are ordered CCW around the normal, using the right hand rule.`);for(let r=0;r<this.faces[e].length;r++)console.warn(`.vertices[${this.faces[e][r]}] = Vec3(${this.vertices[this.faces[e][r]].toString()})`)}}}getFaceNormal(e,t){const i=this.faces[e],r=this.vertices[i[0]],n=this.vertices[i[1]],o=this.vertices[i[2]];wr.computeNormal(r,n,o,t)}static computeNormal(e,t,i,r){const n=new w,o=new w;t.vsub(e,o),i.vsub(t,n),n.cross(o,r),r.isZero()||r.normalize()}clipAgainstHull(e,t,i,r,n,o,a,l,c){const u=new w;let d=-1,h=-Number.MAX_VALUE;for(let g=0;g<i.faces.length;g++){u.copy(i.faceNormals[g]),n.vmult(u,u);const f=u.dot(o);f>h&&(h=f,d=g)}const m=[];for(let g=0;g<i.faces[d].length;g++){const f=i.vertices[i.faces[d][g]],p=new w;p.copy(f),n.vmult(p,p),r.vadd(p,p),m.push(p)}d>=0&&this.clipFaceAgainstHull(o,e,t,m,a,l,c)}findSeparatingAxis(e,t,i,r,n,o,a,l){const c=new w,u=new w,d=new w,h=new w,m=new w,g=new w;let f=Number.MAX_VALUE;const p=this;if(p.uniqueAxes)for(let v=0;v!==p.uniqueAxes.length;v++){i.vmult(p.uniqueAxes[v],c);const _=p.testSepAxis(c,e,t,i,r,n);if(_===!1)return!1;_<f&&(f=_,o.copy(c))}else{const v=a?a.length:p.faces.length;for(let _=0;_<v;_++){const b=a?a[_]:_;c.copy(p.faceNormals[b]),i.vmult(c,c);const x=p.testSepAxis(c,e,t,i,r,n);if(x===!1)return!1;x<f&&(f=x,o.copy(c))}}if(e.uniqueAxes)for(let v=0;v!==e.uniqueAxes.length;v++){n.vmult(e.uniqueAxes[v],u);const _=p.testSepAxis(u,e,t,i,r,n);if(_===!1)return!1;_<f&&(f=_,o.copy(u))}else{const v=l?l.length:e.faces.length;for(let _=0;_<v;_++){const b=l?l[_]:_;u.copy(e.faceNormals[b]),n.vmult(u,u);const x=p.testSepAxis(u,e,t,i,r,n);if(x===!1)return!1;x<f&&(f=x,o.copy(u))}}for(let v=0;v!==p.uniqueEdges.length;v++){i.vmult(p.uniqueEdges[v],h);for(let _=0;_!==e.uniqueEdges.length;_++)if(n.vmult(e.uniqueEdges[_],m),h.cross(m,g),!g.almostZero()){g.normalize();const b=p.testSepAxis(g,e,t,i,r,n);if(b===!1)return!1;b<f&&(f=b,o.copy(g))}}return r.vsub(t,d),d.dot(o)>0&&o.negate(o),!0}testSepAxis(e,t,i,r,n,o){const a=this;wr.project(a,e,i,r,ka),wr.project(t,e,n,o,Ua);const l=ka[0],c=ka[1],u=Ua[0],d=Ua[1];if(l<d||u<c)return!1;const h=l-d,m=u-c;return h<m?h:m}calculateLocalInertia(e,t){const i=new w,r=new w;this.computeLocalAABB(r,i);const n=i.x-r.x,o=i.y-r.y,a=i.z-r.z;t.x=1/12*e*(2*o*2*o+2*a*2*a),t.y=1/12*e*(2*n*2*n+2*a*2*a),t.z=1/12*e*(2*o*2*o+2*n*2*n)}getPlaneConstantOfFace(e){const t=this.faces[e],i=this.faceNormals[e],r=this.vertices[t[0]];return-i.dot(r)}clipFaceAgainstHull(e,t,i,r,n,o,a){const l=new w,c=new w,u=new w,d=new w,h=new w,m=new w,g=new w,f=new w,p=this,v=[],_=r,b=v;let x=-1,S=Number.MAX_VALUE;for(let F=0;F<p.faces.length;F++){l.copy(p.faceNormals[F]),i.vmult(l,l);const z=l.dot(e);z<S&&(S=z,x=F)}if(x<0)return;const E=p.faces[x];E.connectedFaces=[];for(let F=0;F<p.faces.length;F++)for(let z=0;z<p.faces[F].length;z++)E.indexOf(p.faces[F][z])!==-1&&F!==x&&E.connectedFaces.indexOf(F)===-1&&E.connectedFaces.push(F);const R=E.length;for(let F=0;F<R;F++){const z=p.vertices[E[F]],G=p.vertices[E[(F+1)%R]];z.vsub(G,c),u.copy(c),i.vmult(u,u),t.vadd(u,u),d.copy(this.faceNormals[x]),i.vmult(d,d),t.vadd(d,d),u.cross(d,h),h.negate(h),m.copy(z),i.vmult(m,m),t.vadd(m,m);const N=E.connectedFaces[F];g.copy(this.faceNormals[N]);const D=this.getPlaneConstantOfFace(N);f.copy(g),i.vmult(f,f);const O=D-f.dot(t);for(this.clipFaceAgainstPlane(_,b,f,O);_.length;)_.shift();for(;b.length;)_.push(b.shift())}g.copy(this.faceNormals[x]);const y=this.getPlaneConstantOfFace(x);f.copy(g),i.vmult(f,f);const A=y-f.dot(t);for(let F=0;F<_.length;F++){let z=f.dot(_[F])+A;if(z<=n&&(z=n),z<=o){const G=_[F];if(z<=1e-6){const N={point:G,normal:f,depth:z};a.push(N)}}}}clipFaceAgainstPlane(e,t,i,r){let n,o;const a=e.length;if(a<2)return t;let l=e[e.length-1],c=e[0];n=i.dot(l)+r;for(let u=0;u<a;u++){if(c=e[u],o=i.dot(c)+r,n<0)if(o<0){const d=new w;d.copy(c),t.push(d)}else{const d=new w;l.lerp(c,n/(n-o),d),t.push(d)}else if(o<0){const d=new w;l.lerp(c,n/(n-o),d),t.push(d),t.push(c)}l=c,n=o}return t}computeWorldVertices(e,t){for(;this.worldVertices.length<this.vertices.length;)this.worldVertices.push(new w);const i=this.vertices,r=this.worldVertices;for(let n=0;n!==this.vertices.length;n++)t.vmult(i[n],r[n]),e.vadd(r[n],r[n]);this.worldVerticesNeedsUpdate=!1}computeLocalAABB(e,t){const i=this.vertices;e.set(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),t.set(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE);for(let r=0;r<this.vertices.length;r++){const n=i[r];n.x<e.x?e.x=n.x:n.x>t.x&&(t.x=n.x),n.y<e.y?e.y=n.y:n.y>t.y&&(t.y=n.y),n.z<e.z?e.z=n.z:n.z>t.z&&(t.z=n.z)}}computeWorldFaceNormals(e){const t=this.faceNormals.length;for(;this.worldFaceNormals.length<t;)this.worldFaceNormals.push(new w);const i=this.faceNormals,r=this.worldFaceNormals;for(let n=0;n!==t;n++)e.vmult(i[n],r[n]);this.worldFaceNormalsNeedsUpdate=!1}updateBoundingSphereRadius(){let e=0;const t=this.vertices;for(let i=0;i!==t.length;i++){const r=t[i].lengthSquared();r>e&&(e=r)}this.boundingSphereRadius=Math.sqrt(e)}calculateWorldAABB(e,t,i,r){const n=this.vertices;let o,a,l,c,u,d,h=new w;for(let m=0;m<n.length;m++){h.copy(n[m]),t.vmult(h,h),e.vadd(h,h);const g=h;(o===void 0||g.x<o)&&(o=g.x),(c===void 0||g.x>c)&&(c=g.x),(a===void 0||g.y<a)&&(a=g.y),(u===void 0||g.y>u)&&(u=g.y),(l===void 0||g.z<l)&&(l=g.z),(d===void 0||g.z>d)&&(d=g.z)}i.set(o,a,l),r.set(c,u,d)}volume(){return 4*Math.PI*this.boundingSphereRadius/3}getAveragePointLocal(e){e===void 0&&(e=new w);const t=this.vertices;for(let i=0;i<t.length;i++)e.vadd(t[i],e);return e.scale(1/t.length,e),e}transformAllPoints(e,t){const i=this.vertices.length,r=this.vertices;if(t){for(let n=0;n<i;n++){const o=r[n];t.vmult(o,o)}for(let n=0;n<this.faceNormals.length;n++){const o=this.faceNormals[n];t.vmult(o,o)}}if(e)for(let n=0;n<i;n++){const o=r[n];o.vadd(e,o)}}pointIsInside(e){const t=this.vertices,i=this.faces,r=this.faceNormals,n=null,o=new w;this.getAveragePointLocal(o);for(let a=0;a<this.faces.length;a++){let l=r[a];const c=t[i[a][0]],u=new w;e.vsub(c,u);const d=l.dot(u),h=new w;o.vsub(c,h);const m=l.dot(h);if(d<0&&m>0||d>0&&m<0)return!1}return n?1:-1}static project(e,t,i,r,n){const o=e.vertices.length,a=_1;let l=0,c=0;const u=x1,d=e.vertices;u.setZero(),je.vectorToLocalFrame(i,r,t,a),je.pointToLocalFrame(i,r,u,u);const h=u.dot(a);c=l=d[0].dot(a);for(let m=1;m<o;m++){const g=d[m].dot(a);g>l&&(l=g),g<c&&(c=g)}if(c-=h,l-=h,c>l){const m=c;c=l,l=m}n[0]=l,n[1]=c}}const ka=[],Ua=[];new w;const _1=new w,x1=new w;class Fo extends we{constructor(e){super({type:we.types.BOX}),this.halfExtents=e,this.convexPolyhedronRepresentation=null,this.updateConvexPolyhedronRepresentation(),this.updateBoundingSphereRadius()}updateConvexPolyhedronRepresentation(){const e=this.halfExtents.x,t=this.halfExtents.y,i=this.halfExtents.z,r=w,n=[new r(-e,-t,-i),new r(e,-t,-i),new r(e,t,-i),new r(-e,t,-i),new r(-e,-t,i),new r(e,-t,i),new r(e,t,i),new r(-e,t,i)],o=[[3,2,1,0],[4,5,6,7],[5,4,0,1],[2,3,7,6],[0,4,7,3],[1,2,6,5]],a=[new r(0,0,1),new r(0,1,0),new r(1,0,0)],l=new wr({vertices:n,faces:o,axes:a});this.convexPolyhedronRepresentation=l,l.material=this.material}calculateLocalInertia(e,t){return t===void 0&&(t=new w),Fo.calculateInertia(this.halfExtents,e,t),t}static calculateInertia(e,t,i){const r=e;i.x=1/12*t*(2*r.y*2*r.y+2*r.z*2*r.z),i.y=1/12*t*(2*r.x*2*r.x+2*r.z*2*r.z),i.z=1/12*t*(2*r.y*2*r.y+2*r.x*2*r.x)}getSideNormals(e,t){const i=e,r=this.halfExtents;if(i[0].set(r.x,0,0),i[1].set(0,r.y,0),i[2].set(0,0,r.z),i[3].set(-r.x,0,0),i[4].set(0,-r.y,0),i[5].set(0,0,-r.z),t!==void 0)for(let n=0;n!==i.length;n++)t.vmult(i[n],i[n]);return i}volume(){return 8*this.halfExtents.x*this.halfExtents.y*this.halfExtents.z}updateBoundingSphereRadius(){this.boundingSphereRadius=this.halfExtents.length()}forEachWorldCorner(e,t,i){const r=this.halfExtents,n=[[r.x,r.y,r.z],[-r.x,r.y,r.z],[-r.x,-r.y,r.z],[-r.x,-r.y,-r.z],[r.x,-r.y,-r.z],[r.x,r.y,-r.z],[-r.x,r.y,-r.z],[r.x,-r.y,r.z]];for(let o=0;o<n.length;o++)Ji.set(n[o][0],n[o][1],n[o][2]),t.vmult(Ji,Ji),e.vadd(Ji,Ji),i(Ji.x,Ji.y,Ji.z)}calculateWorldAABB(e,t,i,r){const n=this.halfExtents;ui[0].set(n.x,n.y,n.z),ui[1].set(-n.x,n.y,n.z),ui[2].set(-n.x,-n.y,n.z),ui[3].set(-n.x,-n.y,-n.z),ui[4].set(n.x,-n.y,-n.z),ui[5].set(n.x,n.y,-n.z),ui[6].set(-n.x,n.y,-n.z),ui[7].set(n.x,-n.y,n.z);const o=ui[0];t.vmult(o,o),e.vadd(o,o),r.copy(o),i.copy(o);for(let a=1;a<8;a++){const l=ui[a];t.vmult(l,l),e.vadd(l,l);const c=l.x,u=l.y,d=l.z;c>r.x&&(r.x=c),u>r.y&&(r.y=u),d>r.z&&(r.z=d),c<i.x&&(i.x=c),u<i.y&&(i.y=u),d<i.z&&(i.z=d)}}}const Ji=new w,ui=[new w,new w,new w,new w,new w,new w,new w,new w],Io={DYNAMIC:1,STATIC:2,KINEMATIC:4},zo={AWAKE:0,SLEEPY:1,SLEEPING:2};class pe extends Hu{constructor(e){e===void 0&&(e={}),super(),this.id=pe.idCounter++,this.index=-1,this.world=null,this.vlambda=new w,this.collisionFilterGroup=typeof e.collisionFilterGroup=="number"?e.collisionFilterGroup:1,this.collisionFilterMask=typeof e.collisionFilterMask=="number"?e.collisionFilterMask:-1,this.collisionResponse=typeof e.collisionResponse=="boolean"?e.collisionResponse:!0,this.position=new w,this.previousPosition=new w,this.interpolatedPosition=new w,this.initPosition=new w,e.position&&(this.position.copy(e.position),this.previousPosition.copy(e.position),this.interpolatedPosition.copy(e.position),this.initPosition.copy(e.position)),this.velocity=new w,e.velocity&&this.velocity.copy(e.velocity),this.initVelocity=new w,this.force=new w;const t=typeof e.mass=="number"?e.mass:0;this.mass=t,this.invMass=t>0?1/t:0,this.material=e.material||null,this.linearDamping=typeof e.linearDamping=="number"?e.linearDamping:.01,this.type=t<=0?pe.STATIC:pe.DYNAMIC,typeof e.type==typeof pe.STATIC&&(this.type=e.type),this.allowSleep=typeof e.allowSleep<"u"?e.allowSleep:!0,this.sleepState=pe.AWAKE,this.sleepSpeedLimit=typeof e.sleepSpeedLimit<"u"?e.sleepSpeedLimit:.1,this.sleepTimeLimit=typeof e.sleepTimeLimit<"u"?e.sleepTimeLimit:1,this.timeLastSleepy=0,this.wakeUpAfterNarrowphase=!1,this.torque=new w,this.quaternion=new ct,this.initQuaternion=new ct,this.previousQuaternion=new ct,this.interpolatedQuaternion=new ct,e.quaternion&&(this.quaternion.copy(e.quaternion),this.initQuaternion.copy(e.quaternion),this.previousQuaternion.copy(e.quaternion),this.interpolatedQuaternion.copy(e.quaternion)),this.angularVelocity=new w,e.angularVelocity&&this.angularVelocity.copy(e.angularVelocity),this.initAngularVelocity=new w,this.shapes=[],this.shapeOffsets=[],this.shapeOrientations=[],this.inertia=new w,this.invInertia=new w,this.invInertiaWorld=new ai,this.invMassSolve=0,this.invInertiaSolve=new w,this.invInertiaWorldSolve=new ai,this.fixedRotation=typeof e.fixedRotation<"u"?e.fixedRotation:!1,this.angularDamping=typeof e.angularDamping<"u"?e.angularDamping:.01,this.linearFactor=new w(1,1,1),e.linearFactor&&this.linearFactor.copy(e.linearFactor),this.angularFactor=new w(1,1,1),e.angularFactor&&this.angularFactor.copy(e.angularFactor),this.aabb=new qt,this.aabbNeedsUpdate=!0,this.boundingRadius=0,this.wlambda=new w,this.isTrigger=!!e.isTrigger,e.shape&&this.addShape(e.shape),this.updateMassProperties()}wakeUp(){const e=this.sleepState;this.sleepState=pe.AWAKE,this.wakeUpAfterNarrowphase=!1,e===pe.SLEEPING&&this.dispatchEvent(pe.wakeupEvent)}sleep(){this.sleepState=pe.SLEEPING,this.velocity.set(0,0,0),this.angularVelocity.set(0,0,0),this.wakeUpAfterNarrowphase=!1}sleepTick(e){if(this.allowSleep){const t=this.sleepState,i=this.velocity.lengthSquared()+this.angularVelocity.lengthSquared(),r=this.sleepSpeedLimit**2;t===pe.AWAKE&&i<r?(this.sleepState=pe.SLEEPY,this.timeLastSleepy=e,this.dispatchEvent(pe.sleepyEvent)):t===pe.SLEEPY&&i>r?this.wakeUp():t===pe.SLEEPY&&e-this.timeLastSleepy>this.sleepTimeLimit&&(this.sleep(),this.dispatchEvent(pe.sleepEvent))}}updateSolveMassProperties(){this.sleepState===pe.SLEEPING||this.type===pe.KINEMATIC?(this.invMassSolve=0,this.invInertiaSolve.setZero(),this.invInertiaWorldSolve.setZero()):(this.invMassSolve=this.invMass,this.invInertiaSolve.copy(this.invInertia),this.invInertiaWorldSolve.copy(this.invInertiaWorld))}pointToLocalFrame(e,t){return t===void 0&&(t=new w),e.vsub(this.position,t),this.quaternion.conjugate().vmult(t,t),t}vectorToLocalFrame(e,t){return t===void 0&&(t=new w),this.quaternion.conjugate().vmult(e,t),t}pointToWorldFrame(e,t){return t===void 0&&(t=new w),this.quaternion.vmult(e,t),t.vadd(this.position,t),t}vectorToWorldFrame(e,t){return t===void 0&&(t=new w),this.quaternion.vmult(e,t),t}addShape(e,t,i){const r=new w,n=new ct;return t&&r.copy(t),i&&n.copy(i),this.shapes.push(e),this.shapeOffsets.push(r),this.shapeOrientations.push(n),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=this,this}removeShape(e){const t=this.shapes.indexOf(e);return t===-1?(console.warn("Shape does not belong to the body"),this):(this.shapes.splice(t,1),this.shapeOffsets.splice(t,1),this.shapeOrientations.splice(t,1),this.updateMassProperties(),this.updateBoundingRadius(),this.aabbNeedsUpdate=!0,e.body=null,this)}updateBoundingRadius(){const e=this.shapes,t=this.shapeOffsets,i=e.length;let r=0;for(let n=0;n!==i;n++){const o=e[n];o.updateBoundingSphereRadius();const a=t[n].length(),l=o.boundingSphereRadius;a+l>r&&(r=a+l)}this.boundingRadius=r}updateAABB(){const e=this.shapes,t=this.shapeOffsets,i=this.shapeOrientations,r=e.length,n=y1,o=b1,a=this.quaternion,l=this.aabb,c=w1;for(let u=0;u!==r;u++){const d=e[u];a.vmult(t[u],n),n.vadd(this.position,n),a.mult(i[u],o),d.calculateWorldAABB(n,o,c.lowerBound,c.upperBound),u===0?l.copy(c):l.extend(c)}this.aabbNeedsUpdate=!1}updateInertiaWorld(e){const t=this.invInertia;if(!(t.x===t.y&&t.y===t.z&&!e)){const i=M1,r=S1;i.setRotationFromQuaternion(this.quaternion),i.transpose(r),i.scale(t,i),i.mmult(r,this.invInertiaWorld)}}applyForce(e,t){if(t===void 0&&(t=new w),this.type!==pe.DYNAMIC)return;this.sleepState===pe.SLEEPING&&this.wakeUp();const i=E1;t.cross(e,i),this.force.vadd(e,this.force),this.torque.vadd(i,this.torque)}applyLocalForce(e,t){if(t===void 0&&(t=new w),this.type!==pe.DYNAMIC)return;const i=T1,r=A1;this.vectorToWorldFrame(e,i),this.vectorToWorldFrame(t,r),this.applyForce(i,r)}applyTorque(e){this.type===pe.DYNAMIC&&(this.sleepState===pe.SLEEPING&&this.wakeUp(),this.torque.vadd(e,this.torque))}applyImpulse(e,t){if(t===void 0&&(t=new w),this.type!==pe.DYNAMIC)return;this.sleepState===pe.SLEEPING&&this.wakeUp();const i=t,r=C1;r.copy(e),r.scale(this.invMass,r),this.velocity.vadd(r,this.velocity);const n=L1;i.cross(e,n),this.invInertiaWorld.vmult(n,n),this.angularVelocity.vadd(n,this.angularVelocity)}applyLocalImpulse(e,t){if(t===void 0&&(t=new w),this.type!==pe.DYNAMIC)return;const i=R1,r=P1;this.vectorToWorldFrame(e,i),this.vectorToWorldFrame(t,r),this.applyImpulse(i,r)}updateMassProperties(){const e=D1;this.invMass=this.mass>0?1/this.mass:0;const t=this.inertia,i=this.fixedRotation;this.updateAABB(),e.set((this.aabb.upperBound.x-this.aabb.lowerBound.x)/2,(this.aabb.upperBound.y-this.aabb.lowerBound.y)/2,(this.aabb.upperBound.z-this.aabb.lowerBound.z)/2),Fo.calculateInertia(e,this.mass,t),this.invInertia.set(t.x>0&&!i?1/t.x:0,t.y>0&&!i?1/t.y:0,t.z>0&&!i?1/t.z:0),this.updateInertiaWorld(!0)}getVelocityAtWorldPoint(e,t){const i=new w;return e.vsub(this.position,i),this.angularVelocity.cross(i,t),this.velocity.vadd(t,t),t}integrate(e,t,i){if(this.previousPosition.copy(this.position),this.previousQuaternion.copy(this.quaternion),!(this.type===pe.DYNAMIC||this.type===pe.KINEMATIC)||this.sleepState===pe.SLEEPING)return;const r=this.velocity,n=this.angularVelocity,o=this.position,a=this.force,l=this.torque,c=this.quaternion,u=this.invMass,d=this.invInertiaWorld,h=this.linearFactor,m=u*e;r.x+=a.x*m*h.x,r.y+=a.y*m*h.y,r.z+=a.z*m*h.z;const g=d.elements,f=this.angularFactor,p=l.x*f.x,v=l.y*f.y,_=l.z*f.z;n.x+=e*(g[0]*p+g[1]*v+g[2]*_),n.y+=e*(g[3]*p+g[4]*v+g[5]*_),n.z+=e*(g[6]*p+g[7]*v+g[8]*_),o.x+=r.x*e,o.y+=r.y*e,o.z+=r.z*e,c.integrate(this.angularVelocity,e,this.angularFactor,c),t&&(i?c.normalizeFast():c.normalize()),this.aabbNeedsUpdate=!0,this.updateInertiaWorld()}}pe.idCounter=0;pe.COLLIDE_EVENT_NAME="collide";pe.DYNAMIC=Io.DYNAMIC;pe.STATIC=Io.STATIC;pe.KINEMATIC=Io.KINEMATIC;pe.AWAKE=zo.AWAKE;pe.SLEEPY=zo.SLEEPY;pe.SLEEPING=zo.SLEEPING;pe.wakeupEvent={type:"wakeup"};pe.sleepyEvent={type:"sleepy"};pe.sleepEvent={type:"sleep"};const y1=new w,b1=new ct,w1=new qt,M1=new ai,S1=new ai;new ai;const E1=new w,T1=new w,A1=new w,C1=new w,L1=new w,R1=new w,P1=new w,D1=new w;class F1{constructor(){this.world=null,this.useBoundingBoxes=!1,this.dirty=!0}collisionPairs(e,t,i){throw new Error("collisionPairs not implemented for this BroadPhase class!")}needBroadphaseCollision(e,t){return!((e.collisionFilterGroup&t.collisionFilterMask)===0||(t.collisionFilterGroup&e.collisionFilterMask)===0||((e.type&pe.STATIC)!==0||e.sleepState===pe.SLEEPING)&&((t.type&pe.STATIC)!==0||t.sleepState===pe.SLEEPING))}intersectionTest(e,t,i,r){this.useBoundingBoxes?this.doBoundingBoxBroadphase(e,t,i,r):this.doBoundingSphereBroadphase(e,t,i,r)}doBoundingSphereBroadphase(e,t,i,r){const n=I1;t.position.vsub(e.position,n);const o=(e.boundingRadius+t.boundingRadius)**2;n.lengthSquared()<o&&(i.push(e),r.push(t))}doBoundingBoxBroadphase(e,t,i,r){e.aabbNeedsUpdate&&e.updateAABB(),t.aabbNeedsUpdate&&t.updateAABB(),e.aabb.overlaps(t.aabb)&&(i.push(e),r.push(t))}makePairsUnique(e,t){const i=z1,r=N1,n=O1,o=e.length;for(let a=0;a!==o;a++)r[a]=e[a],n[a]=t[a];e.length=0,t.length=0;for(let a=0;a!==o;a++){const l=r[a].id,c=n[a].id,u=l<c?`${l},${c}`:`${c},${l}`;i[u]=a,i.keys.push(u)}for(let a=0;a!==i.keys.length;a++){const l=i.keys.pop(),c=i[l];e.push(r[c]),t.push(n[c]),delete i[l]}}setWorld(e){}static boundingSphereCheck(e,t){const i=new w;e.position.vsub(t.position,i);const r=e.shapes[0],n=t.shapes[0];return Math.pow(r.boundingSphereRadius+n.boundingSphereRadius,2)>i.lengthSquared()}aabbQuery(e,t,i){return console.warn(".aabbQuery is not implemented in this Broadphase subclass."),[]}}const I1=new w;new w;new ct;new w;const z1={keys:[]},N1=[],O1=[];new w;new w;new w;class Vu extends F1{constructor(){super()}collisionPairs(e,t,i){const r=e.bodies,n=r.length;let o,a;for(let l=0;l!==n;l++)for(let c=0;c!==l;c++)o=r[l],a=r[c],this.needBroadphaseCollision(o,a)&&this.intersectionTest(o,a,t,i)}aabbQuery(e,t,i){i===void 0&&(i=[]);for(let r=0;r<e.bodies.length;r++){const n=e.bodies[r];n.aabbNeedsUpdate&&n.updateAABB(),n.aabb.overlaps(t)&&i.push(n)}return i}}class Nn{constructor(){this.rayFromWorld=new w,this.rayToWorld=new w,this.hitNormalWorld=new w,this.hitPointWorld=new w,this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}reset(){this.rayFromWorld.setZero(),this.rayToWorld.setZero(),this.hitNormalWorld.setZero(),this.hitPointWorld.setZero(),this.hasHit=!1,this.shape=null,this.body=null,this.hitFaceIndex=-1,this.distance=-1,this.shouldStop=!1}abort(){this.shouldStop=!0}set(e,t,i,r,n,o,a){this.rayFromWorld.copy(e),this.rayToWorld.copy(t),this.hitNormalWorld.copy(i),this.hitPointWorld.copy(r),this.shape=n,this.body=o,this.distance=a}}let Wu,ju,qu,Yu,Xu,$u,Zu;const No={CLOSEST:1,ANY:2,ALL:4};Wu=we.types.SPHERE;ju=we.types.PLANE;qu=we.types.BOX;Yu=we.types.CYLINDER;Xu=we.types.CONVEXPOLYHEDRON;$u=we.types.HEIGHTFIELD;Zu=we.types.TRIMESH;class ot{get[Wu](){return this._intersectSphere}get[ju](){return this._intersectPlane}get[qu](){return this._intersectBox}get[Yu](){return this._intersectConvex}get[Xu](){return this._intersectConvex}get[$u](){return this._intersectHeightfield}get[Zu](){return this._intersectTrimesh}constructor(e,t){e===void 0&&(e=new w),t===void 0&&(t=new w),this.from=e.clone(),this.to=t.clone(),this.direction=new w,this.precision=1e-4,this.checkCollisionResponse=!0,this.skipBackfaces=!1,this.collisionFilterMask=-1,this.collisionFilterGroup=-1,this.mode=ot.ANY,this.result=new Nn,this.hasHit=!1,this.callback=i=>{}}intersectWorld(e,t){return this.mode=t.mode||ot.ANY,this.result=t.result||new Nn,this.skipBackfaces=!!t.skipBackfaces,this.collisionFilterMask=typeof t.collisionFilterMask<"u"?t.collisionFilterMask:-1,this.collisionFilterGroup=typeof t.collisionFilterGroup<"u"?t.collisionFilterGroup:-1,this.checkCollisionResponse=typeof t.checkCollisionResponse<"u"?t.checkCollisionResponse:!0,t.from&&this.from.copy(t.from),t.to&&this.to.copy(t.to),this.callback=t.callback||(()=>{}),this.hasHit=!1,this.result.reset(),this.updateDirection(),this.getAABB(rc),Ga.length=0,e.broadphase.aabbQuery(e,rc,Ga),this.intersectBodies(Ga),this.hasHit}intersectBody(e,t){t&&(this.result=t,this.updateDirection());const i=this.checkCollisionResponse;if(i&&!e.collisionResponse||(this.collisionFilterGroup&e.collisionFilterMask)===0||(e.collisionFilterGroup&this.collisionFilterMask)===0)return;const r=B1,n=k1;for(let o=0,a=e.shapes.length;o<a;o++){const l=e.shapes[o];if(!(i&&!l.collisionResponse)&&(e.quaternion.mult(e.shapeOrientations[o],n),e.quaternion.vmult(e.shapeOffsets[o],r),r.vadd(e.position,r),this.intersectShape(l,n,r,e),this.result.shouldStop))break}}intersectBodies(e,t){t&&(this.result=t,this.updateDirection());for(let i=0,r=e.length;!this.result.shouldStop&&i<r;i++)this.intersectBody(e[i])}updateDirection(){this.to.vsub(this.from,this.direction),this.direction.normalize()}intersectShape(e,t,i,r){const n=this.from;if(Q1(n,this.direction,i)>e.boundingSphereRadius)return;const o=this[e.type];o&&o.call(this,e,t,i,r,e)}_intersectBox(e,t,i,r,n){return this._intersectConvex(e.convexPolyhedronRepresentation,t,i,r,n)}_intersectPlane(e,t,i,r,n){const o=this.from,a=this.to,l=this.direction,c=new w(0,0,1);t.vmult(c,c);const u=new w;o.vsub(i,u);const d=u.dot(c);a.vsub(i,u);const h=u.dot(c);if(d*h>0||o.distanceTo(a)<d)return;const m=c.dot(l);if(Math.abs(m)<this.precision)return;const g=new w,f=new w,p=new w;o.vsub(i,g);const v=-c.dot(g)/m;l.scale(v,f),o.vadd(f,p),this.reportIntersection(c,p,n,r,-1)}getAABB(e){const{lowerBound:t,upperBound:i}=e,r=this.to,n=this.from;t.x=Math.min(r.x,n.x),t.y=Math.min(r.y,n.y),t.z=Math.min(r.z,n.z),i.x=Math.max(r.x,n.x),i.y=Math.max(r.y,n.y),i.z=Math.max(r.z,n.z)}_intersectHeightfield(e,t,i,r,n){e.data,e.elementSize;const o=U1;o.from.copy(this.from),o.to.copy(this.to),je.pointToLocalFrame(i,t,o.from,o.from),je.pointToLocalFrame(i,t,o.to,o.to),o.updateDirection();const a=G1;let l,c,u,d;l=c=0,u=d=e.data.length-1;const h=new qt;o.getAABB(h),e.getIndexOfPosition(h.lowerBound.x,h.lowerBound.y,a,!0),l=Math.max(l,a[0]),c=Math.max(c,a[1]),e.getIndexOfPosition(h.upperBound.x,h.upperBound.y,a,!0),u=Math.min(u,a[0]+1),d=Math.min(d,a[1]+1);for(let m=l;m<u;m++)for(let g=c;g<d;g++){if(this.result.shouldStop)return;if(e.getAabbAtIndex(m,g,h),!!h.overlapsRay(o)){if(e.getConvexTrianglePillar(m,g,!1),je.pointToWorldFrame(i,t,e.pillarOffset,vn),this._intersectConvex(e.pillarConvex,t,vn,r,n,sc),this.result.shouldStop)return;e.getConvexTrianglePillar(m,g,!0),je.pointToWorldFrame(i,t,e.pillarOffset,vn),this._intersectConvex(e.pillarConvex,t,vn,r,n,sc)}}}_intersectSphere(e,t,i,r,n){const o=this.from,a=this.to,l=e.radius,c=(a.x-o.x)**2+(a.y-o.y)**2+(a.z-o.z)**2,u=2*((a.x-o.x)*(o.x-i.x)+(a.y-o.y)*(o.y-i.y)+(a.z-o.z)*(o.z-i.z)),d=(o.x-i.x)**2+(o.y-i.y)**2+(o.z-i.z)**2-l**2,h=u**2-4*c*d,m=H1,g=V1;if(!(h<0))if(h===0)o.lerp(a,h,m),m.vsub(i,g),g.normalize(),this.reportIntersection(g,m,n,r,-1);else{const f=(-u-Math.sqrt(h))/(2*c),p=(-u+Math.sqrt(h))/(2*c);if(f>=0&&f<=1&&(o.lerp(a,f,m),m.vsub(i,g),g.normalize(),this.reportIntersection(g,m,n,r,-1)),this.result.shouldStop)return;p>=0&&p<=1&&(o.lerp(a,p,m),m.vsub(i,g),g.normalize(),this.reportIntersection(g,m,n,r,-1))}}_intersectConvex(e,t,i,r,n,o){const a=W1,l=nc,c=o&&o.faceList||null,u=e.faces,d=e.vertices,h=e.faceNormals,m=this.direction,g=this.from,f=this.to,p=g.distanceTo(f),v=c?c.length:u.length,_=this.result;for(let b=0;!_.shouldStop&&b<v;b++){const x=c?c[b]:b,S=u[x],E=h[x],R=t,y=i;l.copy(d[S[0]]),R.vmult(l,l),l.vadd(y,l),l.vsub(g,l),R.vmult(E,a);const A=m.dot(a);if(Math.abs(A)<this.precision)continue;const F=a.dot(l)/A;if(!(F<0)){m.scale(F,Ft),Ft.vadd(g,Ft),si.copy(d[S[0]]),R.vmult(si,si),y.vadd(si,si);for(let z=1;!_.shouldStop&&z<S.length-1;z++){hi.copy(d[S[z]]),di.copy(d[S[z+1]]),R.vmult(hi,hi),R.vmult(di,di),y.vadd(hi,hi),y.vadd(di,di);const G=Ft.distanceTo(g);!(ot.pointInTriangle(Ft,si,hi,di)||ot.pointInTriangle(Ft,hi,si,di))||G>p||this.reportIntersection(a,Ft,n,r,x)}}}}_intersectTrimesh(e,t,i,r,n,o){const a=j1,l=K1,c=J1,u=nc,d=q1,h=Y1,m=X1,g=Z1,f=$1,p=e.indices;e.vertices;const v=this.from,_=this.to,b=this.direction;c.position.copy(i),c.quaternion.copy(t),je.vectorToLocalFrame(i,t,b,d),je.pointToLocalFrame(i,t,v,h),je.pointToLocalFrame(i,t,_,m),m.x*=e.scale.x,m.y*=e.scale.y,m.z*=e.scale.z,h.x*=e.scale.x,h.y*=e.scale.y,h.z*=e.scale.z,m.vsub(h,d),d.normalize();const x=h.distanceSquared(m);e.tree.rayQuery(this,c,l);for(let S=0,E=l.length;!this.result.shouldStop&&S!==E;S++){const R=l[S];e.getNormal(R,a),e.getVertex(p[R*3],si),si.vsub(h,u);const y=d.dot(a),A=a.dot(u)/y;if(A<0)continue;d.scale(A,Ft),Ft.vadd(h,Ft),e.getVertex(p[R*3+1],hi),e.getVertex(p[R*3+2],di);const F=Ft.distanceSquared(h);!(ot.pointInTriangle(Ft,hi,si,di)||ot.pointInTriangle(Ft,si,hi,di))||F>x||(je.vectorToWorldFrame(t,a,f),je.pointToWorldFrame(i,t,Ft,g),this.reportIntersection(f,g,n,r,R))}l.length=0}reportIntersection(e,t,i,r,n){const o=this.from,a=this.to,l=o.distanceTo(t),c=this.result;if(!(this.skipBackfaces&&e.dot(this.direction)>0))switch(c.hitFaceIndex=typeof n<"u"?n:-1,this.mode){case ot.ALL:this.hasHit=!0,c.set(o,a,e,t,i,r,l),c.hasHit=!0,this.callback(c);break;case ot.CLOSEST:(l<c.distance||!c.hasHit)&&(this.hasHit=!0,c.hasHit=!0,c.set(o,a,e,t,i,r,l));break;case ot.ANY:this.hasHit=!0,c.hasHit=!0,c.set(o,a,e,t,i,r,l),c.shouldStop=!0;break}}static pointInTriangle(e,t,i,r){r.vsub(t,gr),i.vsub(t,ms),e.vsub(t,Ha);const n=gr.dot(gr),o=gr.dot(ms),a=gr.dot(Ha),l=ms.dot(ms),c=ms.dot(Ha);let u,d;return(u=l*a-o*c)>=0&&(d=n*c-o*a)>=0&&u+d<n*l-o*o}}ot.CLOSEST=No.CLOSEST;ot.ANY=No.ANY;ot.ALL=No.ALL;const rc=new qt,Ga=[],ms=new w,Ha=new w,B1=new w,k1=new ct,Ft=new w,si=new w,hi=new w,di=new w;new w;new Nn;const sc={faceList:[0]},vn=new w,U1=new ot,G1=[],H1=new w,V1=new w,W1=new w;new w;new w;const nc=new w,j1=new w,q1=new w,Y1=new w,X1=new w,$1=new w,Z1=new w;new qt;const K1=[],J1=new je,gr=new w,_n=new w;function Q1(s,e,t){t.vsub(s,gr);const i=gr.dot(e);return e.scale(i,_n),_n.vadd(s,_n),t.distanceTo(_n)}class ev{static defaults(e,t){e===void 0&&(e={});for(let i in t)i in e||(e[i]=t[i]);return e}}class ac{constructor(){this.spatial=new w,this.rotational=new w}multiplyElement(e){return e.spatial.dot(this.spatial)+e.rotational.dot(this.rotational)}multiplyVectors(e,t){return e.dot(this.spatial)+t.dot(this.rotational)}}class Ws{constructor(e,t,i,r){i===void 0&&(i=-1e6),r===void 0&&(r=1e6),this.id=Ws.idCounter++,this.minForce=i,this.maxForce=r,this.bi=e,this.bj=t,this.a=0,this.b=0,this.eps=0,this.jacobianElementA=new ac,this.jacobianElementB=new ac,this.enabled=!0,this.multiplier=0,this.setSpookParams(1e7,4,1/60)}setSpookParams(e,t,i){const r=t,n=e,o=i;this.a=4/(o*(1+4*r)),this.b=4*r/(1+4*r),this.eps=4/(o*o*n*(1+4*r))}computeB(e,t,i){const r=this.computeGW(),n=this.computeGq(),o=this.computeGiMf();return-n*e-r*t-o*i}computeGq(){const e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,r=this.bj,n=i.position,o=r.position;return e.spatial.dot(n)+t.spatial.dot(o)}computeGW(){const e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,r=this.bj,n=i.velocity,o=r.velocity,a=i.angularVelocity,l=r.angularVelocity;return e.multiplyVectors(n,a)+t.multiplyVectors(o,l)}computeGWlambda(){const e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,r=this.bj,n=i.vlambda,o=r.vlambda,a=i.wlambda,l=r.wlambda;return e.multiplyVectors(n,a)+t.multiplyVectors(o,l)}computeGiMf(){const e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,r=this.bj,n=i.force,o=i.torque,a=r.force,l=r.torque,c=i.invMassSolve,u=r.invMassSolve;return n.scale(c,oc),a.scale(u,lc),i.invInertiaWorldSolve.vmult(o,cc),r.invInertiaWorldSolve.vmult(l,uc),e.multiplyVectors(oc,cc)+t.multiplyVectors(lc,uc)}computeGiMGt(){const e=this.jacobianElementA,t=this.jacobianElementB,i=this.bi,r=this.bj,n=i.invMassSolve,o=r.invMassSolve,a=i.invInertiaWorldSolve,l=r.invInertiaWorldSolve;let c=n+o;return a.vmult(e.rotational,xn),c+=xn.dot(e.rotational),l.vmult(t.rotational,xn),c+=xn.dot(t.rotational),c}addToWlambda(e){const t=this.jacobianElementA,i=this.jacobianElementB,r=this.bi,n=this.bj,o=tv;r.vlambda.addScaledVector(r.invMassSolve*e,t.spatial,r.vlambda),n.vlambda.addScaledVector(n.invMassSolve*e,i.spatial,n.vlambda),r.invInertiaWorldSolve.vmult(t.rotational,o),r.wlambda.addScaledVector(e,o,r.wlambda),n.invInertiaWorldSolve.vmult(i.rotational,o),n.wlambda.addScaledVector(e,o,n.wlambda)}computeC(){return this.computeGiMGt()+this.eps}}Ws.idCounter=0;const oc=new w,lc=new w,cc=new w,uc=new w,xn=new w,tv=new w;class iv extends Ws{constructor(e,t,i){i===void 0&&(i=1e6),super(e,t,0,i),this.restitution=0,this.ri=new w,this.rj=new w,this.ni=new w}computeB(e){const t=this.a,i=this.b,r=this.bi,n=this.bj,o=this.ri,a=this.rj,l=rv,c=sv,u=r.velocity,d=r.angularVelocity;r.force,r.torque;const h=n.velocity,m=n.angularVelocity;n.force,n.torque;const g=nv,f=this.jacobianElementA,p=this.jacobianElementB,v=this.ni;o.cross(v,l),a.cross(v,c),v.negate(f.spatial),l.negate(f.rotational),p.spatial.copy(v),p.rotational.copy(c),g.copy(n.position),g.vadd(a,g),g.vsub(r.position,g),g.vsub(o,g);const _=v.dot(g),b=this.restitution+1,x=b*h.dot(v)-b*u.dot(v)+m.dot(c)-d.dot(l),S=this.computeGiMf();return-_*t-x*i-e*S}getImpactVelocityAlongNormal(){const e=av,t=ov,i=lv,r=cv,n=uv;return this.bi.position.vadd(this.ri,i),this.bj.position.vadd(this.rj,r),this.bi.getVelocityAtWorldPoint(i,e),this.bj.getVelocityAtWorldPoint(r,t),e.vsub(t,n),this.ni.dot(n)}}const rv=new w,sv=new w,nv=new w,av=new w,ov=new w,lv=new w,cv=new w,uv=new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;class hc extends Ws{constructor(e,t,i){super(e,t,-i,i),this.ri=new w,this.rj=new w,this.t=new w}computeB(e){this.a;const t=this.b;this.bi,this.bj;const i=this.ri,r=this.rj,n=hv,o=dv,a=this.t;i.cross(a,n),r.cross(a,o);const l=this.jacobianElementA,c=this.jacobianElementB;a.negate(l.spatial),n.negate(l.rotational),c.spatial.copy(a),c.rotational.copy(o);const u=this.computeGW(),d=this.computeGiMf();return-u*t-e*d}}const hv=new w,dv=new w;class Mr{constructor(e,t,i){i=ev.defaults(i,{friction:.3,restitution:.3,contactEquationStiffness:1e7,contactEquationRelaxation:3,frictionEquationStiffness:1e7,frictionEquationRelaxation:3}),this.id=Mr.idCounter++,this.materials=[e,t],this.friction=i.friction,this.restitution=i.restitution,this.contactEquationStiffness=i.contactEquationStiffness,this.contactEquationRelaxation=i.contactEquationRelaxation,this.frictionEquationStiffness=i.frictionEquationStiffness,this.frictionEquationRelaxation=i.frictionEquationRelaxation}}Mr.idCounter=0;class Sr{constructor(e){e===void 0&&(e={});let t="";typeof e=="string"&&(t=e,e={}),this.name=t,this.id=Sr.idCounter++,this.friction=typeof e.friction<"u"?e.friction:-1,this.restitution=typeof e.restitution<"u"?e.restitution:-1}}Sr.idCounter=0;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new ot;new w;new w;new w;new w(1,0,0),new w(0,1,0),new w(0,0,1);new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;class fv extends wr{constructor(e,t,i,r){if(e===void 0&&(e=1),t===void 0&&(t=1),i===void 0&&(i=1),r===void 0&&(r=8),e<0)throw new Error("The cylinder radiusTop cannot be negative.");if(t<0)throw new Error("The cylinder radiusBottom cannot be negative.");const n=r,o=[],a=[],l=[],c=[],u=[],d=Math.cos,h=Math.sin;o.push(new w(-t*h(0),-i*.5,t*d(0))),c.push(0),o.push(new w(-e*h(0),i*.5,e*d(0))),u.push(1);for(let g=0;g<n;g++){const f=2*Math.PI/n*(g+1),p=2*Math.PI/n*(g+.5);g<n-1?(o.push(new w(-t*h(f),-i*.5,t*d(f))),c.push(2*g+2),o.push(new w(-e*h(f),i*.5,e*d(f))),u.push(2*g+3),l.push([2*g,2*g+1,2*g+3,2*g+2])):l.push([2*g,2*g+1,1,0]),(n%2===1||g<n/2)&&a.push(new w(-h(p),0,d(p)))}l.push(c),a.push(new w(0,1,0));const m=[];for(let g=0;g<u.length;g++)m.push(u[u.length-g-1]);l.push(m),super({vertices:o,faces:l,axes:a}),this.type=we.types.CYLINDER,this.radiusTop=e,this.radiusBottom=t,this.height=i,this.numSegments=r}}class gs extends we{constructor(){super({type:we.types.PLANE}),this.worldNormal=new w,this.worldNormalNeedsUpdate=!0,this.boundingSphereRadius=Number.MAX_VALUE}computeWorldNormal(e){const t=this.worldNormal;t.set(0,0,1),e.vmult(t,t),this.worldNormalNeedsUpdate=!1}calculateLocalInertia(e,t){return t===void 0&&(t=new w),t}volume(){return Number.MAX_VALUE}calculateWorldAABB(e,t,i,r){Li.set(0,0,1),t.vmult(Li,Li);const n=Number.MAX_VALUE;i.set(-n,-n,-n),r.set(n,n,n),Li.x===1?r.x=e.x:Li.x===-1&&(i.x=e.x),Li.y===1?r.y=e.y:Li.y===-1&&(i.y=e.y),Li.z===1?r.z=e.z:Li.z===-1&&(i.z=e.z)}updateBoundingSphereRadius(){this.boundingSphereRadius=Number.MAX_VALUE}}const Li=new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new w;new qt;new w;new qt;new w;new w;new w;new w;new w;new w;new w;new qt;new w;new je;new qt;class pv{constructor(){this.equations=[]}solve(e,t){return 0}addEquation(e){e.enabled&&!e.bi.isTrigger&&!e.bj.isTrigger&&this.equations.push(e)}removeEquation(e){const t=this.equations,i=t.indexOf(e);i!==-1&&t.splice(i,1)}removeAllEquations(){this.equations.length=0}}class mv extends pv{constructor(){super(),this.iterations=10,this.tolerance=1e-7}solve(e,t){let i=0;const r=this.iterations,n=this.tolerance*this.tolerance,o=this.equations,a=o.length,l=t.bodies,c=l.length,u=e;let d,h,m,g,f,p;if(a!==0)for(let x=0;x!==c;x++)l[x].updateSolveMassProperties();const v=vv,_=_v,b=gv;v.length=a,_.length=a,b.length=a;for(let x=0;x!==a;x++){const S=o[x];b[x]=0,_[x]=S.computeB(u),v[x]=1/S.computeC()}if(a!==0){for(let E=0;E!==c;E++){const R=l[E],y=R.vlambda,A=R.wlambda;y.set(0,0,0),A.set(0,0,0)}for(i=0;i!==r;i++){g=0;for(let E=0;E!==a;E++){const R=o[E];d=_[E],h=v[E],p=b[E],f=R.computeGWlambda(),m=h*(d-f-R.eps*p),p+m<R.minForce?m=R.minForce-p:p+m>R.maxForce&&(m=R.maxForce-p),b[E]+=m,g+=m>0?m:-m,R.addToWlambda(m)}if(g*g<n)break}for(let E=0;E!==c;E++){const R=l[E],y=R.velocity,A=R.angularVelocity;R.vlambda.vmul(R.linearFactor,R.vlambda),y.vadd(R.vlambda,y),R.wlambda.vmul(R.angularFactor,R.wlambda),A.vadd(R.wlambda,A)}let x=o.length;const S=1/u;for(;x--;)o[x].multiplier=b[x]*S}return i}}const gv=[],vv=[],_v=[];class xv{constructor(){this.objects=[],this.type=Object}release(){const e=arguments.length;for(let t=0;t!==e;t++)this.objects.push(t<0||arguments.length<=t?void 0:arguments[t]);return this}get(){return this.objects.length===0?this.constructObject():this.objects.pop()}constructObject(){throw new Error("constructObject() not implemented in this Pool subclass yet!")}resize(e){const t=this.objects;for(;t.length>e;)t.pop();for(;t.length<e;)t.push(this.constructObject());return this}}class yv extends xv{constructor(){super(...arguments),this.type=w}constructObject(){return new w}}const et={sphereSphere:we.types.SPHERE,spherePlane:we.types.SPHERE|we.types.PLANE,boxBox:we.types.BOX|we.types.BOX,sphereBox:we.types.SPHERE|we.types.BOX,planeBox:we.types.PLANE|we.types.BOX,convexConvex:we.types.CONVEXPOLYHEDRON,sphereConvex:we.types.SPHERE|we.types.CONVEXPOLYHEDRON,planeConvex:we.types.PLANE|we.types.CONVEXPOLYHEDRON,boxConvex:we.types.BOX|we.types.CONVEXPOLYHEDRON,sphereHeightfield:we.types.SPHERE|we.types.HEIGHTFIELD,boxHeightfield:we.types.BOX|we.types.HEIGHTFIELD,convexHeightfield:we.types.CONVEXPOLYHEDRON|we.types.HEIGHTFIELD,sphereParticle:we.types.PARTICLE|we.types.SPHERE,planeParticle:we.types.PLANE|we.types.PARTICLE,boxParticle:we.types.BOX|we.types.PARTICLE,convexParticle:we.types.PARTICLE|we.types.CONVEXPOLYHEDRON,cylinderCylinder:we.types.CYLINDER,sphereCylinder:we.types.SPHERE|we.types.CYLINDER,planeCylinder:we.types.PLANE|we.types.CYLINDER,boxCylinder:we.types.BOX|we.types.CYLINDER,convexCylinder:we.types.CONVEXPOLYHEDRON|we.types.CYLINDER,heightfieldCylinder:we.types.HEIGHTFIELD|we.types.CYLINDER,particleCylinder:we.types.PARTICLE|we.types.CYLINDER,sphereTrimesh:we.types.SPHERE|we.types.TRIMESH,planeTrimesh:we.types.PLANE|we.types.TRIMESH};class bv{get[et.sphereSphere](){return this.sphereSphere}get[et.spherePlane](){return this.spherePlane}get[et.boxBox](){return this.boxBox}get[et.sphereBox](){return this.sphereBox}get[et.planeBox](){return this.planeBox}get[et.convexConvex](){return this.convexConvex}get[et.sphereConvex](){return this.sphereConvex}get[et.planeConvex](){return this.planeConvex}get[et.boxConvex](){return this.boxConvex}get[et.sphereHeightfield](){return this.sphereHeightfield}get[et.boxHeightfield](){return this.boxHeightfield}get[et.convexHeightfield](){return this.convexHeightfield}get[et.sphereParticle](){return this.sphereParticle}get[et.planeParticle](){return this.planeParticle}get[et.boxParticle](){return this.boxParticle}get[et.convexParticle](){return this.convexParticle}get[et.cylinderCylinder](){return this.convexConvex}get[et.sphereCylinder](){return this.sphereConvex}get[et.planeCylinder](){return this.planeConvex}get[et.boxCylinder](){return this.boxConvex}get[et.convexCylinder](){return this.convexConvex}get[et.heightfieldCylinder](){return this.heightfieldCylinder}get[et.particleCylinder](){return this.particleCylinder}get[et.sphereTrimesh](){return this.sphereTrimesh}get[et.planeTrimesh](){return this.planeTrimesh}constructor(e){this.contactPointPool=[],this.frictionEquationPool=[],this.result=[],this.frictionResult=[],this.v3pool=new yv,this.world=e,this.currentContactMaterial=e.defaultContactMaterial,this.enableFrictionReduction=!1}createContactEquation(e,t,i,r,n,o){let a;this.contactPointPool.length?(a=this.contactPointPool.pop(),a.bi=e,a.bj=t):a=new iv(e,t),a.enabled=e.collisionResponse&&t.collisionResponse&&i.collisionResponse&&r.collisionResponse;const l=this.currentContactMaterial;a.restitution=l.restitution,a.setSpookParams(l.contactEquationStiffness,l.contactEquationRelaxation,this.world.dt);const c=i.material||e.material,u=r.material||t.material;return c&&u&&c.restitution>=0&&u.restitution>=0&&(a.restitution=c.restitution*u.restitution),a.si=n||i,a.sj=o||r,a}createFrictionEquationsFromContact(e,t){const i=e.bi,r=e.bj,n=e.si,o=e.sj,a=this.world,l=this.currentContactMaterial;let c=l.friction;const u=n.material||i.material,d=o.material||r.material;if(u&&d&&u.friction>=0&&d.friction>=0&&(c=u.friction*d.friction),c>0){const h=c*(a.frictionGravity||a.gravity).length();let m=i.invMass+r.invMass;m>0&&(m=1/m);const g=this.frictionEquationPool,f=g.length?g.pop():new hc(i,r,h*m),p=g.length?g.pop():new hc(i,r,h*m);return f.bi=p.bi=i,f.bj=p.bj=r,f.minForce=p.minForce=-h*m,f.maxForce=p.maxForce=h*m,f.ri.copy(e.ri),f.rj.copy(e.rj),p.ri.copy(e.ri),p.rj.copy(e.rj),e.ni.tangents(f.t,p.t),f.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),p.setSpookParams(l.frictionEquationStiffness,l.frictionEquationRelaxation,a.dt),f.enabled=p.enabled=e.enabled,t.push(f,p),!0}return!1}createFrictionFromAverage(e){let t=this.result[this.result.length-1];if(!this.createFrictionEquationsFromContact(t,this.frictionResult)||e===1)return;const i=this.frictionResult[this.frictionResult.length-2],r=this.frictionResult[this.frictionResult.length-1];hr.setZero(),Yr.setZero(),Xr.setZero();const n=t.bi;t.bj;for(let a=0;a!==e;a++)t=this.result[this.result.length-1-a],t.bi!==n?(hr.vadd(t.ni,hr),Yr.vadd(t.ri,Yr),Xr.vadd(t.rj,Xr)):(hr.vsub(t.ni,hr),Yr.vadd(t.rj,Yr),Xr.vadd(t.ri,Xr));const o=1/e;Yr.scale(o,i.ri),Xr.scale(o,i.rj),r.ri.copy(i.ri),r.rj.copy(i.rj),hr.normalize(),hr.tangents(i.t,r.t)}getContacts(e,t,i,r,n,o,a){this.contactPointPool=n,this.frictionEquationPool=a,this.result=r,this.frictionResult=o;const l=Sv,c=Ev,u=wv,d=Mv;for(let h=0,m=e.length;h!==m;h++){const g=e[h],f=t[h];let p=null;g.material&&f.material&&(p=i.getContactMaterial(g.material,f.material)||null);const v=g.type&pe.KINEMATIC&&f.type&pe.STATIC||g.type&pe.STATIC&&f.type&pe.KINEMATIC||g.type&pe.KINEMATIC&&f.type&pe.KINEMATIC;for(let _=0;_<g.shapes.length;_++){g.quaternion.mult(g.shapeOrientations[_],l),g.quaternion.vmult(g.shapeOffsets[_],u),u.vadd(g.position,u);const b=g.shapes[_];for(let x=0;x<f.shapes.length;x++){f.quaternion.mult(f.shapeOrientations[x],c),f.quaternion.vmult(f.shapeOffsets[x],d),d.vadd(f.position,d);const S=f.shapes[x];if(!(b.collisionFilterMask&S.collisionFilterGroup&&S.collisionFilterMask&b.collisionFilterGroup)||u.distanceTo(d)>b.boundingSphereRadius+S.boundingSphereRadius)continue;let E=null;b.material&&S.material&&(E=i.getContactMaterial(b.material,S.material)||null),this.currentContactMaterial=E||p||i.defaultContactMaterial;const R=b.type|S.type,y=this[R];if(y){let A=!1;b.type<S.type?A=y.call(this,b,S,u,d,l,c,g,f,b,S,v):A=y.call(this,S,b,d,u,c,l,f,g,b,S,v),A&&v&&(i.shapeOverlapKeeper.set(b.id,S.id),i.bodyOverlapKeeper.set(g.id,f.id))}}}}}sphereSphere(e,t,i,r,n,o,a,l,c,u,d){if(d)return i.distanceSquared(r)<(e.radius+t.radius)**2;const h=this.createContactEquation(a,l,e,t,c,u);r.vsub(i,h.ni),h.ni.normalize(),h.ri.copy(h.ni),h.rj.copy(h.ni),h.ri.scale(e.radius,h.ri),h.rj.scale(-t.radius,h.rj),h.ri.vadd(i,h.ri),h.ri.vsub(a.position,h.ri),h.rj.vadd(r,h.rj),h.rj.vsub(l.position,h.rj),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}spherePlane(e,t,i,r,n,o,a,l,c,u,d){const h=this.createContactEquation(a,l,e,t,c,u);if(h.ni.set(0,0,1),o.vmult(h.ni,h.ni),h.ni.negate(h.ni),h.ni.normalize(),h.ni.scale(e.radius,h.ri),i.vsub(r,yn),h.ni.scale(h.ni.dot(yn),dc),yn.vsub(dc,h.rj),-yn.dot(h.ni)<=e.radius){if(d)return!0;const m=h.ri,g=h.rj;m.vadd(i,m),m.vsub(a.position,m),g.vadd(r,g),g.vsub(l.position,g),this.result.push(h),this.createFrictionEquationsFromContact(h,this.frictionResult)}}boxBox(e,t,i,r,n,o,a,l,c,u,d){return e.convexPolyhedronRepresentation.material=e.material,t.convexPolyhedronRepresentation.material=t.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t.convexPolyhedronRepresentation,i,r,n,o,a,l,e,t,d)}sphereBox(e,t,i,r,n,o,a,l,c,u,d){const h=this.v3pool,m=Kv;i.vsub(r,bn),t.getSideNormals(m,o);const g=e.radius;let f=!1;const p=Qv,v=e_,_=t_;let b=null,x=0,S=0,E=0,R=null;for(let I=0,V=m.length;I!==V&&f===!1;I++){const W=Xv;W.copy(m[I]);const U=W.length();W.normalize();const X=bn.dot(W);if(X<U+g&&X>0){const le=$v,j=Zv;le.copy(m[(I+1)%3]),j.copy(m[(I+2)%3]);const ue=le.length(),Me=j.length();le.normalize(),j.normalize();const ze=bn.dot(le),ee=bn.dot(j);if(ze<ue&&ze>-ue&&ee<Me&&ee>-Me){const Oe=Math.abs(X-U-g);if((R===null||Oe<R)&&(R=Oe,S=ze,E=ee,b=U,p.copy(W),v.copy(le),_.copy(j),x++,d))return!0}}}if(x){f=!0;const I=this.createContactEquation(a,l,e,t,c,u);p.scale(-g,I.ri),I.ni.copy(p),I.ni.negate(I.ni),p.scale(b,p),v.scale(S,v),p.vadd(v,p),_.scale(E,_),p.vadd(_,I.rj),I.ri.vadd(i,I.ri),I.ri.vsub(a.position,I.ri),I.rj.vadd(r,I.rj),I.rj.vsub(l.position,I.rj),this.result.push(I),this.createFrictionEquationsFromContact(I,this.frictionResult)}let y=h.get();const A=Jv;for(let I=0;I!==2&&!f;I++)for(let V=0;V!==2&&!f;V++)for(let W=0;W!==2&&!f;W++)if(y.set(0,0,0),I?y.vadd(m[0],y):y.vsub(m[0],y),V?y.vadd(m[1],y):y.vsub(m[1],y),W?y.vadd(m[2],y):y.vsub(m[2],y),r.vadd(y,A),A.vsub(i,A),A.lengthSquared()<g*g){if(d)return!0;f=!0;const U=this.createContactEquation(a,l,e,t,c,u);U.ri.copy(A),U.ri.normalize(),U.ni.copy(U.ri),U.ri.scale(g,U.ri),U.rj.copy(y),U.ri.vadd(i,U.ri),U.ri.vsub(a.position,U.ri),U.rj.vadd(r,U.rj),U.rj.vsub(l.position,U.rj),this.result.push(U),this.createFrictionEquationsFromContact(U,this.frictionResult)}h.release(y),y=null;const F=h.get(),z=h.get(),G=h.get(),N=h.get(),D=h.get(),O=m.length;for(let I=0;I!==O&&!f;I++)for(let V=0;V!==O&&!f;V++)if(I%3!==V%3){m[V].cross(m[I],F),F.normalize(),m[I].vadd(m[V],z),G.copy(i),G.vsub(z,G),G.vsub(r,G);const W=G.dot(F);F.scale(W,N);let U=0;for(;U===I%3||U===V%3;)U++;D.copy(i),D.vsub(N,D),D.vsub(z,D),D.vsub(r,D);const X=Math.abs(W),le=D.length();if(X<m[U].length()&&le<g){if(d)return!0;f=!0;const j=this.createContactEquation(a,l,e,t,c,u);z.vadd(N,j.rj),j.rj.copy(j.rj),D.negate(j.ni),j.ni.normalize(),j.ri.copy(j.rj),j.ri.vadd(r,j.ri),j.ri.vsub(i,j.ri),j.ri.normalize(),j.ri.scale(g,j.ri),j.ri.vadd(i,j.ri),j.ri.vsub(a.position,j.ri),j.rj.vadd(r,j.rj),j.rj.vsub(l.position,j.rj),this.result.push(j),this.createFrictionEquationsFromContact(j,this.frictionResult)}}h.release(F,z,G,N,D)}planeBox(e,t,i,r,n,o,a,l,c,u,d){return t.convexPolyhedronRepresentation.material=t.material,t.convexPolyhedronRepresentation.collisionResponse=t.collisionResponse,t.convexPolyhedronRepresentation.id=t.id,this.planeConvex(e,t.convexPolyhedronRepresentation,i,r,n,o,a,l,e,t,d)}convexConvex(e,t,i,r,n,o,a,l,c,u,d,h,m){const g=g_;if(!(i.distanceTo(r)>e.boundingSphereRadius+t.boundingSphereRadius)&&e.findSeparatingAxis(t,i,n,r,o,g,h,m)){const f=[],p=v_;e.clipAgainstHull(i,n,t,r,o,g,-100,100,f);let v=0;for(let _=0;_!==f.length;_++){if(d)return!0;const b=this.createContactEquation(a,l,e,t,c,u),x=b.ri,S=b.rj;g.negate(b.ni),f[_].normal.negate(p),p.scale(f[_].depth,p),f[_].point.vadd(p,x),S.copy(f[_].point),x.vsub(i,x),S.vsub(r,S),x.vadd(i,x),x.vsub(a.position,x),S.vadd(r,S),S.vsub(l.position,S),this.result.push(b),v++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(b,this.frictionResult)}this.enableFrictionReduction&&v&&this.createFrictionFromAverage(v)}}sphereConvex(e,t,i,r,n,o,a,l,c,u,d){const h=this.v3pool;i.vsub(r,i_);const m=t.faceNormals,g=t.faces,f=t.vertices,p=e.radius;let v=!1;for(let _=0;_!==f.length;_++){const b=f[_],x=a_;o.vmult(b,x),r.vadd(x,x);const S=n_;if(x.vsub(i,S),S.lengthSquared()<p*p){if(d)return!0;v=!0;const E=this.createContactEquation(a,l,e,t,c,u);E.ri.copy(S),E.ri.normalize(),E.ni.copy(E.ri),E.ri.scale(p,E.ri),x.vsub(r,E.rj),E.ri.vadd(i,E.ri),E.ri.vsub(a.position,E.ri),E.rj.vadd(r,E.rj),E.rj.vsub(l.position,E.rj),this.result.push(E),this.createFrictionEquationsFromContact(E,this.frictionResult);return}}for(let _=0,b=g.length;_!==b&&v===!1;_++){const x=m[_],S=g[_],E=o_;o.vmult(x,E);const R=l_;o.vmult(f[S[0]],R),R.vadd(r,R);const y=c_;E.scale(-p,y),i.vadd(y,y);const A=u_;y.vsub(R,A);const F=A.dot(E),z=h_;if(i.vsub(R,z),F<0&&z.dot(E)>0){const G=[];for(let N=0,D=S.length;N!==D;N++){const O=h.get();o.vmult(f[S[N]],O),r.vadd(O,O),G.push(O)}if(Yv(G,E,i)){if(d)return!0;v=!0;const N=this.createContactEquation(a,l,e,t,c,u);E.scale(-p,N.ri),E.negate(N.ni);const D=h.get();E.scale(-F,D);const O=h.get();E.scale(-p,O),i.vsub(r,N.rj),N.rj.vadd(O,N.rj),N.rj.vadd(D,N.rj),N.rj.vadd(r,N.rj),N.rj.vsub(l.position,N.rj),N.ri.vadd(i,N.ri),N.ri.vsub(a.position,N.ri),h.release(D),h.release(O),this.result.push(N),this.createFrictionEquationsFromContact(N,this.frictionResult);for(let I=0,V=G.length;I!==V;I++)h.release(G[I]);return}else for(let N=0;N!==S.length;N++){const D=h.get(),O=h.get();o.vmult(f[S[(N+1)%S.length]],D),o.vmult(f[S[(N+2)%S.length]],O),r.vadd(D,D),r.vadd(O,O);const I=r_;O.vsub(D,I);const V=s_;I.unit(V);const W=h.get(),U=h.get();i.vsub(D,U);const X=U.dot(V);V.scale(X,W),W.vadd(D,W);const le=h.get();if(W.vsub(i,le),X>0&&X*X<I.lengthSquared()&&le.lengthSquared()<p*p){if(d)return!0;const j=this.createContactEquation(a,l,e,t,c,u);W.vsub(r,j.rj),W.vsub(i,j.ni),j.ni.normalize(),j.ni.scale(p,j.ri),j.rj.vadd(r,j.rj),j.rj.vsub(l.position,j.rj),j.ri.vadd(i,j.ri),j.ri.vsub(a.position,j.ri),this.result.push(j),this.createFrictionEquationsFromContact(j,this.frictionResult);for(let ue=0,Me=G.length;ue!==Me;ue++)h.release(G[ue]);h.release(D),h.release(O),h.release(W),h.release(le),h.release(U);return}h.release(D),h.release(O),h.release(W),h.release(le),h.release(U)}for(let N=0,D=G.length;N!==D;N++)h.release(G[N])}}}planeConvex(e,t,i,r,n,o,a,l,c,u,d){const h=d_,m=f_;m.set(0,0,1),n.vmult(m,m);let g=0;const f=p_;for(let p=0;p!==t.vertices.length;p++)if(h.copy(t.vertices[p]),o.vmult(h,h),r.vadd(h,h),h.vsub(i,f),m.dot(f)<=0){if(d)return!0;const v=this.createContactEquation(a,l,e,t,c,u),_=m_;m.scale(m.dot(f),_),h.vsub(_,_),_.vsub(i,v.ri),v.ni.copy(m),h.vsub(r,v.rj),v.ri.vadd(i,v.ri),v.ri.vsub(a.position,v.ri),v.rj.vadd(r,v.rj),v.rj.vsub(l.position,v.rj),this.result.push(v),g++,this.enableFrictionReduction||this.createFrictionEquationsFromContact(v,this.frictionResult)}this.enableFrictionReduction&&g&&this.createFrictionFromAverage(g)}boxConvex(e,t,i,r,n,o,a,l,c,u,d){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexConvex(e.convexPolyhedronRepresentation,t,i,r,n,o,a,l,e,t,d)}sphereHeightfield(e,t,i,r,n,o,a,l,c,u,d){const h=t.data,m=e.radius,g=t.elementSize,f=L_,p=C_;je.pointToLocalFrame(r,o,i,p);let v=Math.floor((p.x-m)/g)-1,_=Math.ceil((p.x+m)/g)+1,b=Math.floor((p.y-m)/g)-1,x=Math.ceil((p.y+m)/g)+1;if(_<0||x<0||v>h.length||b>h[0].length)return;v<0&&(v=0),_<0&&(_=0),b<0&&(b=0),x<0&&(x=0),v>=h.length&&(v=h.length-1),_>=h.length&&(_=h.length-1),x>=h[0].length&&(x=h[0].length-1),b>=h[0].length&&(b=h[0].length-1);const S=[];t.getRectMinMax(v,b,_,x,S);const E=S[0],R=S[1];if(p.z-m>R||p.z+m<E)return;const y=this.result;for(let A=v;A<_;A++)for(let F=b;F<x;F++){const z=y.length;let G=!1;if(t.getConvexTrianglePillar(A,F,!1),je.pointToWorldFrame(r,o,t.pillarOffset,f),i.distanceTo(f)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(G=this.sphereConvex(e,t.pillarConvex,i,f,n,o,a,l,e,t,d)),d&&G||(t.getConvexTrianglePillar(A,F,!0),je.pointToWorldFrame(r,o,t.pillarOffset,f),i.distanceTo(f)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(G=this.sphereConvex(e,t.pillarConvex,i,f,n,o,a,l,e,t,d)),d&&G))return!0;if(y.length-z>2)return}}boxHeightfield(e,t,i,r,n,o,a,l,c,u,d){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexHeightfield(e.convexPolyhedronRepresentation,t,i,r,n,o,a,l,e,t,d)}convexHeightfield(e,t,i,r,n,o,a,l,c,u,d){const h=t.data,m=t.elementSize,g=e.boundingSphereRadius,f=T_,p=A_,v=E_;je.pointToLocalFrame(r,o,i,v);let _=Math.floor((v.x-g)/m)-1,b=Math.ceil((v.x+g)/m)+1,x=Math.floor((v.y-g)/m)-1,S=Math.ceil((v.y+g)/m)+1;if(b<0||S<0||_>h.length||x>h[0].length)return;_<0&&(_=0),b<0&&(b=0),x<0&&(x=0),S<0&&(S=0),_>=h.length&&(_=h.length-1),b>=h.length&&(b=h.length-1),S>=h[0].length&&(S=h[0].length-1),x>=h[0].length&&(x=h[0].length-1);const E=[];t.getRectMinMax(_,x,b,S,E);const R=E[0],y=E[1];if(!(v.z-g>y||v.z+g<R))for(let A=_;A<b;A++)for(let F=x;F<S;F++){let z=!1;if(t.getConvexTrianglePillar(A,F,!1),je.pointToWorldFrame(r,o,t.pillarOffset,f),i.distanceTo(f)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(z=this.convexConvex(e,t.pillarConvex,i,f,n,o,a,l,null,null,d,p,null)),d&&z||(t.getConvexTrianglePillar(A,F,!0),je.pointToWorldFrame(r,o,t.pillarOffset,f),i.distanceTo(f)<t.pillarConvex.boundingSphereRadius+e.boundingSphereRadius&&(z=this.convexConvex(e,t.pillarConvex,i,f,n,o,a,l,null,null,d,p,null)),d&&z))return!0}}sphereParticle(e,t,i,r,n,o,a,l,c,u,d){const h=b_;if(h.set(0,0,1),r.vsub(i,h),h.lengthSquared()<=e.radius*e.radius){if(d)return!0;const m=this.createContactEquation(l,a,t,e,c,u);h.normalize(),m.rj.copy(h),m.rj.scale(e.radius,m.rj),m.ni.copy(h),m.ni.negate(m.ni),m.ri.set(0,0,0),this.result.push(m),this.createFrictionEquationsFromContact(m,this.frictionResult)}}planeParticle(e,t,i,r,n,o,a,l,c,u,d){const h=__;h.set(0,0,1),a.quaternion.vmult(h,h);const m=x_;if(r.vsub(a.position,m),h.dot(m)<=0){if(d)return!0;const g=this.createContactEquation(l,a,t,e,c,u);g.ni.copy(h),g.ni.negate(g.ni),g.ri.set(0,0,0);const f=y_;h.scale(h.dot(r),f),r.vsub(f,f),g.rj.copy(f),this.result.push(g),this.createFrictionEquationsFromContact(g,this.frictionResult)}}boxParticle(e,t,i,r,n,o,a,l,c,u,d){return e.convexPolyhedronRepresentation.material=e.material,e.convexPolyhedronRepresentation.collisionResponse=e.collisionResponse,this.convexParticle(e.convexPolyhedronRepresentation,t,i,r,n,o,a,l,e,t,d)}convexParticle(e,t,i,r,n,o,a,l,c,u,d){let h=-1;const m=M_,g=S_;let f=null;const p=w_;if(p.copy(r),p.vsub(i,p),n.conjugate(fc),fc.vmult(p,p),e.pointIsInside(p)){e.worldVerticesNeedsUpdate&&e.computeWorldVertices(i,n),e.worldFaceNormalsNeedsUpdate&&e.computeWorldFaceNormals(n);for(let v=0,_=e.faces.length;v!==_;v++){const b=[e.worldVertices[e.faces[v][0]]],x=e.worldFaceNormals[v];r.vsub(b[0],pc);const S=-x.dot(pc);if(f===null||Math.abs(S)<Math.abs(f)){if(d)return!0;f=S,h=v,m.copy(x)}}if(h!==-1){const v=this.createContactEquation(l,a,t,e,c,u);m.scale(f,g),g.vadd(r,g),g.vsub(i,g),v.rj.copy(g),m.negate(v.ni),v.ri.set(0,0,0);const _=v.ri,b=v.rj;_.vadd(r,_),_.vsub(l.position,_),b.vadd(i,b),b.vsub(a.position,b),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}else console.warn("Point found inside convex, but did not find penetrating face!")}}heightfieldCylinder(e,t,i,r,n,o,a,l,c,u,d){return this.convexHeightfield(t,e,r,i,o,n,l,a,c,u,d)}particleCylinder(e,t,i,r,n,o,a,l,c,u,d){return this.convexParticle(t,e,r,i,o,n,l,a,c,u,d)}sphereTrimesh(e,t,i,r,n,o,a,l,c,u,d){const h=Fv,m=Iv,g=zv,f=Nv,p=Ov,v=Bv,_=Hv,b=Dv,x=Rv,S=Vv;je.pointToLocalFrame(r,o,i,p);const E=e.radius;_.lowerBound.set(p.x-E,p.y-E,p.z-E),_.upperBound.set(p.x+E,p.y+E,p.z+E),t.getTrianglesInAABB(_,S);const R=Pv,y=e.radius*e.radius;for(let N=0;N<S.length;N++)for(let D=0;D<3;D++)if(t.getVertex(t.indices[S[N]*3+D],R),R.vsub(p,x),x.lengthSquared()<=y){if(b.copy(R),je.pointToWorldFrame(r,o,b,R),R.vsub(i,x),d)return!0;let O=this.createContactEquation(a,l,e,t,c,u);O.ni.copy(x),O.ni.normalize(),O.ri.copy(O.ni),O.ri.scale(e.radius,O.ri),O.ri.vadd(i,O.ri),O.ri.vsub(a.position,O.ri),O.rj.copy(R),O.rj.vsub(l.position,O.rj),this.result.push(O),this.createFrictionEquationsFromContact(O,this.frictionResult)}for(let N=0;N<S.length;N++)for(let D=0;D<3;D++){t.getVertex(t.indices[S[N]*3+D],h),t.getVertex(t.indices[S[N]*3+(D+1)%3],m),m.vsub(h,g),p.vsub(m,v);const O=v.dot(g);p.vsub(h,v);let I=v.dot(g);if(I>0&&O<0&&(p.vsub(h,v),f.copy(g),f.normalize(),I=v.dot(f),f.scale(I,v),v.vadd(h,v),v.distanceTo(p)<e.radius)){if(d)return!0;const V=this.createContactEquation(a,l,e,t,c,u);v.vsub(p,V.ni),V.ni.normalize(),V.ni.scale(e.radius,V.ri),V.ri.vadd(i,V.ri),V.ri.vsub(a.position,V.ri),je.pointToWorldFrame(r,o,v,v),v.vsub(l.position,V.rj),je.vectorToWorldFrame(o,V.ni,V.ni),je.vectorToWorldFrame(o,V.ri,V.ri),this.result.push(V),this.createFrictionEquationsFromContact(V,this.frictionResult)}}const A=kv,F=Uv,z=Gv,G=Lv;for(let N=0,D=S.length;N!==D;N++){t.getTriangleVertices(S[N],A,F,z),t.getNormal(S[N],G),p.vsub(A,v);let O=v.dot(G);if(G.scale(O,v),p.vsub(v,v),O=v.distanceTo(p),ot.pointInTriangle(v,A,F,z)&&O<e.radius){if(d)return!0;let I=this.createContactEquation(a,l,e,t,c,u);v.vsub(p,I.ni),I.ni.normalize(),I.ni.scale(e.radius,I.ri),I.ri.vadd(i,I.ri),I.ri.vsub(a.position,I.ri),je.pointToWorldFrame(r,o,v,v),v.vsub(l.position,I.rj),je.vectorToWorldFrame(o,I.ni,I.ni),je.vectorToWorldFrame(o,I.ri,I.ri),this.result.push(I),this.createFrictionEquationsFromContact(I,this.frictionResult)}}S.length=0}planeTrimesh(e,t,i,r,n,o,a,l,c,u,d){const h=new w,m=Tv;m.set(0,0,1),n.vmult(m,m);for(let g=0;g<t.vertices.length/3;g++){t.getVertex(g,h);const f=new w;f.copy(h),je.pointToWorldFrame(r,o,f,h);const p=Av;if(h.vsub(i,p),m.dot(p)<=0){if(d)return!0;const v=this.createContactEquation(a,l,e,t,c,u);v.ni.copy(m);const _=Cv;m.scale(p.dot(m),_),h.vsub(_,_),v.ri.copy(_),v.ri.vsub(a.position,v.ri),v.rj.copy(h),v.rj.vsub(l.position,v.rj),this.result.push(v),this.createFrictionEquationsFromContact(v,this.frictionResult)}}}}const hr=new w,Yr=new w,Xr=new w,wv=new w,Mv=new w,Sv=new ct,Ev=new ct,Tv=new w,Av=new w,Cv=new w,Lv=new w,Rv=new w;new w;const Pv=new w,Dv=new w,Fv=new w,Iv=new w,zv=new w,Nv=new w,Ov=new w,Bv=new w,kv=new w,Uv=new w,Gv=new w,Hv=new qt,Vv=[],yn=new w,dc=new w,Wv=new w,jv=new w,qv=new w;function Yv(s,e,t){let i=null;const r=s.length;for(let n=0;n!==r;n++){const o=s[n],a=Wv;s[(n+1)%r].vsub(o,a);const l=jv;a.cross(e,l);const c=qv;t.vsub(o,c);const u=l.dot(c);if(i===null||u>0&&i===!0||u<=0&&i===!1){i===null&&(i=u>0);continue}else return!1}return!0}const bn=new w,Xv=new w,$v=new w,Zv=new w,Kv=[new w,new w,new w,new w,new w,new w],Jv=new w,Qv=new w,e_=new w,t_=new w,i_=new w,r_=new w,s_=new w,n_=new w,a_=new w,o_=new w,l_=new w,c_=new w,u_=new w,h_=new w;new w;new w;const d_=new w,f_=new w,p_=new w,m_=new w,g_=new w,v_=new w,__=new w,x_=new w,y_=new w,b_=new w,fc=new ct,w_=new w;new w;const M_=new w,pc=new w,S_=new w,E_=new w,T_=new w,A_=[0],C_=new w,L_=new w;class mc{constructor(){this.current=[],this.previous=[]}getKey(e,t){if(t<e){const i=t;t=e,e=i}return e<<16|t}set(e,t){const i=this.getKey(e,t),r=this.current;let n=0;for(;i>r[n];)n++;if(i!==r[n]){for(let o=r.length-1;o>=n;o--)r[o+1]=r[o];r[n]=i}}tick(){const e=this.current;this.current=this.previous,this.previous=e,this.current.length=0}getDiff(e,t){const i=this.current,r=this.previous,n=i.length,o=r.length;let a=0;for(let l=0;l<n;l++){let c=!1;const u=i[l];for(;u>r[a];)a++;c=u===r[a],c||gc(e,u)}a=0;for(let l=0;l<o;l++){let c=!1;const u=r[l];for(;u>i[a];)a++;c=i[a]===u,c||gc(t,u)}}}function gc(s,e){s.push((e&4294901760)>>16,e&65535)}const Va=(s,e)=>s<e?`${s}-${e}`:`${e}-${s}`;class R_{constructor(){this.data={keys:[]}}get(e,t){const i=Va(e,t);return this.data[i]}set(e,t,i){const r=Va(e,t);this.get(e,t)||this.data.keys.push(r),this.data[r]=i}delete(e,t){const i=Va(e,t),r=this.data.keys.indexOf(i);r!==-1&&this.data.keys.splice(r,1),delete this.data[i]}reset(){const e=this.data,t=e.keys;for(;t.length>0;){const i=t.pop();delete e[i]}}}class P_ extends Hu{constructor(e){e===void 0&&(e={}),super(),this.dt=-1,this.allowSleep=!!e.allowSleep,this.contacts=[],this.frictionEquations=[],this.quatNormalizeSkip=e.quatNormalizeSkip!==void 0?e.quatNormalizeSkip:0,this.quatNormalizeFast=e.quatNormalizeFast!==void 0?e.quatNormalizeFast:!1,this.time=0,this.stepnumber=0,this.default_dt=1/60,this.nextId=0,this.gravity=new w,e.gravity&&this.gravity.copy(e.gravity),e.frictionGravity&&(this.frictionGravity=new w,this.frictionGravity.copy(e.frictionGravity)),this.broadphase=e.broadphase!==void 0?e.broadphase:new Vu,this.bodies=[],this.hasActiveBodies=!1,this.solver=e.solver!==void 0?e.solver:new mv,this.constraints=[],this.narrowphase=new bv(this),this.collisionMatrix=new tc,this.collisionMatrixPrevious=new tc,this.bodyOverlapKeeper=new mc,this.shapeOverlapKeeper=new mc,this.contactmaterials=[],this.contactMaterialTable=new R_,this.defaultMaterial=new Sr("default"),this.defaultContactMaterial=new Mr(this.defaultMaterial,this.defaultMaterial,{friction:.3,restitution:0}),this.doProfiling=!1,this.profile={solve:0,makeContactConstraints:0,broadphase:0,integrate:0,narrowphase:0},this.accumulator=0,this.subsystems=[],this.addBodyEvent={type:"addBody",body:null},this.removeBodyEvent={type:"removeBody",body:null},this.idToBodyMap={},this.broadphase.setWorld(this)}getContactMaterial(e,t){return this.contactMaterialTable.get(e.id,t.id)}collisionMatrixTick(){const e=this.collisionMatrixPrevious;this.collisionMatrixPrevious=this.collisionMatrix,this.collisionMatrix=e,this.collisionMatrix.reset(),this.bodyOverlapKeeper.tick(),this.shapeOverlapKeeper.tick()}addConstraint(e){this.constraints.push(e)}removeConstraint(e){const t=this.constraints.indexOf(e);t!==-1&&this.constraints.splice(t,1)}rayTest(e,t,i){i instanceof Nn?this.raycastClosest(e,t,{skipBackfaces:!0},i):this.raycastAll(e,t,{skipBackfaces:!0},i)}raycastAll(e,t,i,r){return i===void 0&&(i={}),i.mode=ot.ALL,i.from=e,i.to=t,i.callback=r,Wa.intersectWorld(this,i)}raycastAny(e,t,i,r){return i===void 0&&(i={}),i.mode=ot.ANY,i.from=e,i.to=t,i.result=r,Wa.intersectWorld(this,i)}raycastClosest(e,t,i,r){return i===void 0&&(i={}),i.mode=ot.CLOSEST,i.from=e,i.to=t,i.result=r,Wa.intersectWorld(this,i)}addBody(e){this.bodies.includes(e)||(e.index=this.bodies.length,this.bodies.push(e),e.world=this,e.initPosition.copy(e.position),e.initVelocity.copy(e.velocity),e.timeLastSleepy=this.time,e instanceof pe&&(e.initAngularVelocity.copy(e.angularVelocity),e.initQuaternion.copy(e.quaternion)),this.collisionMatrix.setNumObjects(this.bodies.length),this.addBodyEvent.body=e,this.idToBodyMap[e.id]=e,this.dispatchEvent(this.addBodyEvent))}removeBody(e){e.world=null;const t=this.bodies.length-1,i=this.bodies,r=i.indexOf(e);if(r!==-1){i.splice(r,1);for(let n=0;n!==i.length;n++)i[n].index=n;this.collisionMatrix.setNumObjects(t),this.removeBodyEvent.body=e,delete this.idToBodyMap[e.id],this.dispatchEvent(this.removeBodyEvent)}}getBodyById(e){return this.idToBodyMap[e]}getShapeById(e){const t=this.bodies;for(let i=0;i<t.length;i++){const r=t[i].shapes;for(let n=0;n<r.length;n++){const o=r[n];if(o.id===e)return o}}return null}addContactMaterial(e){this.contactmaterials.push(e),this.contactMaterialTable.set(e.materials[0].id,e.materials[1].id,e)}removeContactMaterial(e){const t=this.contactmaterials.indexOf(e);t!==-1&&(this.contactmaterials.splice(t,1),this.contactMaterialTable.delete(e.materials[0].id,e.materials[1].id))}fixedStep(e,t){e===void 0&&(e=1/60),t===void 0&&(t=10);const i=dt.now()/1e3;if(!this.lastCallTime)this.step(e,void 0,t);else{const r=i-this.lastCallTime;this.step(e,r,t)}this.lastCallTime=i}step(e,t,i){if(i===void 0&&(i=10),t===void 0)this.internalStep(e),this.time+=e;else{this.accumulator+=t;const r=dt.now();let n=0;for(;this.accumulator>=e&&n<i&&(this.internalStep(e),this.accumulator-=e,n++,!(dt.now()-r>e*1e3)););this.accumulator=this.accumulator%e;const o=this.accumulator/e;for(let a=0;a!==this.bodies.length;a++){const l=this.bodies[a];l.previousPosition.lerp(l.position,o,l.interpolatedPosition),l.previousQuaternion.slerp(l.quaternion,o,l.interpolatedQuaternion),l.previousQuaternion.normalize()}this.time+=t}}internalStep(e){this.dt=e;const t=this.contacts,i=N_,r=O_,n=this.bodies.length,o=this.bodies,a=this.solver,l=this.gravity,c=this.doProfiling,u=this.profile,d=pe.DYNAMIC;let h=-1/0;const m=this.constraints,g=z_;l.length();const f=l.x,p=l.y,v=l.z;let _=0;for(c&&(h=dt.now()),_=0;_!==n;_++){const G=o[_];if(G.type===d){const N=G.force,D=G.mass;N.x+=D*f,N.y+=D*p,N.z+=D*v}}for(let G=0,N=this.subsystems.length;G!==N;G++)this.subsystems[G].update();c&&(h=dt.now()),i.length=0,r.length=0,this.broadphase.collisionPairs(this,i,r),c&&(u.broadphase=dt.now()-h);let b=m.length;for(_=0;_!==b;_++){const G=m[_];if(!G.collideConnected)for(let N=i.length-1;N>=0;N-=1)(G.bodyA===i[N]&&G.bodyB===r[N]||G.bodyB===i[N]&&G.bodyA===r[N])&&(i.splice(N,1),r.splice(N,1))}this.collisionMatrixTick(),c&&(h=dt.now());const x=I_,S=t.length;for(_=0;_!==S;_++)x.push(t[_]);t.length=0;const E=this.frictionEquations.length;for(_=0;_!==E;_++)g.push(this.frictionEquations[_]);for(this.frictionEquations.length=0,this.narrowphase.getContacts(i,r,this,t,x,this.frictionEquations,g),c&&(u.narrowphase=dt.now()-h),c&&(h=dt.now()),_=0;_<this.frictionEquations.length;_++)a.addEquation(this.frictionEquations[_]);const R=t.length;for(let G=0;G!==R;G++){const N=t[G],D=N.bi,O=N.bj,I=N.si,V=N.sj;let W;if(D.material&&O.material?W=this.getContactMaterial(D.material,O.material)||this.defaultContactMaterial:W=this.defaultContactMaterial,W.friction,D.material&&O.material&&(D.material.friction>=0&&O.material.friction>=0&&D.material.friction*O.material.friction,D.material.restitution>=0&&O.material.restitution>=0&&(N.restitution=D.material.restitution*O.material.restitution)),a.addEquation(N),D.allowSleep&&D.type===pe.DYNAMIC&&D.sleepState===pe.SLEEPING&&O.sleepState===pe.AWAKE&&O.type!==pe.STATIC){const U=O.velocity.lengthSquared()+O.angularVelocity.lengthSquared(),X=O.sleepSpeedLimit**2;U>=X*2&&(D.wakeUpAfterNarrowphase=!0)}if(O.allowSleep&&O.type===pe.DYNAMIC&&O.sleepState===pe.SLEEPING&&D.sleepState===pe.AWAKE&&D.type!==pe.STATIC){const U=D.velocity.lengthSquared()+D.angularVelocity.lengthSquared(),X=D.sleepSpeedLimit**2;U>=X*2&&(O.wakeUpAfterNarrowphase=!0)}this.collisionMatrix.set(D,O,!0),this.collisionMatrixPrevious.get(D,O)||(vs.body=O,vs.contact=N,D.dispatchEvent(vs),vs.body=D,O.dispatchEvent(vs)),this.bodyOverlapKeeper.set(D.id,O.id),this.shapeOverlapKeeper.set(I.id,V.id)}for(this.emitContactEvents(),c&&(u.makeContactConstraints=dt.now()-h,h=dt.now()),_=0;_!==n;_++){const G=o[_];G.wakeUpAfterNarrowphase&&(G.wakeUp(),G.wakeUpAfterNarrowphase=!1)}for(b=m.length,_=0;_!==b;_++){const G=m[_];G.update();for(let N=0,D=G.equations.length;N!==D;N++){const O=G.equations[N];a.addEquation(O)}}a.solve(e,this),c&&(u.solve=dt.now()-h),a.removeAllEquations();const y=Math.pow;for(_=0;_!==n;_++){const G=o[_];if(G.type&d){const N=y(1-G.linearDamping,e),D=G.velocity;D.scale(N,D);const O=G.angularVelocity;if(O){const I=y(1-G.angularDamping,e);O.scale(I,O)}}}this.dispatchEvent(F_),c&&(h=dt.now());const A=this.stepnumber%(this.quatNormalizeSkip+1)===0,F=this.quatNormalizeFast;for(_=0;_!==n;_++)o[_].integrate(e,A,F);this.clearForces(),this.broadphase.dirty=!0,c&&(u.integrate=dt.now()-h),this.stepnumber+=1,this.dispatchEvent(D_);let z=!0;if(this.allowSleep)for(z=!1,_=0;_!==n;_++){const G=o[_];G.sleepTick(this.time),G.sleepState!==pe.SLEEPING&&(z=!0)}this.hasActiveBodies=z}emitContactEvents(){const e=this.hasAnyEventListener("beginContact"),t=this.hasAnyEventListener("endContact");if((e||t)&&this.bodyOverlapKeeper.getDiff(Ri,Pi),e){for(let n=0,o=Ri.length;n<o;n+=2)_s.bodyA=this.getBodyById(Ri[n]),_s.bodyB=this.getBodyById(Ri[n+1]),this.dispatchEvent(_s);_s.bodyA=_s.bodyB=null}if(t){for(let n=0,o=Pi.length;n<o;n+=2)xs.bodyA=this.getBodyById(Pi[n]),xs.bodyB=this.getBodyById(Pi[n+1]),this.dispatchEvent(xs);xs.bodyA=xs.bodyB=null}Ri.length=Pi.length=0;const i=this.hasAnyEventListener("beginShapeContact"),r=this.hasAnyEventListener("endShapeContact");if((i||r)&&this.shapeOverlapKeeper.getDiff(Ri,Pi),i){for(let n=0,o=Ri.length;n<o;n+=2){const a=this.getShapeById(Ri[n]),l=this.getShapeById(Ri[n+1]);Di.shapeA=a,Di.shapeB=l,a&&(Di.bodyA=a.body),l&&(Di.bodyB=l.body),this.dispatchEvent(Di)}Di.bodyA=Di.bodyB=Di.shapeA=Di.shapeB=null}if(r){for(let n=0,o=Pi.length;n<o;n+=2){const a=this.getShapeById(Pi[n]),l=this.getShapeById(Pi[n+1]);Fi.shapeA=a,Fi.shapeB=l,a&&(Fi.bodyA=a.body),l&&(Fi.bodyB=l.body),this.dispatchEvent(Fi)}Fi.bodyA=Fi.bodyB=Fi.shapeA=Fi.shapeB=null}}clearForces(){const e=this.bodies,t=e.length;for(let i=0;i!==t;i++){const r=e[i];r.force,r.torque,r.force.set(0,0,0),r.torque.set(0,0,0)}}}new qt;const Wa=new ot,dt=globalThis.performance||{};if(!dt.now){let s=Date.now();dt.timing&&dt.timing.navigationStart&&(s=dt.timing.navigationStart),dt.now=()=>Date.now()-s}new w;const D_={type:"postStep"},F_={type:"preStep"},vs={type:pe.COLLIDE_EVENT_NAME,body:null,contact:null},I_=[],z_=[],N_=[],O_=[],Ri=[],Pi=[],_s={type:"beginContact",bodyA:null,bodyB:null},xs={type:"endContact",bodyA:null,bodyB:null},Di={type:"beginShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null},Fi={type:"endShapeContact",bodyA:null,bodyB:null,shapeA:null,shapeB:null};class vc{constructor(e){typeof e=="object"&&(e=e.notation),this.set=[],this.setkeys=[],this.setid=0,this.groups=[],this.totalDice=0,this.op="",this.constant=null,this.result=[],this.error=!1,this.boost=1,this.notation="",this.vectors=[],(!e||e=="0")&&(this.error=!0),this.parseNotation(e)}parseNotation(e){if(e){let h=e.split("!").length-1||0;h>0&&(this.boost=Math.min(Math.max(h,0),3)*4),e=e.split("!").join(""),e=e.split(" ").join("");let m=e.split("(").length-1,g=e.split(")").length-1;m!=g&&(this.error=!0)}const t=this.notation.length>0?"+":"";this.notation+=t+e;let i=e.split("@"),r=i[0],n=new RegExp(/(\+|\-|\*|\/|\%|\^|){0,1}()(\d*)([a-z]+\d+|[a-z]+|)(?:\{([a-z]+)(.*?|)\}|)()/,"i"),o=new RegExp(/(\b)*(\-\d+|\d+)(\b)*/,"gi"),a,l=0,c=30,u=0,d=0;for(;!this.error&&r.length>0&&(a=n.exec(r))!==null&&l<c;){l++,r=r.substring(a[0].length);let h=a[1],m=a[2]&&a[2].length>0,g=a[3],f=a[4],p=a[5]||"",v=a[6]||"",_=a[7]&&a[7].length>0,b=!0;m&&(u+=a[2].length),v=v.split(","),(!v||v.length<1)&&(v=""),v.shift(),l==1&&r.length==0&&!f&&h&&g?(f="d20",this.op=h,this.constant=parseInt(g),g=1):l>1&&r.length==0&&!f&&(this.op=h,this.constant=parseInt(g),b=!1),b&&this.addSet(g,f,d,u,p,v,h),_&&(u-=a[7].length,d+=a[7].length)}!this.error&&i[1]&&(a=i[1].match(o))!==null&&this.result.push(...a)}stringify(e=!0){let t="";if(this.set.length<1)return t;for(let i=0;i<this.set.length;i++){let r=this.set[i];t+=i>0&&r.op?r.op:"",t+=r.num+r.type,r.func&&(t+="{",t+=r.func?r.func:"",t+=r.args?","+(Array.isArray(r.args)?r.args.join(","):r.args):"",t+="}")}return t+=this.constant?this.op+""+Math.abs(this.constant):"",e&&this.result&&this.result.length>0&&(t+="@"+this.result.join(",")),this.boost>1&&(t+="!".repeat(this.boost/4)),t}addSet(e,t,i=0,r=0,n="",o="",a="+"){e=Math.abs(parseInt(e||1));let l=a+""+t+i+r+n+o,c=this.setkeys[l]!=null,u={};c&&(u=this.set[this.setkeys[l]-1]),e>0&&(u.num=c?e+u.num:e,u.type=t,u.sid=this.setid,u.gid=i,u.glvl=r,n&&(u.func=n),o&&(u.args=o),a&&(u.op=a),c?this.set[this.setkeys[l]-1]=u:this.setkeys[l]=this.set.push(u)),c||++this.setid}static mergeNotation(e,t){return{...e,constant:e.constant+t.constant,notation:e.notation+"+"+t.notation,set:[...e.set,...t.set],totalDice:e.vectors.length+t.vectors.length,vectors:[...e.vectors,...t.vectors]}}}const ja={d2:{name:"d2",labels:["1","2"],values:[1,2],inertia:8,mass:400,scale:.9,system:"dweird"},dc:{type:"d2",name:"Coin",labels:["textures/silvercoin/tail.png","textures/silvercoin/heads.png"],setBumpMaps:["textures/silvercoin/tail_bump.png","textures/silvercoin/heads_bump.png"],values:[0,1],inertia:8,mass:400,scale:.9,colorset:"coin_silver"},d1:{name:"One-sided Dice",type:"d6",labels:["1"],values:[1,1],scale:.9,system:"dweird"},d3:{name:"Three-Sided Dice",type:"d6",labels:["1","2","3"],values:[1,3],scale:.9,system:"dweird"},df:{name:"Fudge Dice",type:"d6",labels:["-","0","+"],values:[-1,1],scale:.9,system:"dweird"},d4:{name:"Four-Sided Dice",labels:["1","2","3","4"],values:[1,4],inertia:5,scale:1.2},d6:{name:"Six-Sided Dice (Numbers)",labels:["1","2","3","4","5","6"],values:[1,6],scale:.9},dpip:{name:"Six-Sided Dice (Pips)",type:"d6",labels:[`   
 ⬤ 
   `,`⬤  
   
  ⬤`,`⬤  
 ⬤ 
  ⬤`,`⬤ ⬤
   
⬤ ⬤`,`⬤ ⬤
 ⬤ 
⬤ ⬤`,`⬤ ⬤
⬤ ⬤
⬤ ⬤`],values:[1,6],scale:.9,font:"monospace"},dsex:{name:"Sex-Sided Emoji Dice",type:"d6",labels:["🍆","🍑","👌","💦","🙏","💥"],values:[1,6],scale:.9,display:"labels",system:"dweird"},dpoker:{name:"Poker Dice (9-Ace)",type:"d6",labels:["A","9","10","J","Q","K"],values:[1,6],scale:.9,display:"labels",system:"dweird",font:"Times New Roman"},dspanpoker:{name:"Spanish Poker Dice (7-Ace)",type:"d8",labels:["A","7","8","9","10","J","Q","K"],values:[1,8],display:"labels",system:"dweird",font:"Times New Roman"},disotope:{name:"Radioactive Twelve-Sided Dice",type:"d12",labels:["","","","","","","","","","","","☢️"],values:[0,0,0,0,0,0,0,0,0,0,0,1],mass:350,inertia:8,scale:.9,system:"dweird"},dsuit:{name:"Four-Suited Dice",type:"d4",labels:["♠️","♥️","♦️","♣️"],values:[1,4],inertia:5,scale:1.2,display:"labels",system:"dweird"},d8:{name:"Eight-Sided Dice",labels:["1","2","3","4","5","6","7","8"],values:[1,8]},d10:{name:"Ten-Sided Dice (Single Digit)",labels:["1","2","3","4","5","6","7","8","9","0"],values:[1,10],mass:350,inertia:9,scale:.9},d100:{name:"Ten-Sided Dice (Tens Digit)",type:"d10",labels:["10","20","30","40","50","60","70","80","90","00"],values:[10,100,10],mass:350,inertia:9,scale:.9},d12:{name:"Twelve-Sided Dice",labels:["1","2","3","4","5","6","7","8","9","10","11","12"],values:[1,12],mass:350,inertia:8,scale:.9},d20:{name:"Twenty-Sided Dice",labels:["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"],values:[1,20],mass:400,inertia:6},dabi:{name:"Star Wars RPG: Ability Dice",type:"d8",labels:["s","a",`s
a`,`s
s`,"a","s",`a
a`,""],values:[1,8],font:"SWRPG-Symbol-Regular",color:"#00FF00",colorset:"swrpg_abi",display:"labels",system:"swrpg"},ddif:{name:"Star Wars RPG: Difficulty Dice",type:"d8",labels:["t","f",`f
t`,"t","",`t
t`,`f
f`,"t"],values:[1,8],font:"SWRPG-Symbol-Regular",color:"#8000FC",colorset:"swrpg_dif",display:"labels",system:"swrpg"},dpro:{name:"Star Wars RPG: Proficiency Dice",type:"d12",labels:[`a
a`,"a",`a
a`,"x","s",`s
a`,"s",`s
a`,`s
s`,`s
a`,`s
s`,""],values:[1,12],mass:350,inertia:8,scale:.9,font:"SWRPG-Symbol-Regular",color:"#FFFF00",colorset:"swrpg_pro",display:"labels",system:"swrpg"},dcha:{name:"Star Wars RPG: Challenge Dice",type:"d12",labels:[`t
t`,"t",`t
t`,"t",`t
f`,"f",`t
f`,"f",`f
f`,"y",`f
f`,""],values:[1,12],mass:350,inertia:8,scale:.9,font:"SWRPG-Symbol-Regular",color:"#FF0000",colorset:"swrpg_cha",display:"labels",system:"swrpg"},dfor:{name:"Star Wars RPG: Force Dice",type:"d12",labels:["z",`Z
Z`,"z",`Z
Z`,"z",`Z
Z`,"z","Z","z","Z","z",`z
z`],values:[1,12],mass:350,inertia:8,scale:.9,font:"SWRPG-Symbol-Regular",color:"#FFFFFF",colorset:"swrpg_for",display:"labels",system:"swrpg"},dboo:{name:"Star Wars RPG: Boost Dice",type:"d6",labels:[`s  
  a`,`a  
  a`,"s","a","",""],values:[1,6],scale:.9,font:"SWRPG-Symbol-Regular",color:"#00FFFF",colorset:"swrpg_boo",display:"labels",system:"swrpg"},dset:{name:"Star Wars RPG: Setback Dice",type:"d6",labels:["","t","f"],values:[1,3],scale:.9,font:"SWRPG-Symbol-Regular",color:"#111111",colorset:"swrpg_set",display:"labels",system:"swrpg"},swar:{name:"Star Wars Armada: Red Attack Dice",type:"d8",labels:["F","F",`F
F`,"E","E","G","",""],values:[1,8],font:"Armada-Symbol-Regular",color:"#FF0000",colorset:"swa_red",display:"labels",system:"swarmada"},swab:{name:"Star Wars Armada: Blue Attack Dice",type:"d8",labels:["F","F","F","F","E","E","G","G"],values:[1,8],font:"Armada-Symbol-Regular",color:"#0000FF",colorset:"swa_blue",display:"labels",system:"swarmada"},swak:{name:"Star Wars Armada: Black Attack Dice",type:"d8",labels:["F","F","F","F",`F
E`,`F
E`,"",""],values:[1,8],font:"Armada-Symbol-Regular",color:"#111111",colorset:"swa_black",display:"labels",system:"swarmada"},xwatk:{name:"Star Wars X-Wing: Red Attack Dice",type:"d8",labels:["c","d","d","d","f","f","",""],values:[1,8],font:"XWing-Symbol-Regular",color:"#FF0000",colorset:"xwing_red",display:"labels",system:"xwing"},xwdef:{name:"Star Wars X-Wing: Green Defense Dice",type:"d8",labels:["e","e","e","f","f","","",""],values:[1,8],font:"XWing-Symbol-Regular",color:"#00FF00",colorset:"xwing_green",display:"labels",system:"xwing"},swlar:{name:"Star Wars Legion: Red Attack Dice",type:"d8",labels:["h","h","h","h","h","c","o",""],values:[1,8],font:"Legion-Symbol-Regular",color:"#FF0000",colorset:"swl_atkred",display:"labels",system:"legion"},swlab:{name:"Star Wars Legion: Black Attack Dice",type:"d8",labels:["h","h","h","","","c","o",""],values:[1,8],font:"Legion-Symbol-Regular",color:"#111111",colorset:"swl_atkblack",display:"labels",system:"legion"},swlaw:{name:"Star Wars Legion: White Attack Dice",type:"d8",labels:["h","","","","","c","o",""],values:[1,8],font:"Legion-Symbol-Regular",color:"#FFFFFF",colorset:"swl_atkwhite",display:"labels",system:"legion"},swldr:{name:"Star Wars Legion: Red Defense Dice",type:"d6",labels:["s","s","s","d","",""],values:[1,6],scale:.9,font:"Legion-Symbol-Regular",color:"#FF0000",colorset:"swl_defred",display:"labels",system:"legion"},swldw:{name:"Star Wars Legion: White Defense Dice",type:"d6",labels:["s","","","d","",""],values:[1,6],scale:.9,font:"Legion-Symbol-Regular",color:"#FFFFFF",colorset:"swl_defwhite",display:"labels",system:"legion"}},Zt={d4:{vertices:[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],faces:[[1,0,2,1],[0,1,3,2],[0,3,2,3],[1,2,3,4]]},d6:{vertices:[[-1,-1,-1],[1,-1,-1],[1,1,-1],[-1,1,-1],[-1,-1,1],[1,-1,1],[1,1,1],[-1,1,1]],faces:[[0,3,2,1,1],[1,2,6,5,2],[0,1,5,4,3],[3,7,6,2,4],[0,4,7,3,5],[4,5,6,7,6]]},d8:{vertices:[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],faces:[[0,2,4,1],[0,4,3,2],[0,3,5,3],[0,5,2,4],[1,3,4,5],[1,4,2,6],[1,2,5,7],[1,5,3,8]]},d10:{vertices:[[1,0,-.105],[.809,.5877,.105],[.309,.951,-.105],[-.309,.951,.105],[-.809,.5877,-.105],[-1,0,.105],[-.809,-.587,-.105],[-.309,-.951,.105],[.309,-.951,-.105],[.809,-.5877,.105],[0,0,-1],[0,0,1]],faces:[[5,6,7,11,0],[4,3,2,10,1],[1,2,3,11,2],[0,9,8,10,3],[7,8,9,11,4],[8,7,6,10,5],[9,0,1,11,6],[2,1,0,10,7],[3,4,5,11,8],[6,5,4,10,9]]},d12:{vertices:[[0,.618,1.618],[0,.618,-1.618],[0,-.618,1.618],[0,-.618,-1.618],[1.618,0,.618],[1.618,0,-.618],[-1.618,0,.618],[-1.618,0,-.618],[.618,1.618,0],[.618,-1.618,0],[-.618,1.618,0],[-.618,-1.618,0],[1,1,1],[1,1,-1],[1,-1,1],[1,-1,-1],[-1,1,1],[-1,1,-1],[-1,-1,1],[-1,-1,-1]],faces:[[2,14,4,12,0,1],[15,9,11,19,3,2],[16,10,17,7,6,3],[6,7,19,11,18,4],[6,18,2,0,16,5],[18,11,9,14,2,6],[1,17,10,8,13,7],[1,13,5,15,3,8],[13,8,12,4,5,9],[5,4,14,9,15,10],[0,12,8,10,16,11],[3,19,7,17,1,12]]},d20:{vertices:[[-1,1.618,0],[1,1.618,0],[-1,-1.618,0],[1,-1.618,0],[0,-1,1.618],[0,1,1.618],[0,-1,-1.618],[0,1,-1.618],[1.618,0,-1],[1.618,0,1],[-1.618,0,-1],[-1.618,0,1]],faces:[[0,11,5,1],[0,5,1,2],[0,1,7,3],[0,7,10,4],[0,10,11,5],[1,5,9,6],[5,11,4,7],[11,10,2,8],[10,7,6,9],[7,1,8,10],[3,9,4,11],[3,4,2,12],[3,2,6,13],[3,6,8,14],[3,8,9,15],[4,9,5,16],[2,4,11,17],[6,2,10,18],[8,6,7,19],[9,8,1,20]]}},B_={name:"",scale:1,font:"Arial",color:"",labels:[],valueMap:[],values:[],normals:[],mass:300,inertia:13,geometry:null,display:"values",system:"d20"};class k_{constructor(e){if(!ja.hasOwnProperty(e))return console.error("dice type unavailable");Object.assign(this,B_,ja[e]),this.shape=ja[e].type||e,this.type=e,this.setLabels(this.labels),this.setValues(this.values[0],this.values[1],this.values[2]),this.setValueMap(this.valueMap),this.bumpMaps&&this.setBumpMaps(this.bumpMaps)}setValues(e=1,t=20,i=1){this.values=this.range(e,t,i)}setValueMap(e){for(let t=0;t<this.values.length;t++){let i=this.values[t];e[i]!=null&&(this.valueMap[i]=e[i])}}registerFaces(e,t="labels"){let i;if(t=="labels"?i=this.labels:i=this.normals,i.unshift(""),["d2","d10"].includes(this.shape)||i.unshift(""),this.shape=="d4"){let r=e[0],n=e[1],o=e[2],a=e[3];this.labels=[[[],[0,0,0],[n,a,o],[r,o,a],[n,r,a],[r,n,o]],[[],[0,0,0],[n,o,a],[o,r,a],[n,a,r],[o,n,r]],[[],[0,0,0],[a,o,n],[o,a,r],[a,n,r],[o,r,n]],[[],[0,0,0],[a,n,o],[r,a,o],[a,r,n],[r,o,n]]]}else Array.prototype.push.apply(i,e)}setLabels(e){this.loadTextures(e,this.registerFaces.bind(this),"labels")}setBumpMaps(e){this.loadTextures(e,this.registerFaces.bind(this),"bump")}loadTextures(e,t,i){let r=0,n=e.length,o=/\.(PNG|JPG|GIF|WEBP)$/i,a=Array(e.length),l=!1;for(let c=0;c<n;c++){if(e[c]==""||!e[c].match(o)){a[c]=e[c],++r;continue}l=!0,a[c]=new Image,a[c].onload=function(){++r>=n&&t(a,i)},a[c].src=e[c]}l||t(a,i)}range(e,t,i=1){for(var r=[e],n=e;n<t;)r.push(n+=i||1);return r}}const U_={none:{name:"Plastic"},perfectmetal:{name:"Perfect Metal",color:14540253,roughness:0,metalness:1,envMapIntensity:1},metal:{name:"Metal",color:14540253,roughness:.5,metalness:.6,envMapIntensity:1},wood:{name:"Wood",color:14540253,roughness:.9,metalness:0,envMapIntensity:1},glass:{name:"Glass",color:14540253,roughness:.1,metalness:0,envMapIntensity:1}},G_={baseScale:100,bumpMapping:!0},ws=class{constructor(s){this.geometries={},this.materials_cache={},this.cache_hits=0,this.cache_misses=0,this.label_color="",this.dice_color="",this.edge_color="",this.label_outline="",this.dice_texture="",this.dice_material="",this.material_options={specular:16777215,color:11908533,shininess:5,flatShading:!0},Object.assign(this,G_,s)}updateConfig(s={}){Object.assign(this,s),s.scale&&this.scaleGeometry()}setBumpMapping(s){this.bumpMapping=s,this.materials_cache={}}create(s){let e=this.get(s);if(!e)return null;let t=this.geometries[s];if(t||(t=this.createGeometry(e.shape,e.scale*this.baseScale),this.geometries[s]=t),!t)return null;this.setMaterialInfo();let i=new vi(t,this.createMaterials(e,this.baseScale/2,1));switch(i.result=[],i.shape=e.shape,i.rerolls=0,i.resultReason="natural",i.mass=e.mass,i.getFaceValue=function(){let r=this.resultReason,n=new H(0,0,this.shape=="d4"?-1:1),o,a=Math.PI*2,l=this.geometry.getAttribute("normal").array;for(let g=0,f=this.geometry.groups.length;g<f;++g){let p=this.geometry.groups[g];if(p.materialIndex==0)continue;let v=g*9,_=new H(l[v],l[v+1],l[v+2]).clone().applyQuaternion(this.body.quaternion).angleTo(n);_<a&&(a=_,o=p)}let c=o.materialIndex-1,u=2;const d=ws.dice[this.notation.type];if(this.shape=="d4"){let g=c-1==0?5:c;return{value:c,label:d.labels[c-1][g][0],reason:r}}["d10","d2"].includes(this.shape)&&(c+=1,u-=1);let h=d.values[(c-1)%d.values.length],m=d.labels[(c-1)%(d.labels.length-2)+u];return{value:h,label:m,reason:r}},i.storeRolledValue=function(r){this.resultReason=r||this.resultReason,this.result.push(this.getFaceValue())},i.getLastValue=function(){return!this.result||this.result.length<1?{value:void 0,label:"",reason:""}:this.result[this.result.length-1]},i.ignoreLastValue=function(r){let n=this.getLastValue();n.value!==void 0&&(n.ignore=r,this.setLastValue(n))},i.setLastValue=function(r){if(!(!this.result||this.result.length<1)&&!(!r||r.length<1))return this.result[this.result.length-1]=r},e.color&&(i.material[0].color=new Ue(e.color),i.material[0].emissive=new Ue(e.color),i.material[0].emissiveIntensity=1,i.material[0].needsUpdate=!0),e.values.length){case 1:return this.fixmaterials(i,1);case 2:return this.fixmaterials(i,2);case 3:return this.fixmaterials(i,3);default:return i}}get(s){let e;return ws.dice.hasOwnProperty(s)?e=ws.dice[s]:(e=new k_(s),ws.dice[s]=e),e}getGeometry(s){return this.geometries[s]}scaleGeometry(){}createMaterials(s,e,t,i=!0,r=0){let n=[],o=s.labels;s.shape=="d4"&&(o=s.labels[r],e=this.baseScale/2,t=this.baseScale*2);for(var a=0;a<o.length;++a){var l;this.dice_material!="none"?(l=new a1(U_[this.dice_material]),l.envMapIntensity=0):l=new o1(this.material_options);let c;if(a==0){let u={name:"none"};this.dice_texture_rand.composite!="source-over"&&(u=this.dice_texture_rand),c=this.createTextMaterial(s,o,a,e,t,u,this.label_color_rand,this.label_outline_rand,this.edge_color_rand,i),l.map=c.composite}else if(c=this.createTextMaterial(s,o,a,e,t,this.dice_texture_rand,this.label_color_rand,this.label_outline_rand,this.dice_color_rand,i),l.map=c.composite,this.bumpMapping){{let u=.75;e>35&&(u=1),e>40&&(u=2.5),e>45&&(u=4),l.bumpScale=u}c.bump&&(l.bumpMap=c.bump),s.shape!="d4"&&s.normals[a]&&(l.bumpMap=new jt(s.normals[a]),l.bumpScale=4,l.bumpMap.needsUpdate=!0)}l.opacity=1,l.transparent=!0,l.depthTest=!1,l.needUpdate=!0,n.push(l)}return n}createTextMaterial(s,e,t,i,r,n,o,a,l,c){if(e[t]===void 0)return null;n=n||this.dice_texture_rand,o=o||this.label_color_rand,a=a||this.label_outline_rand,l=l||this.dice_color_rand,c=c??!0;let u=e[t],d=!1,h=u;u instanceof HTMLImageElement?h=u.src:u instanceof Array&&u.forEach(R=>{h+=R.src});let m=s.type+h+t+n.name+o+a+l;if(s.shape=="d4"&&(m=s.type+h+n.name+o+a+l),c&&this.materials_cache[m]!=null)return this.cache_hits++,this.materials_cache[m];let g=document.createElement("canvas"),f=g.getContext("2d",{alpha:!0});f.globalAlpha=0,f.clearRect(0,0,g.width,g.height);let p=document.createElement("canvas"),v=p.getContext("2d",{alpha:!0});v.globalAlpha=0,v.clearRect(0,0,p.width,p.height);let _;if(s.shape=="d4"?_=this.calc_texture_size(i+r)*4:_=this.calc_texture_size(i+i*2*r)*4,g.width=g.height=_,p.width=p.height=_,f.fillStyle=l,f.fillRect(0,0,g.width,g.height),v.fillStyle="#FFFFFF",v.fillRect(0,0,p.width,p.height),n.texture&&n.name!=""&&n.name!="none"?(f.globalCompositeOperation=n.composite||"source-over",f.drawImage(n.texture,0,0,g.width,g.height),f.globalCompositeOperation="source-over",n.bump&&(v.globalCompositeOperation="source-over",v.drawImage(n.bump,0,0,g.width,g.height))):f.globalCompositeOperation="source-over",f.globalCompositeOperation="source-over",f.textAlign="center",f.textBaseline="middle",v.textAlign="center",v.textBaseline="middle",s.shape!="d4"){let R={d8:{even:-7.5,odd:-127.5},d10:{all:-6},d12:{all:5},d20:{all:-7.5}}[s.shape];if(R){let y;if(R.hasOwnProperty("all")?y=R.all:t>0&&t%2!=0?y=R.odd:y=R.even,y&&y!=0){var b=g.width/2,x=g.height/2;f.translate(b,x),f.rotate(y*(Math.PI/180)),f.translate(-b,-x),v.translate(b,x),v.rotate(y*(Math.PI/180)),v.translate(-b,-x)}}if(u instanceof HTMLImageElement)d=!0,f.drawImage(u,0,0,u.width,u.height,0,0,g.width,g.height);else{let y=_/(1+2*r),A=g.height/2+10,F=g.width/2;s.shape=="d10"?(y=y*.75,A=A*1.15-10):s.shape=="d20"&&(F=F*.98),f.font=y+"pt "+s.font,v.font=y+"pt "+s.font;let z=f.measureText("M").width*1.4,G=u.split(`
`);G.length>1&&(y=y/G.length,f.font=y+"pt "+s.font,v.font=y+"pt "+s.font,z=f.measureText("M").width*1.2,A-=z*G.length/2);for(let N=0,D=G.length;N<D;N++){let O=G[N].trim();a!="none"&&a!=l&&(f.strokeStyle=a,f.lineWidth=5,f.strokeText(G[N],F,A),v.strokeStyle="#000000",v.lineWidth=5,v.strokeText(G[N],F,A),(O=="6"||O=="9")&&(f.strokeText("  .",F,A),v.strokeText("  .",F,A))),f.fillStyle=o,f.fillText(G[N],F,A),v.fillStyle="#000000",v.fillText(G[N],F,A),(O=="6"||O=="9")&&(f.fillText("  .",F,A),v.fillText("  .",F,A)),A+=z*1.5}}}else{var b=g.width/2,x=g.height/2;f.font=_/128*24+"pt "+s.font,v.font=_/128*24+"pt "+s.font;for(let A=0;A<u.length;A++){if(u[A]instanceof HTMLImageElement){let F=u[A].width/g.width;f.drawImage(u[A],0,0,u[A].width,u[A].height,100/F,25/F,60/F,60/F)}else a!="none"&&a!=l&&(f.strokeStyle=a,f.lineWidth=5,f.strokeText(u[A],b,x-_*.3),v.strokeStyle="#000000",v.lineWidth=5,v.strokeText(u[A],b,x-_*.3)),f.fillStyle=o,f.fillText(u[A],b,x-_*.3),v.fillStyle="#000000",v.fillText(u[A],b,x-_*.3);f.translate(b,x),f.rotate(Math.PI*2/3),f.translate(-b,-x),v.translate(b,x),v.rotate(Math.PI*2/3),v.translate(-b,-x)}}var S=new Xl(g),E;return d?E=null:E=new Xl(p),c&&(this.cache_misses++,this.materials_cache[m]={composite:S,bump:E}),{composite:S,bump:E}}applyColorSet(s){var e;this.colordata=s,this.label_color=s.foreground,this.dice_color=s.background,this.label_outline=s.outline,this.dice_texture=s.texture,this.dice_material=((e=s==null?void 0:s.texture)==null?void 0:e.material)||"none",this.edge_color=s.hasOwnProperty("edge")?s.edge:s.background}setMaterialInfo(s=""){let e=this.colordata,t=this.dice_texture,i=this.dice_material;if(this.dice_color_rand="",this.label_color_rand="",this.label_outline_rand="",this.dice_texture_rand="",this.dice_material_rand="",this.edge_color_rand="",Array.isArray(this.dice_color)){var r=Math.floor(Math.random()*this.dice_color.length);Array.isArray(this.label_color)&&this.label_color.length==this.dice_color.length&&(this.label_color_rand=this.label_color[r],Array.isArray(this.label_outline)&&this.label_outline.length==this.label_color.length&&(this.label_outline_rand=this.label_outline[r])),Array.isArray(this.dice_texture)&&this.dice_texture.length==this.dice_color.length&&(this.dice_texture_rand=this.dice_texture[r],this.dice_material_rand=this.dice_texture_rand.material),Array.isArray(this.edge_color)&&this.edge_color.length==this.dice_color.length&&(this.edge_color_rand=this.edge_color[r]),this.dice_color_rand=this.dice_color[r]}else this.dice_color_rand=this.dice_color;if(this.edge_color_rand=="")if(Array.isArray(this.edge_color)){var r=Math.floor(Math.random()*this.edge_color.length);this.edge_color_rand=this.edge_color[r]}else this.edge_color_rand=this.edge_color;if(this.label_color_rand==""&&Array.isArray(this.label_color)){var r=this.label_color[Math.floor(Math.random()*this.label_color.length)];Array.isArray(this.label_outline)&&this.label_outline.length==this.label_color.length&&(this.label_outline_rand=this.label_outline[r]),this.label_color_rand=this.label_color[r]}else this.label_color_rand==""&&(this.label_color_rand=this.label_color);if(this.label_outline_rand==""&&Array.isArray(this.label_outline)){var r=this.label_outline[Math.floor(Math.random()*this.label_outline.length)];this.label_outline_rand=this.label_outline[r]}else this.label_outline_rand==""&&(this.label_outline_rand=this.label_outline);this.dice_texture_rand==""&&Array.isArray(this.dice_texture)?(this.dice_texture_rand=this.dice_texture[Math.floor(Math.random()*this.dice_texture.length)],this.dice_material_rand=this.dice_texture_rand.material||this.dice_material):this.dice_texture_rand==""&&(this.dice_texture_rand=this.dice_texture,this.dice_material_rand=this.dice_texture_rand.material||this.dice_material),this.dice_material_rand==""&&Array.isArray(this.dice_material)?this.dice_material_rand=this.dice_material[Math.floor(Math.random()*this.dice_material.length)]:this.dice_material_rand==""&&(this.dice_material_rand=this.dice_material),this.colordata&&this.colordata.id!=e.id&&this.applyColorSet(e,t,i)}calc_texture_size(s){return Math.pow(2,Math.floor(Math.log(s)/Math.log(2)))}createGeometry(s,e,t=!1){const i=t?"create_shape":"create_geom";switch(s){case"d2":var r=new Do(1*e,1*e,.1*e,32);return r.cannon_shape=new fv(1*e,1*e,.1*e,8),r;case"d4":return this[i](Zt.d4.vertices,Zt.d4.faces,e,-.1,Math.PI*7/6,.96);case"d6":return this[i](Zt.d6.vertices,Zt.d6.faces,e,.1,Math.PI/4,.96);case"d8":return this[i](Zt.d8.vertices,Zt.d8.faces,e,0,-Math.PI/4/2,.965);case"d10":return this[i](Zt.d10.vertices,Zt.d10.faces,e,.3,Math.PI,.945);case"d12":return this[i](Zt.d12.vertices,Zt.d12.faces,e,.2,-Math.PI/4/2,.968);case"d20":return this[i](Zt.d20.vertices,Zt.d20.faces,e,-.2,-Math.PI/4/2,.955);default:return console.error(`Geometry for ${s} is not available`),null}}fixmaterials(s,e){for(let i=0,r=s.geometry.groups.length;i<r;++i){var t=s.geometry.groups[i].materialIndex-2;if(t<e)continue;let n=t%e;s.geometry.groups[i].materialIndex=n+2}return s.geometry.elementsNeedUpdate=!0,s}create_shape(s,e,t){for(var i=new Array(s.length),r=0;r<s.length;++r)i[r]=new H().fromArray(s[r]).normalize();for(var n=new Array(s.length),o=new Array(e.length),r=0;r<i.length;++r){var a=i[r];n[r]=new w(a.x*t,a.y*t,a.z*t)}for(var r=0;r<e.length;++r)o[r]=e[r].slice(0,e[r].length-1);return new wr({vertices:n,faces:o})}make_geom(s,e,t,i,r){let n=new bi;for(let m=0;m<s.length;++m)s[m]=s[m].multiplyScalar(t);let o=[];const a=[],l=[],c=new H,u=new H;let d,h=0;for(let m=0;m<e.length;++m){let g=e[m],f=g.length-1,p=Math.PI*2/f;d=g[f]+1;for(let _=0;_<f-2;++_)o.push(...s[g[0]].toArray()),o.push(...s[g[_+1]].toArray()),o.push(...s[g[_+2]].toArray()),c.subVectors(s[g[_+2]],s[g[_+1]]),u.subVectors(s[g[0]],s[g[_+1]]),c.cross(u),c.normalize(),a.push(...c.toArray()),a.push(...c.toArray()),a.push(...c.toArray()),l.push((Math.cos(r)+1+i)/2/(1+i),(Math.sin(r)+1+i)/2/(1+i)),l.push((Math.cos(p*(_+1)+r)+1+i)/2/(1+i),(Math.sin(p*(_+1)+r)+1+i)/2/(1+i)),l.push((Math.cos(p*(_+2)+r)+1+i)/2/(1+i),(Math.sin(p*(_+2)+r)+1+i)/2/(1+i));let v=(f-2)*3;for(let _=0;_<v/3;_++)n.addGroup(h,3,d),h+=3}return n.setAttribute("position",new Mt(o,3)),n.setAttribute("normal",new Mt(a,3)),n.setAttribute("uv",new Mt(l,2)),n.boundingSphere=new zs(new H,t),n}make_d10_geom(s,e,t,i,r){let n=new bi;for(let _=0;_<s.length;++_)s[_]=s[_].multiplyScalar(t);let o=[];const a=[],l=[],c=new H,u=new H;let d,h=0;for(let _=0;_<e.length;++_){let b=e[_],x=b.length-1,S=Math.PI*2/x;d=b[x]+1;var m=.65,g=.85,f=1-1*g,p=1-.895/1.105*g,v=1;for(let R=0;R<x-2;++R)o.push(...s[b[0]].toArray()),o.push(...s[b[R+1]].toArray()),o.push(...s[b[R+2]].toArray()),c.subVectors(s[b[R+2]],s[b[R+1]]),u.subVectors(s[b[0]],s[b[R+1]]),c.cross(u),c.normalize(),a.push(...c.toArray()),a.push(...c.toArray()),a.push(...c.toArray()),e[_][e[_].length-1]==-1||R>=2?(l.push((Math.cos(r)+1+i)/2/(1+i),(Math.sin(r)+1+i)/2/(1+i)),l.push((Math.cos(S*(R+1)+r)+1+i)/2/(1+i),(Math.sin(S*(R+1)+r)+1+i)/2/(1+i)),l.push((Math.cos(S*(R+2)+r)+1+i)/2/(1+i),(Math.sin(S*(R+2)+r)+1+i)/2/(1+i))):R==0?(l.push(.5-m/2,p),l.push(.5,f),l.push(.5+m/2,p)):R==1&&(l.push(.5-m/2,p),l.push(.5+m/2,p),l.push(.5,v));let E=(x-2)*3;for(let R=0;R<E/3;R++)n.addGroup(h,3,d),h+=3}return n.setAttribute("position",new Mt(o,3)),n.setAttribute("normal",new Mt(a,3)),n.setAttribute("uv",new Mt(l,2)),n.boundingSphere=new zs(new H,t),n}chamfer_geom(s,e,t){for(var i=[],r=[],n=new Array(s.length),o=0;o<s.length;++o)n[o]=[];for(var o=0;o<e.length;++o){for(var a=e[o],l=a.length-1,c=new H,u=new Array(l),d=0;d<l;++d){var h=s[a[d]].clone();c.add(h),n[a[d]].push(u[d]=i.push(h)-1)}c.divideScalar(l);for(var d=0;d<l;++d){var h=i[u[d]];h.subVectors(h,c).multiplyScalar(t).addVectors(h,c)}u.push(a[l]),r.push(u)}for(var o=0;o<e.length-1;++o)for(var d=o+1;d<e.length;++d){for(var m=[],g=-1,f=0;f<e[o].length-1;++f){var p=e[d].indexOf(e[o][f]);p>=0&&p<e[d].length-1&&(g>=0&&f!=g+1?m.unshift([o,f],[d,p]):m.push([o,f],[d,p]),g=f)}m.length==4&&r.push([r[m[0][0]][m[0][1]],r[m[1][0]][m[1][1]],r[m[3][0]][m[3][1]],r[m[2][0]][m[2][1]],-1])}for(var o=0;o<n.length;++o){for(var v=n[o],u=[v[0]],_=v.length-1;_;){for(var f=e.length;f<r.length;++f){var b=r[f].indexOf(u[u.length-1]);if(b>=0&&b<4){--b==-1&&(b=3);var x=r[f][b];if(v.indexOf(x)>=0){u.push(x);break}}}--_}u.push(-1),r.push(u)}return{vectors:i,faces:r}}create_geom(s,e,t,i,r,n){for(var o=new Array(s.length),a=0;a<s.length;++a)o[a]=new H().fromArray(s[a]).normalize();var l=this.chamfer_geom(o,e,n);if(e.length!=10)var c=this.make_geom(l.vectors,l.faces,t,i,r);else var c=this.make_d10_geom(l.vectors,l.faces,t,i,r);return c.cannon_shape=this.create_shape(s,e,t),c.name="d"+e.length,c}};let Ku=ws;rp(Ku,"dice",{});const qa={cloudy:{name:"Clouds (Transparent)",composite:"destination-in",source:"textures/cloudy.webp",source_bump:"textures/cloudy.alt.webp"},cloudy_2:{name:"Clouds",composite:"multiply",source:"textures/cloudy.alt.webp",source_bump:"textures/cloudy.alt.webp"},fire:{name:"Fire",composite:"multiply",source:"textures/fire.webp",source_bump:"textures/fire.webp",material:"metal"},marble:{name:"Marble",composite:"multiply",source:"textures/marble.webp",source_bump:"",material:"glass"},water:{name:"Water",composite:"destination-in",source:"textures/water.webp",source_bump:"textures/water.webp",material:"glass"},ice:{name:"Ice",composite:"destination-in",source:"textures/ice.webp",source_bump:"textures/ice.webp",material:"glass"},paper:{name:"Paper",composite:"multiply",source:"textures/paper.webp",source_bump:"textures/paper-bump.webp",material:"wood"},speckles:{name:"Speckles",composite:"multiply",source:"textures/speckles.webp",source_bump:"textures/speckles.webp",material:"none"},glitter:{name:"Glitter",composite:"multiply",source:"textures/glitter.webp",source_bump:"textures/glitter-bump.webp",material:"none"},glitter_2:{name:"Glitter (Transparent)",composite:"destination-in",source:"textures/glitter-alpha.webp",source_bump:"",material:"none"},stars:{name:"Stars",composite:"multiply",source:"textures/stars.webp",source_bump:"textures/stars.webp",material:"none"},stainedglass:{name:"Stained Glass",composite:"multiply",source:"textures/stainedglass.webp",source_bump:"textures/stainedglass-bump.webp",material:"glass"},wood:{name:"Wood",composite:"multiply",source:"textures/wood.webp",source_bump:"textures/wood.webp",material:"wood"},metal:{name:"Stainless Steel",composite:"multiply",source:"textures/metal.webp",source_bump:"textures/metal-bump.webp",material:"metal"},skulls:{name:"Skulls",composite:"multiply",source:"textures/skulls.webp",source_bump:"textures/skulls.webp"},leopard:{name:"Leopard",composite:"multiply",source:"textures/leopard.webp",source_bump:"textures/leopard.webp",material:"wood"},tiger:{name:"Tiger",composite:"multiply",source:"textures/tiger.webp",source_bump:"textures/tiger.webp",material:"wood"},cheetah:{name:"Cheetah",composite:"multiply",source:"textures/cheetah.webp",source_bump:"textures/cheetah.webp",material:"wood"},dragon:{name:"Dragon",composite:"multiply",source:"textures/dragon.webp",source_bump:"textures/dragon-bump.webp",material:"none"},lizard:{name:"Lizard",composite:"multiply",source:"textures/lizard.webp",source_bump:"textures/lizard.webp",material:"none"},bird:{name:"Bird",composite:"multiply",source:"textures/feather.webp",source_bump:"textures/feather-bump.webp",material:"wood"},astral:{name:"Astral Sea",composite:"multiply",source:"textures/astral.webp",source_bump:"textures/stars.webp",material:"none"},acleaf:{name:"AC Leaf",composite:"multiply",source:"textures/acleaf.webp",source_bump:"textures/acleaf.webp",material:"none"},thecage:{name:"Nicholas Cage",composite:"multiply",source:"textures/thecage.webp",source_bump:"",material:"metal"},isabelle:{name:"Isabelle",composite:"source-over",source:"textures/isabelle.webp",source_bump:"",material:"none"},bronze01:{name:"bronze01",composite:"difference",source:"textures/bronze01.webp",source_bump:"",material:"metal"},bronze02:{name:"bronze02",composite:"difference",source:"textures/bronze02.webp",source_bump:"",material:"metal"},bronze03:{name:"bronze03",composite:"difference",source:"textures/bronze03.webp",source_bump:"",material:"metal"},bronze03a:{name:"bronze03a",composite:"difference",source:"textures/bronze03a.webp",source_bump:"",material:"metal"},bronze03b:{name:"bronze03b",composite:"difference",source:"textures/bronze03b.webp",source_bump:"",material:"metal"},bronze04:{name:"bronze04",composite:"difference",source:"textures/bronze04.webp",source_bump:"",material:"metal"},none:{name:"none",composite:"source-over",source:"",source_bump:"",material:""},"":{name:"~ Preset ~",composite:"source-over",source:"",source_bump:"",material:""}},_c={coin_default:{name:"Gold Coin",description:"Gold Dragonhead Coin",category:"Other",foreground:"#f6c928",background:"#f6c928",outline:"none",texture:"metal"},coin_silver:{name:"Silver Coin",description:"Gold Dragonhead Coin",category:"Other",foreground:"#f6c928",background:"#f6c928",outline:"none",texture:"metal"},radiant:{name:"Radiant",category:"Damage Types",foreground:"#F9B333",background:"#FFFFFF",outline:"",texture:"paper",description:"Radiant"},fire:{name:"Fire",category:"Damage Types",foreground:"#f8d84f",background:["#f8d84f","#f9b02d","#f43c04","#910200","#4c1009"],outline:"black",texture:"fire",description:"Fire"},ice:{name:"Ice",category:"Damage Types",foreground:"#60E9FF",background:["#214fa3","#3c6ac1","#253f70","#0b56e2","#09317a"],outline:"black",texture:"ice",description:"Ice"},poison:{name:"Poison",category:"Damage Types",foreground:"#D6A8FF",background:["#313866","#504099","#66409e","#934fc3","#c949fc"],outline:"black",texture:"cloudy",description:"Poison"},acid:{name:"Acid",category:"Damage Types",foreground:"#A9FF70",background:["#a6ff00","#83b625","#5ace04","#69f006","#b0f006","#93bc25"],outline:"black",texture:"marble",description:"Acid"},thunder:{name:"Thunder",category:"Damage Types",foreground:"#FFC500",background:"#7D7D7D",outline:"black",texture:"cloudy",description:"Thunder"},lightning:{name:"Lightning",category:"Damage Types",foreground:"#FFC500",background:["#f17105","#f3ca40","#eddea4","#df9a57","#dea54b"],outline:"#7D7D7D",texture:"ice",description:"Lightning"},air:{name:"Air",category:"Damage Types",foreground:"#ffffff",background:["#d0e5ea","#c3dee5","#a4ccd6","#8dafb7","#80a4ad"],outline:"black",texture:"cloudy",description:"Air"},water:{name:"Water",category:"Damage Types",foreground:"#60E9FF",background:["#87b8c4","#77a6b2","#6b98a3","#5b8691","#4b757f"],outline:"black",texture:"water",description:"Water"},earth:{name:"Earth",category:"Damage Types",foreground:"#6C9943",background:["#346804","#184200","#527f22","#3a1d04","#56341a","#331c17","#5a352a","#302210"],outline:"black",texture:"speckles",description:"Earth"},force:{name:"Force",category:"Damage Types",foreground:"white",background:["#FF97FF","#FF68FF","#C651C6"],outline:"#570000",texture:"stars",description:"Force"},psychic:{name:"Psychic",category:"Damage Types",foreground:"#D6A8FF",background:["#313866","#504099","#66409E","#934FC3","#C949FC","#313866"],outline:"black",texture:"speckles",description:"Psychic"},necrotic:{name:"Necrotic",category:"Damage Types",foreground:"#ffffff",background:"#6F0000",outline:"black",texture:"skulls",description:"Necrotic"},breebaby:{name:"Pastel Sunset",category:"Custom Sets",foreground:["#5E175E","#564A5E","#45455E","#3D5A5E","#1E595E","#5E3F3D","#5E1E29","#283C5E","#25295E"],background:["#FE89CF","#DFD4F2","#C2C2E8","#CCE7FA","#A1D9FC","#F3C3C2","#EB8993","#8EA1D2","#7477AD"],outline:"white",texture:"marble",description:"Pastel Sunset, for Breyanna"},pinkdreams:{name:"Pink Dreams",category:"Custom Sets",foreground:"white",background:["#ff007c","#df73ff","#f400a1","#df00ff","#ff33cc"],outline:"#570000",texture:"skulls",description:"Pink Dreams, for Ethan"},inspired:{name:"Inspired",category:"Custom Sets",foreground:"#FFD800",background:"#C4C4B6",outline:"#8E8E86",texture:"none",description:"Inspired, for Austin"},bloodmoon:{name:"Blood Moon",category:"Custom Sets",foreground:"#CDB800",background:"#6F0000",outline:"black",texture:"marble",description:"Blood Moon, for Jared"},starynight:{name:"Stary Night",category:"Custom Sets",foreground:"#4F708F",background:["#091636","#233660","#4F708F","#8597AD","#E2E2E2"],outline:"white",texture:"speckles",description:"Stary Night, for Mai"},glitterparty:{name:"Glitter Party",category:"Custom Sets",foreground:"white",background:["#FFB5F5","#7FC9FF","#A17FFF"],outline:"none",texture:"glitter",description:"Glitter Party, for Austin"},astralsea:{name:"Astral Sea",category:"Custom Sets",foreground:"#565656",background:"white",outline:"none",texture:"astral",description:"The Astral Sea, for Austin"},bronze:{name:"Thylean Bronze",description:"Thylean Bronze by @SpencerThayer",category:"Custom Sets",foreground:["#FF9159","#FFB066","#FFBF59","#FFD059"],background:["#705206","#7A4E06","#643100","#7A2D06"],outline:["#3D2D03","#472D04","#301700","#471A04"],edge:["#FF5D0D","#FF7B00","#FFA20D","#FFBA0D"],texture:["bronze01","bronze02","bronze03","bronze03a","bronze03b","bronze04"]},dragons:{name:"Here be Dragons",category:"Custom Sets",foreground:"#FFFFFF",background:["#B80000","#4D5A5A","#5BB8FF","#7E934E","#FFFFFF","#F6ED7C","#7797A3","#A78437","#862C1A","#FFDF8A"],outline:"black",texture:["dragon","lizard"],description:"Here be Dragons"},birdup:{name:"Bird Up",category:"Custom Sets",foreground:"#FFFFFF",background:["#F11602","#FFC000","#6EC832","#0094BC","#05608D","#FEABB3","#F75680","#F3F0DF","#C7A57F"],outline:"black",texture:"bird",description:"Bird Up!"},tigerking:{name:"Tiger King",category:"Other",foreground:"#ffffff",background:"#FFCC40",outline:"black",texture:["leopard","tiger","cheetah"],description:"Leopard Print"},covid:{name:"COViD",category:"Other",foreground:"#A9FF70",background:["#a6ff00","#83b625","#5ace04","#69f006","#b0f006","#93bc25"],outline:"black",texture:"fire",description:"Covid-19"},acleaf:{name:"Animal Crossing",category:"Other",foreground:"#00FF00",background:"#07540A",outline:"black",texture:"acleaf",description:"Animal Crossing Leaf"},isabelle:{name:"Isabelle",category:"Other",foreground:"white",background:"#FEE5CC",outline:"black",texture:"isabelle",description:"Isabelle"},thecage:{name:"Nicholas Cage",category:"Other",foreground:"#ffffff",background:"#ffffff",outline:"black",texture:"thecage",description:"Nicholas Cage"},test:{name:"Test",category:"Colors",foreground:["#00FF00","#0000FF","#FF0000"],background:["#FF0000","#00FF00","#0000FF"],outline:"black",texture:"none",description:"Test"},rainbow:{name:"Rainblow",category:"Colors",foreground:["#FF5959","#FFA74F","#FFFF56","#59FF59","#2374FF","#00FFFF","#FF59FF"],background:["#900000","#CE3900","#BCBC00","#00B500","#00008E","#008282","#A500A5"],outline:"black",texture:"none",description:"Rainblow"},black:{name:"Black",category:"Colors",foreground:"#ffffff",background:"#000000",outline:"black",texture:"none",description:"Black"},white:{name:"White",category:"Colors",foreground:"#000000",background:"#FFFFFF",outline:"#FFFFFF",texture:"none",description:"White"},swrpg_abi:{name:"Star Wars RPG - Ability",category:"Star Wars™ RPG",foreground:"#00FF00",background:["#3D9238","#52B848","#5EAC56","#9ECB9A"],outline:"#000000",texture:"cloudy_2",description:"Star Wars™ RPG Ability Dice"},swrpg_pro:{name:"Star Wars RPG - Proficiency",category:"Star Wars™ RPG",foreground:"#FFFF00",background:["#CABB1C","#F9E33B","#FFE900","#F0E49D"],outline:"#000000",texture:"paper",description:"Star Wars™ RPG Proficiency Dice"},swrpg_dif:{name:"Star Wars RPG - Difficulty",category:"Star Wars™ RPG",foreground:"#8000FC",background:["#39165F","#664B84","#50247E","#745F88"],outline:"#000000",texture:"cloudy_2",description:"Star Wars™ RPG Difficulty Dice"},swrpg_cha:{name:"Star Wars RPG - Challenge",category:"Star Wars™ RPG",foreground:"#FF0000",background:["#A91F32","#EB4254","#E51836","#BA3645"],outline:"#000000",texture:"paper",description:"Star Wars™ RPG Challenge Dice"},swrpg_boo:{name:"Star Wars RPG - Boost",category:"Star Wars™ RPG",foreground:"#00FFFF",background:["#4B9DC6","#689FC4","#85CFF2","#8FC0D8"],outline:"#000000",texture:"glitter",description:"Star Wars™ RPG Boost Dice"},swrpg_set:{name:"Star Wars RPG - Setback",category:"Star Wars™ RPG",foreground:"#111111",background:["#252223","#241F21","#282828","#111111"],outline:"#ffffff",texture:"glitter",description:"Star Wars™ RPG Setback Dice"},swrpg_for:{name:"Star Wars RPG - Force",category:"Star Wars™ RPG",foreground:"#000000",background:["#F3F3F3","#D3D3D3","#BABABA","#FFFFFF"],outline:"#FFFFFF",texture:"stars",description:"Star Wars™ RPG Force Dice"},swa_red:{name:"Armada Attack - Red",category:"Star Wars™ Armada",foreground:"#ffffff",background:["#440D19","#8A1425","#C72336","#C04551"],outline:"none",texture:"stainedglass",description:"Star Wars™ Armada Red Attack Dice"},swa_blue:{name:"Armada Attack - Blue",category:"Star Wars™ Armada",foreground:"#ffffff",background:["#212642","#28286E","#2B348C","#3D4BB5","#5D64AB"],outline:"none",texture:"stainedglass",description:"Star Wars™ Armada Blue Attack Dice"},swa_black:{name:"Armada Attack - Black",category:"Star Wars™ Armada",foreground:"#ffffff",background:["#252223","#241F21","#282828","#111111"],outline:"none",texture:"stainedglass",description:"Star Wars™ Armada Black Attack Dice"},xwing_red:{name:"X-Wing Attack - Red",category:"Star Wars™ X-Wing",foreground:"#ffffff",background:["#440D19","#8A1425","#C72336","#C04551"],outline:"none",texture:"stars",description:"Star Wars™ X-Wing Red Attack Dice"},xwing_green:{name:"X-Wing Attack - Green",category:"Star Wars™ X-Wing",foreground:"#ffffff",background:["#3D9238","#52B848","#5EAC56","#9ECB9A"],outline:"none",texture:"stars",description:"Star Wars™ X-Wing Green Attack Dice"},swl_atkred:{name:"Legion Attack - Red",category:"Star Wars™ Legion",foreground:"#ffffff",background:["#440D19","#8A1425","#C72336","#C04551"],outline:"none",texture:"fire",description:"Star Wars™ Legion Red Attack Dice"},swl_atkblack:{name:"Legion Attack - Black",category:"Star Wars™ Legion",foreground:"#ffffff",background:["#252223","#241F21","#282828","#111111"],outline:"none",texture:"fire",description:"Star Wars™ Legion Black Attack Dice"},swl_atkwhite:{name:"Legion Attack - White",category:"Star Wars™ Legion",foreground:"#000000",background:["#ffffff","#DFF4FA","#BCBCBC","#F1EDE2","#F2ECE0"],outline:"none",texture:"fire",description:"Star Wars™ Legion White Attack Dice"},swl_defred:{name:"Legion Defense - Red",category:"Star Wars™ Legion",foreground:"#ffffff",background:["#440D19","#8A1425","#C72336","#C04551"],outline:"none",texture:"fire",description:"Star Wars™ Legion Red Defense Dice"},swl_defwhite:{name:"Legion Defense - White",category:"Star Wars™ Legion",foreground:"#000000",background:["#ffffff","#DFF4FA","#BCBCBC","#F1EDE2","#F2ECE0"],outline:"none",texture:"fire",description:"Star Wars™ Legion White Defense Dice"}};class H_{constructor(e={}){this.colorsets=[],this.assetPath=e.assetPath}async ImageLoader(e){if(Array.isArray(e)){for(let t=0,i=e.length;t<i;t++)e[t]=await this.ImageLoader(e[t]);return e}return e.source&&e.source!=""&&(e.texture=await this.loadImage(e.source)),e.source_bump&&e.source_bump!=""&&(e.bump=await this.loadImage(e.source_bump)),e}loadImage(e){return new Promise((t,i)=>{let r=new Image;r.onload=()=>t(r),r.crossOrigin="anonymous",r.src=this.assetPath+e,r.onerror=n=>i(n)}).catch(t=>{console.error("Unable to load image texture")})}async getColorSet(e){let t,i;if(typeof e=="string"&&(t=e),typeof e=="object"&&(t=e.colorset),this.colorsets.hasOwnProperty(t))return this.colorsets[t];let r=_c[t];return i=e.texture||r.texture,r.texture=this.getTexture(i),r.texture=await this.ImageLoader(r.texture),e.material&&(r.texture.material=e.material),this.colorsets[t]=r,r}async makeColorSet(e={}){if(this.colorsets.hasOwnProperty(e.name))return this.colorsets[e.name];let t=_c.white,i=Object.assign({},t,e),r=this.getTexture(i.texture);return i.texture=await this.ImageLoader(r),e.material&&(i.texture.material=e.material),i.name.toLowerCase()==="white"&&(i.name=`${Date.now()}`),this.colorsets[i.name]=i,i}getTexture(e){if(Array.isArray(e)){let t=[];for(let i=0,r=e.length;i<r;i++)t.push(this.getTexture(e[i]));return t}return qa.hasOwnProperty(e)?qa[e]:qa.none}}const V_={default:{name:"Solid Color",author:"MajorVictory",showColorPicker:!0,surface:"wood_tray",colors:{fg:"#9794ff",bg:"#0b1a3e"},cubeMap:["envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg"]},"blue-felt":{name:"Blue Felt",author:"MajorVictory",showColorPicker:!0,surface:"felt",colors:{fg:"#9794ff",bg:"#0b1a3e"},cubeMap:["envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg"]},"red-felt":{name:"Red Felt",author:"MajorVictory",showColorPicker:!0,surface:"felt",colors:{fg:"#ff9494",bg:"#4d1e1e"},cubeMap:["envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg"]},"green-felt":{name:"Green Felt",author:"MajorVictory",showColorPicker:!0,surface:"felt",colors:{fg:"#97ff94",bg:"#244d1e"},cubeMap:["envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg","envmap.jpg"]},taverntable:{name:"Old Tavern Table",author:"MajorVictory",showColorPicker:!0,surface:"wood_table",colors:{fg:"#9794ff",bg:"#0b1a3e"},cubeMap:["px.png","nx.png","py.png","ny.png","pz.png","nz.png"]},mahogany:{name:"(Mah-Hog-Any)",author:"MajorVictory",showColorPicker:!0,surface:"wood_table",colors:{fg:"#9794ff",bg:"#0b1a3e"},cubeMap:["px.png","nx.png","py.png","ny.png","pz.png","nz.png"]},stainless:{name:"Stainless Steel",author:"MajorVictory",showColorPicker:!0,surface:"metal",colors:{fg:"#9794ff",bg:"#0b1a3e"},cubeMap:["px.png","nx.png","py.png","ny.png","pz.png","nz.png"]},cyberpunk:{name:"Neo-New-Future-City",author:"MajorVictory",showColorPicker:!0,surface:"metal",colors:{fg:"#3494A6",bg:"#440B28"},cubeMap:["px.png","nx.png","py.png","ny.png","pz.png","nz.png"]},cagetown:{name:"Cage Town",author:"MajorVictory",showColorPicker:!0,surface:"wood_table",colors:{fg:"#D7A866",bg:"#282811"},cubeMap:["px.png","nx.png","py.png","ny.png","pz.png","nz.png"]}},W_=s=>{let e;return function(){let t=this,i=arguments;e&&window.cancelAnimationFrame(e),e=window.requestAnimationFrame(function(){s.apply(t,i)})}},j_={assetPath:"./",framerate:1/60,sounds:!1,volume:100,color_spotlight:15720405,shadows:!0,theme_surface:"green-felt",sound_dieMaterial:"plastic",theme_customColorset:null,theme_colorset:"white",theme_texture:"",theme_material:"glass",gravity_multiplier:400,light_intensity:.7,baseScale:100,strength:1,iterationLimit:1e3,onRollComplete:()=>{},onRerollComplete:()=>{},onAddDiceComplete:()=>{},onRemoveDiceComplete:()=>{}};class q_{constructor(e,t={}){this.initialized=!1,this.container=document.querySelector(e),this.dimensions=new Ge(this.container.clientWidth,this.container.clientHeight),this.adaptive_timestep=!1,this.last_time=0,this.running=!1,this.rolling=!1,this.threadid,this.display={currentWidth:null,currentHeight:null,containerWidth:null,containerHeight:null,aspect:null,scale:null},this.cameraHeight={max:null,close:null,medium:null,far:null},this.scene=new s1,this.world=new P_,this.dice_body_material=new Sr,this.sounds_table={},this.sounds_dice=[],this.lastSoundType="",this.lastSoundStep=0,this.lastSound=0,this.iteration,this.renderer,this.barrier,this.camera,this.light,this.light_amb,this.desk,this.box_body={},this.bodies=[],this.meshes=[],this.diceList=[],this.notationVectors=null,this.dieIndex=0,this.soundDelay=10,this.animstate="",this.selector={animate:!0,rotate:!0,intersected:null,dice:[]},Object.assign(this,j_,t),this.DiceColors=new H_({assetPath:this.assetPath}),this.DiceFactory=new Ku({baseScale:this.baseScale}),this.DiceFactory.setBumpMapping(!0),this.surface=V_[this.theme_surface].surface}enableShadows(){this.shadows=!0,this.renderer&&(this.renderer.shadowMap.enabled=this.shadows),this.light&&(this.light.castShadow=this.shadows),this.desk&&(this.desk.receiveShadow=this.shadows)}disableShadows(){this.shadows=!1,this.renderer&&(this.renderer.shadowMap.enabled=this.shadows),this.light&&(this.light.castShadow=this.shadows),this.desk&&(this.desk.receiveShadow=this.shadows)}async initialize(){this.renderer=new Uu({antialias:!0,alpha:!0}),this.container.appendChild(this.renderer.domElement),this.renderer.shadowMap.enabled=this.shadows,this.renderer.shadowMap.type=2,this.renderer.setClearColor(0,0),this.setDimensions(this.dimensions),this.world.gravity.set(0,0,-9.8*this.gravity_multiplier),this.world.broadphase=new Vu,this.world.solver.iterations=14,this.world.allowSleep=!0,this.makeWorldBox(),this.resizeWorld(),await this.loadTheme({colorset:this.theme_colorset,texture:this.theme_texture,material:this.theme_material}).catch(e=>{throw new Error("Unable to load theme")}),this.sounds&&await this.loadSounds().catch(e=>{throw new Error("Unable to load sounds")}),this.initialized=!0,this.renderer.render(this.scene,this.camera)}makeWorldBox(){Object.keys(this.box_body).length&&(this.world.removeBody(this.box_body.desk),this.world.removeBody(this.box_body.topWall),this.world.removeBody(this.box_body.bottomWall),this.world.removeBody(this.box_body.leftWall),this.world.removeBody(this.box_body.rightWall));const e=new Sr,t=new Sr;this.world.addContactMaterial(new Mr(e,this.dice_body_material,{mass:0,friction:.6,restitution:.5})),this.world.addContactMaterial(new Mr(t,this.dice_body_material,{mass:0,friction:.6,restitution:1})),this.world.addContactMaterial(new Mr(this.dice_body_material,this.dice_body_material,{mass:0,friction:.6,restitution:.5})),this.box_body.desk=new pe({allowSleep:!1,mass:0,shape:new gs,material:e}),this.world.addBody(this.box_body.desk),this.box_body.topWall=new pe({allowSleep:!1,mass:0,shape:new gs,material:t}),this.box_body.topWall.quaternion.setFromAxisAngle(new w(1,0,0),Math.PI/2),this.box_body.topWall.position.set(0,this.display.containerHeight*.93,0),this.world.addBody(this.box_body.topWall),this.box_body.bottomWall=new pe({allowSleep:!1,mass:0,shape:new gs,material:t}),this.box_body.bottomWall.quaternion.setFromAxisAngle(new w(1,0,0),-Math.PI/2),this.box_body.bottomWall.position.set(0,-this.display.containerHeight*.93,0),this.world.addBody(this.box_body.bottomWall),this.box_body.leftWall=new pe({allowSleep:!1,mass:0,shape:new gs,material:t}),this.box_body.leftWall.quaternion.setFromAxisAngle(new w(0,1,0),-Math.PI/2),this.box_body.leftWall.position.set(this.display.containerWidth*.93,0,0),this.world.addBody(this.box_body.leftWall),this.box_body.rightWall=new pe({allowSleep:!1,mass:0,shape:new gs,material:t}),this.box_body.rightWall.quaternion.setFromAxisAngle(new w(0,1,0),Math.PI/2),this.box_body.rightWall.position.set(-this.display.containerWidth*.93,0,0),this.world.addBody(this.box_body.rightWall)}async loadTheme(e){let t;this.theme_customColorset?t=await this.DiceColors.makeColorSet(this.theme_customColorset):t=await this.DiceColors.getColorSet(e),this.DiceFactory.applyColorSet(t),this.colorData=t}async loadSounds(){let e={felt:7,wood_table:7,wood_tray:7,metal:9},t={coin:6,metal:12,plastic:15,wood:12};const i=this.colorData.texture.material.match(/wood|metal/g);if(this.sound_dieMaterial=i?this.colorData.texture.material:"plastic",!this.sounds_table.hasOwnProperty(this.surface)){this.sounds_table[this.surface]=[];let r=e[this.surface];for(let n=1;n<=r;++n){const o=await this.loadAudio(this.assetPath+"sounds/surfaces/surface_"+this.surface+n+".mp3");this.sounds_table[this.surface].push(o)}}if(!this.sounds_dice.hasOwnProperty("coin")){this.sounds_dice.coin=[];let r=t.coin;for(let n=1;n<=r;++n){const o=await this.loadAudio(this.assetPath+"sounds/dicehit/dicehit_coin"+n+".mp3");this.sounds_dice.coin.push(o)}}if(!this.sounds_dice.hasOwnProperty(this.sound_dieMaterial)){this.sounds_dice[this.sound_dieMaterial]=[];let r=t[this.sound_dieMaterial];for(let n=1;n<=r;++n){const o=await this.loadAudio(this.assetPath+"sounds/dicehit/dicehit_"+this.sound_dieMaterial+n+".mp3");this.sounds_dice[this.sound_dieMaterial].push(o)}}}loadAudio(e){return new Promise((t,i)=>{let r=new Audio;r.oncanplaythrough=()=>t(r),r.crossOrigin="anonymous",r.src=e,r.onerror=n=>i(n)}).catch(t=>{console.error("Unable to load audio")})}async updateConfig(e={}){Object.apply(this,e),this.theme_customColorset=e.theme_customColorset?e.theme_customColorset:null,e.theme_colorset&&(this.theme_colorset=e.theme_colorset),e.theme_texture&&(this.theme_texture=e.theme_texture),e.theme_material&&(this.theme_material=e.theme_material),(e.theme_colorset||e.theme_texture||e.theme_material||e.theme_customColorset)&&await this.loadTheme({colorset:this.theme_colorset,texture:this.theme_texture,material:this.theme_material})}setDimensions(e){switch(this.display.currentWidth=this.container.clientWidth/2,this.display.currentHeight=this.container.clientHeight/2,e?(this.display.containerWidth=e.x,this.display.containerHeight=e.y):(this.display.containerWidth=this.display.currentWidth,this.display.containerHeight=this.display.currentHeight),this.display.aspect=Math.min(this.display.currentWidth/this.display.containerWidth,this.display.currentHeight/this.display.containerHeight),this.display.scale=Math.sqrt(this.display.containerWidth*this.display.containerWidth+this.display.containerHeight*this.display.containerHeight)/13,this.makeWorldBox(),this.renderer.setSize(this.display.currentWidth*2,this.display.currentHeight*2),this.cameraHeight.max=this.display.currentHeight/this.display.aspect/Math.tan(10*Math.PI/180),this.cameraHeight.medium=this.cameraHeight.max/1.5,this.cameraHeight.far=this.cameraHeight.max,this.cameraHeight.close=this.cameraHeight.max/2,this.camera&&this.scene.remove(this.camera),this.camera=new Vt(20,this.display.currentWidth/this.display.currentHeight,1,this.cameraHeight.max*1.3),this.animstate){case"selector":this.camera.position.z=this.selector.dice.length>9?this.cameraHeight.far:this.selector.dice.length<6?this.cameraHeight.close:this.cameraHeight.medium;break;case"throw":case"afterthrow":default:this.camera.position.z=this.cameraHeight.far}this.camera.lookAt(new H(0,0,0));const t=Math.max(this.display.containerWidth,this.display.containerHeight);this.light&&this.scene.remove(this.light),this.light_amb&&this.scene.remove(this.light_amb),this.light=new h1(this.color_spotlight,this.light_intensity),this.light.position.set(-t/2,t/2,t*3),this.light.target.position.set(0,0,0),this.light.distance=t*5,this.light.angle=Math.PI/4,this.light.castShadow=this.shadows,this.light.shadow.camera.near=t/10,this.light.shadow.camera.far=t*5,this.light.shadow.camera.fov=50,this.light.shadow.bias=.001,this.light.shadow.mapSize.width=1024,this.light.shadow.mapSize.height=1024,this.scene.add(this.light),this.light_amb=new l1(16777147,6776689,this.light_intensity),this.scene.add(this.light_amb),this.desk&&this.scene.remove(this.desk);let i=new n1;i.opacity=.5,this.desk=new vi(new Yn(this.display.containerWidth*6,this.display.containerHeight*6,1,1),i),this.desk.receiveShadow=this.shadows,this.scene.add(this.desk),this.renderer.render(this.scene,this.camera)}resizeWorld(){const e=W_(()=>{const t=this.renderer.domElement,i=this.container.clientWidth,r=this.container.clientHeight,n=t.width!==i||t.height!==r;return n&&this.setDimensions(new Ge(this.container.clientWidth,this.container.clientHeight)),n});window.addEventListener("resize",e)}vectorRand({x:e,y:t}){let i=Math.random()*Math.PI/5-Math.PI/5/2,r={x:e*Math.cos(i)-t*Math.sin(i),y:e*Math.sin(i)+t*Math.cos(i)};return r.x==0&&(r.x=.01),r.y==0&&(r.y=.01),r}getNotationVectors(e,t,i,r){let n=new vc(e);for(let o in n.set){const a=this.DiceFactory.get(n.set[o].type);let l=n.set[o].num,c=n.set[o].op,u=n.set[o].sid,d=n.set[o].gid,h=n.set[o].glvl,m=n.set[o].func,g=n.set[o].args;for(let f=0;f<l;f++){let p=this.vectorRand(t);p.x/=r,p.y/=r;let v={x:this.display.containerWidth*(p.x>0?-1:1)*.9,y:this.display.containerHeight*(p.y>0?-1:1)*.9,z:Math.random()*200+200},_=Math.abs(p.x/p.y);_>1?v.y/=_:v.x*=_;let b=this.vectorRand(t);b.x/=r,b.y/=r;let x,S,E;a.shape!="d2"?(x={x:b.x*i,y:b.y*i,z:-10},S={x:-(Math.random()*p.y*5+a.inertia*p.y),y:Math.random()*p.x*5+a.inertia*p.x,z:0},E={x:Math.random(),y:Math.random(),z:Math.random(),a:Math.random()}):(x={x:b.x*i/10,y:b.y*i/10,z:3e3},S={x:12*a.inertia,y:1*a.inertia,z:0},E={x:1,y:1,z:Math.random(),a:Math.random()}),n.vectors.push({index:this.dieIndex++,type:a.type,op:c,sid:u,gid:d,glvl:h,func:m,args:g,pos:v,velocity:x,angle:S,axis:E})}}return n}swapDiceFace(e,t){const i=this.DiceFactory.get(e.notation.type);if(e.resultReason="forced",i.shape=="d4"){this.swapDiceFace_D4(e,t);return}i.values;let r=parseInt(e.getLastValue().value);t=parseInt(t),e.notation.type=="d10"&&r==0&&(r=10),e.notation.type=="d100"&&r==0&&(r=100),e.notation.type=="d100"&&r>0&&r<10&&(r*=10),e.notation.type=="d10"&&t==0&&(t=10),e.notation.type=="d100"&&t==0&&(t=100),e.notation.type=="d100"&&t>0&&t<10&&(t*=10);let n=i.values.indexOf(r),o=i.values.indexOf(t);if(n<0||o<0||n==o)return;let a=e.geometry.clone(),l=[],c=[],u=2;i.shape=="d10"&&(u=1);let d,h=o+u;i.shape!="d2"?(d=n+u,h=o+u):(d=n+1,h=o+1);for(var m=0,g=a.groups.length;m<g;++m){const f=a.groups[m].materialIndex;if(f==d){l.push(m);continue}if(f==h){c.push(m);continue}}if(!(l.length<=0||c.length<=0)){for(let f=0,p=c.length;f<p;f++)a.groups[c[f]].materialIndex=d;for(let f=0,p=l.length;f<p;f++)a.groups[l[f]].materialIndex=h;e.geometry=a,e.result=[]}}swapDiceFace_D4(e,t){const i=this.DiceFactory.get(e.notation.type);let r=parseInt(e.getLastValue().value);if(t=parseInt(t),!(r>=1&&r<=4))return;let n=t-r,o=e.geometry.clone();for(let a=0,l=o.groups.length;a<l;++a){const c=o.groups[a];let u=c.materialIndex;if(u!=0){for(u+=n-1;u>4;)u-=4;for(;u<1;)u+=4;c.materialIndex=u+1}}n!=0&&(n<0&&(n+=4),e.material=this.DiceFactory.createMaterials(i,0,0,!1,n)),e.geometry=o}spawnDice(e,t=!1){const{pos:i,axis:r,angle:n,velocity:o}=e;let a;if(t)a=t,a.stopped=0,this.world.removeBody(a.body);else{if(a=this.DiceFactory.create(e.type,this.colorData),!a)return;a.notation=e,a.result=[],a.stopped=0,a.castShadow=this.shadows,this.scene.add(a),this.diceList.push(a)}a.body=new pe({allowSleep:!0,sleepSpeedLimit:75,sleepTimeLimit:.9,mass:a.mass,shape:a.geometry.cannon_shape,material:this.dice_body_material}),a.body.type=pe.DYNAMIC,a.body.position.set(i.x,i.y,i.z),a.body.quaternion.setFromAxisAngle(new w(r.x,r.y,r.z),r.a*Math.PI*2),a.body.angularVelocity.set(n.x,n.y,n.z),a.body.velocity.set(o.x,o.y,o.z),a.body.linearDamping=.1,a.body.angularDamping=.1,a.body.diceShape=a.shape,a.body.sleepState=0,a.body.addEventListener("collide",this.eventCollide.bind(this)),this.world.addBody(a.body)}eventCollide({body:e,target:t}){if(this.animstate=="simulate"||!this.sounds||!e||this.volume<=0)return;let i=Date.now(),r=e.mass>0?"dice":"table";if(!((this.lastSoundStep==e.world.stepnumber||this.lastSound>i)&&r!="dice")&&!((this.lastSoundStep==e.world.stepnumber||this.lastSound>i)&&r=="dice"&&this.lastSoundType=="dice")){if(e.mass>0){let n=e.velocity.length();if(n<250)return;let o;e.diceShape==="d2"?o=this.sounds_dice.coin[Math.floor(Math.random()*this.sounds_dice.coin.length)]:o=this.sounds_dice[this.sound_dieMaterial][Math.floor(Math.random()*this.sounds_dice[this.sound_dieMaterial].length)],o&&(o.volume=Math.min(n/8e3,this.volume/100),o.play().catch(a=>{})),this.lastSoundType="dice"}else{let n=t.velocity.length();if(n<250)return;let o=this.surface,a=this.sounds_table[o],l=a[Math.floor(Math.random()*a.length)];l&&(l.volume=Math.min(n/8e3,this.volume/100),l.play().catch(c=>{})),this.lastSoundType="table"}this.lastSoundStep=e.world.stepnumber,this.lastSound=i+this.soundDelay}}checkForRethrow(e){return e.notation.func&&e.notation.func.toLowerCase(),!1}throwFinished(){const e=this.iteration>this.iterationLimit;for(let t=0,i=this.diceList.length;t<i;++t){const r=this.diceList[t],n=pe.SLEEPING;if(r.body.sleepState<n&&!e)return!1;if(r.body.sleepState==n||e){if(r.body.type===pe.KINEMATIC)continue;let o=!1;if(r.result.length==0?(r.storeRolledValue(r.resultReason),o=this.checkForRethrow(r)):r.result.length>0&&r.rerolling&&(r.rerolling=!1,r.storeRolledValue("reroll"),o=this.checkForRethrow(r)),o)return r.rerolls+=1,r.rerolling=!0,r.body.wakeUp(),r.body.type=pe.DYNAMIC,r.body.angularVelocity=new w(25,25,25),r.body.velocity=new w(0,0,3e3),!1;r.rerolling=!1,r.body.type=pe.KINEMATIC}}return!0}simulateThrow(){for(this.animstate="simulate",this.iteration=0,this.rolling=!0;!this.throwFinished(!0);)++this.iteration,this.world.step(this.framerate)}animateThrow(e,t){this.animstate="throw";let i=Date.now();this.last_time=this.last_time||i-this.framerate*1e3;let r=(i-this.last_time)/1e3;++this.iteration;let n=Math.floor(r/this.framerate);for(let o=0;o<n;o++)this.world.step(this.framerate),++this.steps;for(let o in this.scene.children){let a=this.scene.children[o];a.body!=null&&(a.position.copy(a.body.position),a.quaternion.copy(a.body.quaternion))}if(this.renderer.render(this.scene,this.camera),this.last_time=this.last_time+n*this.framerate*1e3,this.running==e&&this.throwFinished()){this.running=!1,this.rolling=!1,t&&t.call(this,this.notationVectors),this.running=Date.now(),this.animateAfterThrow(this.running);return}this.running==e&&((o,a,l,c,u)=>{!l&&r<this.framerate?setTimeout(()=>{requestAnimationFrame(()=>{o.call(this,a,c,u)})},(this.framerate-r)*1e3):requestAnimationFrame(()=>{o.call(this,a,c,u)})}).bind(this)(this.animateThrow,e,this.adaptive_timestep,t)}animateAfterThrow(e){this.animstate="afterthrow";let t=Date.now(),i=(t-this.last_time)/1e3;i>3&&(i=this.framerate),this.running=!1,this.last_time=t,this.renderer.render(this.scene,this.camera),this.running==e&&((r,n,o)=>{!o&&i<this.framerate?setTimeout(()=>{requestAnimationFrame(()=>{r.call(this,n)})},(this.framerate-i)*1e3):requestAnimationFrame(()=>{r.call(this,n)})}).bind(this)(this.animateAfterThrow,e,this.adaptive_timestep)}startClickThrow(e){this.rolling&&(this.clearDice(),this.rolling=!1);let t={x:(Math.random()*2-.5)*this.display.currentWidth,y:-(Math.random()*2-.5)*this.display.currentHeight},i=Math.sqrt(t.x*t.x+t.y*t.y)+100,r=(Math.random()+3)*i*this.strength;return this.getNotationVectors(e,t,r,i)}clearDice(){this.running=!1;let e;for(;e=this.diceList.pop();)this.scene.remove(e),e.body&&this.world.removeBody(e.body);this.renderer.render(this.scene,this.camera),setTimeout(()=>{this.renderer.render(this.scene,this.camera)},100)}getDiceResults(e){if(e!==void 0)return{type:this.diceList[e].shape,sides:parseInt(this.diceList[e].shape.substring(1)),id:e,...this.diceList[e].result.at(-1)};let t=0;const i=this.notationVectors.constant?parseInt(`${this.notationVectors.op}${this.notationVectors.constant}`):0;let r=i;return{notation:this.notationVectors.notation,sets:this.notationVectors.set.map(n=>{const o=t+n.num-1;let a=0;const l=[];for(let u=t;u<=o;u++){if(this.diceList[t].result.at(-1).reason==="remove"){t++;continue}l.push({type:n.type,sides:parseInt(n.type.substring(1)),id:t,...this.diceList[t].result.at(-1)}),a+=this.diceList[t].result.at(-1).value,t++}const c={num:n.num,type:n.type,sides:parseInt(n.type.substring(1)),rolls:l,total:a};return r+=a,c}),modifier:i,total:r}}async roll(e){if(this.notationVectors=this.startClickThrow(e),this.notationVectors)return new Promise((t,i)=>{this.rollDice(()=>{const r=this.getDiceResults();this.onRollComplete(r);const n=new CustomEvent("rollComplete",{detail:r});document.dispatchEvent(n),t(r)})})}async reroll(e){return this.rolling=!0,this.running=Date.now(),this.iteration=0,new Promise((t,i)=>{e.forEach(r=>{const n=this.diceList[r];n.rerolls+=1,n.rerolling=!0,n.body.wakeUp(),n.body.type=pe.DYNAMIC,n.body.angularVelocity=new w(25,25,25),n.body.velocity=new w(0,0,3e3)}),this.animateThrow(this.running,()=>{const r=e.map(o=>this.getDiceResults(o));this.onRerollComplete(r);const n=new CustomEvent("rerollComplete",{detail:r});document.dispatchEvent(n),t(r)})})}async add(e){let t=this.diceList.length;if(!t)return this.roll(e);let i=this.startClickThrow(e),r=[];for(let n=0,o=i.vectors.length;n<o;++n)this.spawnDice(i.vectors[n]);this.simulateThrow(),this.steps=0,this.iteration=0;for(let n=0,o=i.vectors.length;n<o;++n){const a=t+n;!this.diceList[a]||(this.spawnDice(i.vectors[n],this.diceList[a]),r.push(a))}if(i.result&&i.result.length>0)for(let n=0;n<i.result.length;n++){const o=t+n;let a=this.diceList[o];!a||a.getLastValue().value!=i.result[n]&&this.swapDiceFace(a,i.result[n])}return this.notationVectors=vc.mergeNotation(this.notationVectors,i),new Promise((n,o)=>{const a=()=>{const l=r.map(u=>this.getDiceResults(u));this.onAddDiceComplete(l);const c=new CustomEvent("addDiceComplete",{detail:l});document.dispatchEvent(c),n(l)};this.rolling=!0,this.running=Date.now(),this.last_time=0,this.animateThrow(this.running,a)})}async remove(e){return new Promise((t,i)=>{const r=[];e.forEach(o=>{const a=this.diceList[o];a.body&&this.world.removeBody(a.body),this.scene.remove(a),a.storeRolledValue("remove"),r.push(this.getDiceResults(o))}),this.renderer.render(this.scene,this.camera),this.onRemoveDiceComplete(r);const n=new CustomEvent("removeDiceComplete",{detail:r});document.dispatchEvent(n),t(r)})}rollDice(e){if(this.notationVectors.error){e.call(this);return}this.clearDice();for(let t=0,i=this.notationVectors.vectors.length;t<i;++t)this.spawnDice(this.notationVectors.vectors[t]);this.simulateThrow(),this.steps=0,this.iteration=0;for(let t=0,i=this.diceList.length;t<i;++t)!this.diceList[t]||this.spawnDice(this.notationVectors.vectors[t],this.diceList[t]);if(this.notationVectors.result&&this.notationVectors.result.length>0)for(let t=0;t<this.notationVectors.result.length;t++){let i=this.diceList[t];!i||i.getLastValue().value!=this.notationVectors.result[t]&&this.swapDiceFace(i,this.notationVectors.result[t])}this.rolling=!0,this.running=Date.now(),this.last_time=0,this.animateThrow(this.running,e)}}const Y_=["id"],X_=Os({__name:"DiceRoller",props:{id:{}},setup(s,{expose:e}){const t=s;let i=null,r=null;Jc(async()=>{i=new q_("#"+t.id,{light_intensity:1,gravity_multiplier:600,baseScale:100,strength:2,theme_customColorset:{background:"#00478d",foreground:"#ffffff",texture:"marble",material:"metal"},onRollComplete:()=>{r&&r()}}),await i.initialize()});function n(){return new Promise(a=>{const l=Math.floor(Math.random()*6)+1,c=Math.floor(Math.random()*6)+1,u=Math.floor(Math.random()*6)+1;r=()=>{a(l+c+u),r=null},i==null||i.roll("3d6@"+l+","+c+","+u)})}function o(){i==null||i.clearDice()}return e({roll:n,reset:o}),(a,l)=>($e(),Ke("div",{class:"dice-roller",id:a.id},null,8,Y_))}}),$_=qn(X_,[["__scopeId","data-v-687c60ac"]]),Z_={key:0},K_={key:1},J_={key:2,src:ep,alt:"Poison"},Q_={key:3},ex={key:4,class:"current-count"},tx=Os({__name:"PlayerCounter",props:{player:{},trackCommander:{},rotate:{}},setup(s,{expose:e}){const t=s,i=Kt(),r=Kt(0),n=Kt(null),o=Kt(!1),a=gi({get:()=>t.trackCommander?t.trackCommander.id===t.player.id?"CMD":(t.trackCommander.commanderDamage||(t.trackCommander.commanderDamage={}),t.trackCommander.commanderDamage[t.player.id]||(t.trackCommander.commanderDamage[t.player.id]=0),t.trackCommander.commanderDamage[t.player.id]):t.player.trackPoison?t.player.poisonCounters||0:t.player.health,set:d=>{if(t.trackCommander){if(t.trackCommander.id===t.player.id)return;t.trackCommander.commanderDamage||(t.trackCommander.commanderDamage={}),t.trackCommander.commanderDamage[t.player.id]=d}else t.player.trackPoison?t.player.poisonCounters=d:t.player.health=d}}),l=gi(()=>t.rotate?t.rotate===90?"left":"upside-down":"normal"),c=gi(()=>t.player.poisonCounters>=10||t.player.health<=0||t.player.commanderDamage&&Object.entries(t.player.commanderDamage).some(d=>d[1]>=21));As(()=>t.player.trackPoison,d=>{d||(r.value=0,n.value&&(clearTimeout(n.value),n.value=null))}),As(()=>t.trackCommander,d=>{d||(r.value=0,n.value&&(clearTimeout(n.value),n.value=null))});function u(d,h){const m=d.target;if(!m)return;n.value&&(clearTimeout(n.value),n.value=null);const g=Date.now();let f=null;const p=setTimeout(()=>{f=setInterval(()=>{typeof a.value=="number"&&(h==="inc"?(a.value+=5,r.value+=5):(a.value-=5,r.value-=5))},250)},501);m.addEventListener("mouseup",()=>{if(f?(clearInterval(f),f=null):clearTimeout(p),Date.now()-g<=500){if(typeof a.value!="number")return;h==="inc"?(a.value++,r.value++):(a.value--,r.value--)}n.value=setTimeout(()=>{r.value=0},3e3)},{once:!0})}return e({roll:()=>i.value?i.value.roll():Promise.resolve(0),showTheyAreFirst:()=>{o.value=!0,setTimeout(()=>{o.value=!1},5e3)},resetRoll:()=>{i.value&&i.value.reset()}}),(d,h)=>($e(),Ke(lt,null,[We("div",{class:Gt(["decrement",`rot--${l.value}`]),style:{position:"relative"},onMousedown:h[0]||(h[0]=m=>u(m,"dec"))},h[2]||(h[2]=[We("span",null,"-",-1)]),34),We("div",{class:Gt(["counter",`rot--${l.value}`])},[o.value?($e(),Ke("span",K_,h[4]||(h[4]=[ro("GOING FIRST!"),We("br",null,null,-1)]))):($e(),Ke("span",Z_,[ro(Ls(a.value),1),h[3]||(h[3]=We("br",null,null,-1))])),d.player.trackPoison?($e(),Ke("img",J_)):vr("",!0),c.value?($e(),Ke("span",Q_,"LOSER!")):vr("",!0),r.value?($e(),Ke("small",ex,Ls(r.value>0?"+"+r.value:r.value),1)):vr("",!0)],2),We("div",{class:Gt(["increment",`rot--${l.value}`]),style:{position:"relative"},onMousedown:h[1]||(h[1]=m=>u(m,"inc"))},h[5]||(h[5]=[We("span",null,"+",-1)]),34),Nt($_,{id:"diceroller_"+d.player.id,ref_key:"diceRoller",ref:i},null,8,["id"])],64))}}),ix=qn(tx,[["__scopeId","data-v-2b8ff06f"]]),rx={class:"wrapper"},sx=["onMousedown","onTouchstart"],nx={key:1,class:"color-select-modal"},ax={class:"color-row"},ox=["onClick"],lx={class:"color-row"},cx=["onClick"],ux=["onClick"],hx={class:"color-row"},dx=["onClick"],fx=["onClick"],px=["onClick"],mx=Os({__name:"App",setup(s){const e=Kt(40),t=Kt(!1),i=Kt([{colors:[],id:0,health:40,trackPoison:!1,poisonCounters:0,commanderDamage:{}},{colors:[],id:1,health:40,trackPoison:!1,poisonCounters:0,commanderDamage:{}}]),r=Kt(void 0);let n=new Map;function o(h,m,g,f=!1){if(console.log("playerClickDown",h,m,g),!h.target)return;const p=f?h.touches[0].clientX:h.clientX,v=f?h.touches[0].clientY:h.clientY;function _(b){var E,R,y,A,F,z;const x=(f?b.touches[0].clientX-p:b.clientX)-p,S=(f?b.touches[0].clientY-v:b.clientY)-v;console.log(x,S,x,S),g==="normal"?S<-100?(a(m,"up"),(E=b.target)==null||E.removeEventListener(f?"touchmove":"mousemove",_)):S>100&&(a(m,"down"),(R=b.target)==null||R.removeEventListener(f?"touchmove":"mousemove",_)):g==="upside-down"?S<-100?(a(m,"down"),(y=b.target)==null||y.removeEventListener(f?"touchmove":"mousemove",_)):S>100&&(a(m,"up"),(A=b.target)==null||A.removeEventListener(f?"touchmove":"mousemove",_)):g==="left"&&(x>100?(a(m,"up"),(F=b.target)==null||F.removeEventListener(f?"touchmove":"mousemove",_)):x<-100&&(a(m,"down"),(z=b.target)==null||z.removeEventListener(f?"touchmove":"mousemove",_)))}h.target.addEventListener(f?"touchmove":"mousemove",_),h.target.addEventListener(f?"touchend":"mouseup",()=>{var b;(b=h.target)==null||b.removeEventListener(f?"touchmove":"mousemove",_)},{once:!0})}function a(h,m){m==="up"?r.value||h.trackPoison?(r.value=void 0,h.trackPoison=!1):r.value=h:m==="down"&&(r.value||h.trackPoison?(r.value=void 0,h.trackPoison=!1):h.trackPoison=!0)}function l(h,...m){if(h==="color-select")t.value=!t.value;else if(h==="player-count"){const g=m[0];i.value=[];for(let f=0;f<g;f++)i.value.push({id:f,colors:[],health:e.value,commanderDamage:{},poisonCounters:0,trackPoison:!1})}else if(h==="life-total"){const g=m[0];e.value=g;for(const f of i.value)f.health=g}else if(h==="roll"){if(n.size===0)return;const g=new Map;async function f(p){const v=p.map(async b=>{const x=n.get(b);if(!x)return;const S=await x.roll();g.set(b,S)});if(await Promise.all(v),new Set(g.values()).size===1)await f(p);else{const b=Math.max(...g.values()),x=Array.from(g.entries()).filter(([S,E])=>E===b).map(([S])=>S);if(x.length===1){const S=n.get(x[0]);S&&S.showTheyAreFirst(),setTimeout(()=>{for(const E of p){const R=n.get(E);R&&R.resetRoll()}},2e3)}else await f(x)}}f(Array.from(n.keys()))}else if(h==="reset"){for(const g of i.value)g.health=e.value,g.commanderDamage={},g.poisonCounters=0,g.trackPoison=!1;r.value=void 0}}function c(h,m){if(!m)h.colors=[];else{const g=h.colors.indexOf(m);g===-1?h.colors.push(m):h.colors.splice(g,1)}}function u(h,m){return m?h.colors.includes(m):h.colors.length===0}function d(h,m){m&&n.set(h,m)}return(h,m)=>($e(),Ke("div",rx,[Nt(qf,{players:i.value,onAction:l},{default:Ka(({player:g,rotate:f})=>[Nt(Qf,{player:g},{default:Ka(()=>[t.value?($e(),Ke("div",nx,[We("div",ax,[We("img",{src:Sf,alt:"colorless",onClick:p=>c(g),class:Gt({active:u(g)})},null,10,ox)]),We("div",lx,[We("img",{src:Ef,alt:"white",onClick:p=>c(g,ni(bt).White),class:Gt({active:u(g,ni(bt).White)})},null,10,cx),We("img",{src:Tf,alt:"blue",onClick:p=>c(g,ni(bt).Blue),class:Gt({active:u(g,ni(bt).Blue)})},null,10,ux)]),We("div",hx,[We("img",{src:Af,alt:"black",onClick:p=>c(g,ni(bt).Black),class:Gt({active:u(g,ni(bt).Black)})},null,10,dx),We("img",{src:Cf,alt:"green",onClick:p=>c(g,ni(bt).Green),class:Gt({active:u(g,ni(bt).Green)})},null,10,fx),We("img",{src:Lf,alt:"red",onClick:p=>c(g,ni(bt).Red),class:Gt({active:u(g,ni(bt).Red)})},null,10,px)])])):($e(),Ke("div",{key:0,class:Gt(["player-cell",f?`rot-${f}`:""]),onMousedown:hl(p=>o(p,g,f?f===90?"left":"upside-down":"normal"),["self"]),onTouchstart:hl(p=>o(p,g,f?f===90?"left":"upside-down":"normal",!0),["self"])},[Nt(ix,{player:g,rotate:f,"track-commander":r.value,ref:p=>d(g,p)},null,8,["player","rotate","track-commander"])],42,sx))]),_:2},1032,["player"])]),_:1},8,["players"])]))}}),gx=qn(mx,[["__scopeId","data-v-1fb73228"]]),vx=bf(gx);vx.mount("#app");
